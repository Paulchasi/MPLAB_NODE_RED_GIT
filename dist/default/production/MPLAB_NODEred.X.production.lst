

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 09 17:24:05 2021

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.05
    44                           ; Generated 20/12/2018 GMT
    45                           ; 
    46                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F18875 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001C                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  008C                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0110                     	;# 
   137  0110                     	;# 
   138  0111                     	;# 
   139  0112                     	;# 
   140  0112                     	;# 
   141  0113                     	;# 
   142  0114                     	;# 
   143  0114                     	;# 
   144  0115                     	;# 
   145  0116                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0119                     	;# 
   149  0119                     	;# 
   150  0119                     	;# 
   151  011A                     	;# 
   152  011A                     	;# 
   153  011A                     	;# 
   154  011B                     	;# 
   155  011B                     	;# 
   156  011B                     	;# 
   157  011B                     	;# 
   158  011B                     	;# 
   159  011C                     	;# 
   160  011C                     	;# 
   161  011C                     	;# 
   162  011D                     	;# 
   163  011D                     	;# 
   164  011D                     	;# 
   165  011E                     	;# 
   166  011E                     	;# 
   167  011E                     	;# 
   168  011F                     	;# 
   169  011F                     	;# 
   170  011F                     	;# 
   171  011F                     	;# 
   172  011F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  018E                     	;# 
   176  018F                     	;# 
   177  0190                     	;# 
   178  0191                     	;# 
   179  0192                     	;# 
   180  0196                     	;# 
   181  0197                     	;# 
   182  0198                     	;# 
   183  0199                     	;# 
   184  019A                     	;# 
   185  019B                     	;# 
   186  019C                     	;# 
   187  020C                     	;# 
   188  020C                     	;# 
   189  020D                     	;# 
   190  020E                     	;# 
   191  020F                     	;# 
   192  020F                     	;# 
   193  0210                     	;# 
   194  0210                     	;# 
   195  0211                     	;# 
   196  0211                     	;# 
   197  0212                     	;# 
   198  0212                     	;# 
   199  0213                     	;# 
   200  0214                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0216                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0217                     	;# 
   207  0218                     	;# 
   208  0218                     	;# 
   209  0219                     	;# 
   210  021A                     	;# 
   211  021B                     	;# 
   212  021B                     	;# 
   213  021C                     	;# 
   214  021C                     	;# 
   215  021D                     	;# 
   216  021D                     	;# 
   217  021E                     	;# 
   218  021F                     	;# 
   219  028C                     	;# 
   220  028C                     	;# 
   221  028D                     	;# 
   222  028D                     	;# 
   223  028E                     	;# 
   224  028F                     	;# 
   225  0290                     	;# 
   226  0290                     	;# 
   227  0291                     	;# 
   228  0292                     	;# 
   229  0292                     	;# 
   230  0293                     	;# 
   231  0293                     	;# 
   232  0294                     	;# 
   233  0295                     	;# 
   234  0296                     	;# 
   235  0296                     	;# 
   236  0297                     	;# 
   237  0298                     	;# 
   238  0298                     	;# 
   239  0299                     	;# 
   240  0299                     	;# 
   241  029A                     	;# 
   242  029B                     	;# 
   243  029C                     	;# 
   244  029C                     	;# 
   245  029D                     	;# 
   246  030C                     	;# 
   247  030C                     	;# 
   248  030D                     	;# 
   249  030E                     	;# 
   250  030F                     	;# 
   251  0310                     	;# 
   252  0310                     	;# 
   253  0311                     	;# 
   254  0312                     	;# 
   255  0313                     	;# 
   256  0314                     	;# 
   257  0314                     	;# 
   258  0315                     	;# 
   259  0316                     	;# 
   260  0317                     	;# 
   261  0318                     	;# 
   262  0318                     	;# 
   263  0319                     	;# 
   264  031A                     	;# 
   265  031B                     	;# 
   266  031C                     	;# 
   267  031C                     	;# 
   268  031D                     	;# 
   269  031E                     	;# 
   270  031F                     	;# 
   271  038C                     	;# 
   272  038C                     	;# 
   273  038D                     	;# 
   274  038E                     	;# 
   275  0390                     	;# 
   276  0390                     	;# 
   277  0391                     	;# 
   278  0392                     	;# 
   279  040C                     	;# 
   280  040D                     	;# 
   281  040E                     	;# 
   282  040F                     	;# 
   283  0410                     	;# 
   284  0411                     	;# 
   285  0416                     	;# 
   286  0416                     	;# 
   287  0417                     	;# 
   288  0418                     	;# 
   289  0418                     	;# 
   290  0419                     	;# 
   291  041A                     	;# 
   292  041A                     	;# 
   293  041B                     	;# 
   294  041C                     	;# 
   295  041C                     	;# 
   296  041D                     	;# 
   297  041E                     	;# 
   298  041F                     	;# 
   299  048C                     	;# 
   300  048C                     	;# 
   301  048D                     	;# 
   302  048E                     	;# 
   303  048F                     	;# 
   304  048F                     	;# 
   305  0490                     	;# 
   306  0491                     	;# 
   307  0492                     	;# 
   308  0492                     	;# 
   309  0493                     	;# 
   310  0494                     	;# 
   311  0495                     	;# 
   312  0495                     	;# 
   313  0496                     	;# 
   314  0497                     	;# 
   315  0498                     	;# 
   316  0499                     	;# 
   317  049A                     	;# 
   318  049B                     	;# 
   319  049C                     	;# 
   320  049D                     	;# 
   321  050C                     	;# 
   322  050C                     	;# 
   323  050D                     	;# 
   324  050E                     	;# 
   325  050F                     	;# 
   326  050F                     	;# 
   327  0510                     	;# 
   328  0511                     	;# 
   329  0512                     	;# 
   330  0512                     	;# 
   331  0513                     	;# 
   332  0514                     	;# 
   333  0515                     	;# 
   334  0515                     	;# 
   335  0516                     	;# 
   336  0517                     	;# 
   337  0518                     	;# 
   338  0519                     	;# 
   339  051A                     	;# 
   340  051B                     	;# 
   341  051C                     	;# 
   342  051D                     	;# 
   343  058C                     	;# 
   344  058C                     	;# 
   345  058D                     	;# 
   346  058E                     	;# 
   347  058F                     	;# 
   348  058F                     	;# 
   349  0590                     	;# 
   350  0591                     	;# 
   351  0592                     	;# 
   352  0593                     	;# 
   353  060C                     	;# 
   354  060D                     	;# 
   355  060E                     	;# 
   356  060F                     	;# 
   357  0610                     	;# 
   358  0611                     	;# 
   359  0612                     	;# 
   360  0613                     	;# 
   361  0614                     	;# 
   362  0616                     	;# 
   363  0617                     	;# 
   364  0618                     	;# 
   365  0619                     	;# 
   366  061A                     	;# 
   367  061B                     	;# 
   368  061C                     	;# 
   369  061D                     	;# 
   370  061E                     	;# 
   371  068C                     	;# 
   372  068D                     	;# 
   373  068E                     	;# 
   374  068F                     	;# 
   375  0690                     	;# 
   376  0691                     	;# 
   377  0692                     	;# 
   378  0693                     	;# 
   379  0694                     	;# 
   380  070C                     	;# 
   381  070D                     	;# 
   382  070E                     	;# 
   383  070F                     	;# 
   384  0710                     	;# 
   385  0711                     	;# 
   386  0712                     	;# 
   387  0713                     	;# 
   388  0714                     	;# 
   389  0716                     	;# 
   390  0717                     	;# 
   391  0718                     	;# 
   392  0719                     	;# 
   393  071A                     	;# 
   394  071B                     	;# 
   395  071C                     	;# 
   396  071D                     	;# 
   397  071E                     	;# 
   398  0796                     	;# 
   399  0797                     	;# 
   400  0798                     	;# 
   401  0799                     	;# 
   402  079A                     	;# 
   403  079B                     	;# 
   404  080C                     	;# 
   405  080D                     	;# 
   406  080E                     	;# 
   407  080F                     	;# 
   408  0810                     	;# 
   409  0811                     	;# 
   410  0812                     	;# 
   411  0813                     	;# 
   412  0814                     	;# 
   413  081A                     	;# 
   414  081B                     	;# 
   415  081C                     	;# 
   416  081D                     	;# 
   417  081E                     	;# 
   418  081F                     	;# 
   419  088C                     	;# 
   420  088D                     	;# 
   421  088E                     	;# 
   422  088F                     	;# 
   423  0890                     	;# 
   424  0891                     	;# 
   425  0892                     	;# 
   426  0893                     	;# 
   427  0895                     	;# 
   428  0896                     	;# 
   429  0897                     	;# 
   430  0898                     	;# 
   431  0899                     	;# 
   432  089A                     	;# 
   433  089B                     	;# 
   434  090C                     	;# 
   435  090E                     	;# 
   436  090F                     	;# 
   437  091F                     	;# 
   438  091F                     	;# 
   439  098F                     	;# 
   440  098F                     	;# 
   441  0990                     	;# 
   442  0991                     	;# 
   443  0992                     	;# 
   444  0993                     	;# 
   445  0994                     	;# 
   446  0995                     	;# 
   447  0996                     	;# 
   448  0997                     	;# 
   449  0E0F                     	;# 
   450  0E10                     	;# 
   451  0E11                     	;# 
   452  0E12                     	;# 
   453  0E13                     	;# 
   454  0E14                     	;# 
   455  0E15                     	;# 
   456  0E16                     	;# 
   457  0E17                     	;# 
   458  0E18                     	;# 
   459  0E19                     	;# 
   460  0E1A                     	;# 
   461  0E1B                     	;# 
   462  0E1C                     	;# 
   463  0E1D                     	;# 
   464  0E1E                     	;# 
   465  0E1F                     	;# 
   466  0E20                     	;# 
   467  0E21                     	;# 
   468  0E22                     	;# 
   469  0E23                     	;# 
   470  0E24                     	;# 
   471  0E25                     	;# 
   472  0E26                     	;# 
   473  0E27                     	;# 
   474  0E28                     	;# 
   475  0E29                     	;# 
   476  0E2A                     	;# 
   477  0E2B                     	;# 
   478  0E2C                     	;# 
   479  0E2D                     	;# 
   480  0E2E                     	;# 
   481  0E2F                     	;# 
   482  0E30                     	;# 
   483  0E31                     	;# 
   484  0E32                     	;# 
   485  0E33                     	;# 
   486  0E34                     	;# 
   487  0E35                     	;# 
   488  0E36                     	;# 
   489  0E37                     	;# 
   490  0E8F                     	;# 
   491  0E90                     	;# 
   492  0E91                     	;# 
   493  0E92                     	;# 
   494  0E93                     	;# 
   495  0E94                     	;# 
   496  0E95                     	;# 
   497  0E96                     	;# 
   498  0E97                     	;# 
   499  0E9C                     	;# 
   500  0E9D                     	;# 
   501  0E9E                     	;# 
   502  0EA1                     	;# 
   503  0EA2                     	;# 
   504  0EA3                     	;# 
   505  0EA4                     	;# 
   506  0EA5                     	;# 
   507  0EA9                     	;# 
   508  0EAA                     	;# 
   509  0EAB                     	;# 
   510  0EAC                     	;# 
   511  0EB1                     	;# 
   512  0EB2                     	;# 
   513  0EB3                     	;# 
   514  0EB8                     	;# 
   515  0EB9                     	;# 
   516  0EBA                     	;# 
   517  0EBB                     	;# 
   518  0EBC                     	;# 
   519  0EBD                     	;# 
   520  0EBE                     	;# 
   521  0EC3                     	;# 
   522  0EC5                     	;# 
   523  0EC6                     	;# 
   524  0EC7                     	;# 
   525  0EC8                     	;# 
   526  0EC9                     	;# 
   527  0ECA                     	;# 
   528  0ECB                     	;# 
   529  0ECC                     	;# 
   530  0F10                     	;# 
   531  0F11                     	;# 
   532  0F12                     	;# 
   533  0F13                     	;# 
   534  0F14                     	;# 
   535  0F15                     	;# 
   536  0F16                     	;# 
   537  0F17                     	;# 
   538  0F18                     	;# 
   539  0F19                     	;# 
   540  0F1A                     	;# 
   541  0F1B                     	;# 
   542  0F1C                     	;# 
   543  0F1D                     	;# 
   544  0F1E                     	;# 
   545  0F1F                     	;# 
   546  0F20                     	;# 
   547  0F21                     	;# 
   548  0F22                     	;# 
   549  0F23                     	;# 
   550  0F24                     	;# 
   551  0F25                     	;# 
   552  0F26                     	;# 
   553  0F27                     	;# 
   554  0F28                     	;# 
   555  0F29                     	;# 
   556  0F2A                     	;# 
   557  0F2B                     	;# 
   558  0F2C                     	;# 
   559  0F2D                     	;# 
   560  0F2E                     	;# 
   561  0F2F                     	;# 
   562  0F30                     	;# 
   563  0F31                     	;# 
   564  0F32                     	;# 
   565  0F38                     	;# 
   566  0F39                     	;# 
   567  0F3A                     	;# 
   568  0F3B                     	;# 
   569  0F3C                     	;# 
   570  0F3D                     	;# 
   571  0F3E                     	;# 
   572  0F3F                     	;# 
   573  0F40                     	;# 
   574  0F41                     	;# 
   575  0F43                     	;# 
   576  0F44                     	;# 
   577  0F45                     	;# 
   578  0F46                     	;# 
   579  0F47                     	;# 
   580  0F48                     	;# 
   581  0F49                     	;# 
   582  0F4A                     	;# 
   583  0F4B                     	;# 
   584  0F4C                     	;# 
   585  0F4E                     	;# 
   586  0F4F                     	;# 
   587  0F50                     	;# 
   588  0F51                     	;# 
   589  0F52                     	;# 
   590  0F53                     	;# 
   591  0F54                     	;# 
   592  0F55                     	;# 
   593  0F56                     	;# 
   594  0F57                     	;# 
   595  0F59                     	;# 
   596  0F5A                     	;# 
   597  0F5B                     	;# 
   598  0F5C                     	;# 
   599  0F5D                     	;# 
   600  0F61                     	;# 
   601  0F62                     	;# 
   602  0F64                     	;# 
   603  0F65                     	;# 
   604  0F66                     	;# 
   605  0F67                     	;# 
   606  0F68                     	;# 
   607  0F69                     	;# 
   608  0F6A                     	;# 
   609  0F6B                     	;# 
   610  0F6C                     	;# 
   611  0F6D                     	;# 
   612  0FE4                     	;# 
   613  0FE5                     	;# 
   614  0FE6                     	;# 
   615  0FE7                     	;# 
   616  0FE8                     	;# 
   617  0FE9                     	;# 
   618  0FEA                     	;# 
   619  0FEB                     	;# 
   620  0FED                     	;# 
   621  0FEE                     	;# 
   622  0FEF                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  000F                     	;# 
   639  0010                     	;# 
   640  0011                     	;# 
   641  0012                     	;# 
   642  0013                     	;# 
   643  0014                     	;# 
   644  0015                     	;# 
   645  0016                     	;# 
   646  0017                     	;# 
   647  0018                     	;# 
   648  0019                     	;# 
   649  001A                     	;# 
   650  001C                     	;# 
   651  001C                     	;# 
   652  001D                     	;# 
   653  001D                     	;# 
   654  001E                     	;# 
   655  001F                     	;# 
   656  008C                     	;# 
   657  008C                     	;# 
   658  008D                     	;# 
   659  008E                     	;# 
   660  008E                     	;# 
   661  008F                     	;# 
   662  0090                     	;# 
   663  0090                     	;# 
   664  0091                     	;# 
   665  0093                     	;# 
   666  0094                     	;# 
   667  0095                     	;# 
   668  0096                     	;# 
   669  0097                     	;# 
   670  0098                     	;# 
   671  0099                     	;# 
   672  009A                     	;# 
   673  009B                     	;# 
   674  009C                     	;# 
   675  009D                     	;# 
   676  009E                     	;# 
   677  010C                     	;# 
   678  010D                     	;# 
   679  010E                     	;# 
   680  010E                     	;# 
   681  010F                     	;# 
   682  0110                     	;# 
   683  0110                     	;# 
   684  0111                     	;# 
   685  0112                     	;# 
   686  0112                     	;# 
   687  0113                     	;# 
   688  0114                     	;# 
   689  0114                     	;# 
   690  0115                     	;# 
   691  0116                     	;# 
   692  0116                     	;# 
   693  0117                     	;# 
   694  0119                     	;# 
   695  0119                     	;# 
   696  0119                     	;# 
   697  011A                     	;# 
   698  011A                     	;# 
   699  011A                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011B                     	;# 
   703  011B                     	;# 
   704  011B                     	;# 
   705  011C                     	;# 
   706  011C                     	;# 
   707  011C                     	;# 
   708  011D                     	;# 
   709  011D                     	;# 
   710  011D                     	;# 
   711  011E                     	;# 
   712  011E                     	;# 
   713  011E                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  011F                     	;# 
   717  011F                     	;# 
   718  011F                     	;# 
   719  018C                     	;# 
   720  018D                     	;# 
   721  018E                     	;# 
   722  018F                     	;# 
   723  0190                     	;# 
   724  0191                     	;# 
   725  0192                     	;# 
   726  0196                     	;# 
   727  0197                     	;# 
   728  0198                     	;# 
   729  0199                     	;# 
   730  019A                     	;# 
   731  019B                     	;# 
   732  019C                     	;# 
   733  020C                     	;# 
   734  020C                     	;# 
   735  020D                     	;# 
   736  020E                     	;# 
   737  020F                     	;# 
   738  020F                     	;# 
   739  0210                     	;# 
   740  0210                     	;# 
   741  0211                     	;# 
   742  0211                     	;# 
   743  0212                     	;# 
   744  0212                     	;# 
   745  0213                     	;# 
   746  0214                     	;# 
   747  0215                     	;# 
   748  0215                     	;# 
   749  0216                     	;# 
   750  0216                     	;# 
   751  0217                     	;# 
   752  0217                     	;# 
   753  0218                     	;# 
   754  0218                     	;# 
   755  0219                     	;# 
   756  021A                     	;# 
   757  021B                     	;# 
   758  021B                     	;# 
   759  021C                     	;# 
   760  021C                     	;# 
   761  021D                     	;# 
   762  021D                     	;# 
   763  021E                     	;# 
   764  021F                     	;# 
   765  028C                     	;# 
   766  028C                     	;# 
   767  028D                     	;# 
   768  028D                     	;# 
   769  028E                     	;# 
   770  028F                     	;# 
   771  0290                     	;# 
   772  0290                     	;# 
   773  0291                     	;# 
   774  0292                     	;# 
   775  0292                     	;# 
   776  0293                     	;# 
   777  0293                     	;# 
   778  0294                     	;# 
   779  0295                     	;# 
   780  0296                     	;# 
   781  0296                     	;# 
   782  0297                     	;# 
   783  0298                     	;# 
   784  0298                     	;# 
   785  0299                     	;# 
   786  0299                     	;# 
   787  029A                     	;# 
   788  029B                     	;# 
   789  029C                     	;# 
   790  029C                     	;# 
   791  029D                     	;# 
   792  030C                     	;# 
   793  030C                     	;# 
   794  030D                     	;# 
   795  030E                     	;# 
   796  030F                     	;# 
   797  0310                     	;# 
   798  0310                     	;# 
   799  0311                     	;# 
   800  0312                     	;# 
   801  0313                     	;# 
   802  0314                     	;# 
   803  0314                     	;# 
   804  0315                     	;# 
   805  0316                     	;# 
   806  0317                     	;# 
   807  0318                     	;# 
   808  0318                     	;# 
   809  0319                     	;# 
   810  031A                     	;# 
   811  031B                     	;# 
   812  031C                     	;# 
   813  031C                     	;# 
   814  031D                     	;# 
   815  031E                     	;# 
   816  031F                     	;# 
   817  038C                     	;# 
   818  038C                     	;# 
   819  038D                     	;# 
   820  038E                     	;# 
   821  0390                     	;# 
   822  0390                     	;# 
   823  0391                     	;# 
   824  0392                     	;# 
   825  040C                     	;# 
   826  040D                     	;# 
   827  040E                     	;# 
   828  040F                     	;# 
   829  0410                     	;# 
   830  0411                     	;# 
   831  0416                     	;# 
   832  0416                     	;# 
   833  0417                     	;# 
   834  0418                     	;# 
   835  0418                     	;# 
   836  0419                     	;# 
   837  041A                     	;# 
   838  041A                     	;# 
   839  041B                     	;# 
   840  041C                     	;# 
   841  041C                     	;# 
   842  041D                     	;# 
   843  041E                     	;# 
   844  041F                     	;# 
   845  048C                     	;# 
   846  048C                     	;# 
   847  048D                     	;# 
   848  048E                     	;# 
   849  048F                     	;# 
   850  048F                     	;# 
   851  0490                     	;# 
   852  0491                     	;# 
   853  0492                     	;# 
   854  0492                     	;# 
   855  0493                     	;# 
   856  0494                     	;# 
   857  0495                     	;# 
   858  0495                     	;# 
   859  0496                     	;# 
   860  0497                     	;# 
   861  0498                     	;# 
   862  0499                     	;# 
   863  049A                     	;# 
   864  049B                     	;# 
   865  049C                     	;# 
   866  049D                     	;# 
   867  050C                     	;# 
   868  050C                     	;# 
   869  050D                     	;# 
   870  050E                     	;# 
   871  050F                     	;# 
   872  050F                     	;# 
   873  0510                     	;# 
   874  0511                     	;# 
   875  0512                     	;# 
   876  0512                     	;# 
   877  0513                     	;# 
   878  0514                     	;# 
   879  0515                     	;# 
   880  0515                     	;# 
   881  0516                     	;# 
   882  0517                     	;# 
   883  0518                     	;# 
   884  0519                     	;# 
   885  051A                     	;# 
   886  051B                     	;# 
   887  051C                     	;# 
   888  051D                     	;# 
   889  058C                     	;# 
   890  058C                     	;# 
   891  058D                     	;# 
   892  058E                     	;# 
   893  058F                     	;# 
   894  058F                     	;# 
   895  0590                     	;# 
   896  0591                     	;# 
   897  0592                     	;# 
   898  0593                     	;# 
   899  060C                     	;# 
   900  060D                     	;# 
   901  060E                     	;# 
   902  060F                     	;# 
   903  0610                     	;# 
   904  0611                     	;# 
   905  0612                     	;# 
   906  0613                     	;# 
   907  0614                     	;# 
   908  0616                     	;# 
   909  0617                     	;# 
   910  0618                     	;# 
   911  0619                     	;# 
   912  061A                     	;# 
   913  061B                     	;# 
   914  061C                     	;# 
   915  061D                     	;# 
   916  061E                     	;# 
   917  068C                     	;# 
   918  068D                     	;# 
   919  068E                     	;# 
   920  068F                     	;# 
   921  0690                     	;# 
   922  0691                     	;# 
   923  0692                     	;# 
   924  0693                     	;# 
   925  0694                     	;# 
   926  070C                     	;# 
   927  070D                     	;# 
   928  070E                     	;# 
   929  070F                     	;# 
   930  0710                     	;# 
   931  0711                     	;# 
   932  0712                     	;# 
   933  0713                     	;# 
   934  0714                     	;# 
   935  0716                     	;# 
   936  0717                     	;# 
   937  0718                     	;# 
   938  0719                     	;# 
   939  071A                     	;# 
   940  071B                     	;# 
   941  071C                     	;# 
   942  071D                     	;# 
   943  071E                     	;# 
   944  0796                     	;# 
   945  0797                     	;# 
   946  0798                     	;# 
   947  0799                     	;# 
   948  079A                     	;# 
   949  079B                     	;# 
   950  080C                     	;# 
   951  080D                     	;# 
   952  080E                     	;# 
   953  080F                     	;# 
   954  0810                     	;# 
   955  0811                     	;# 
   956  0812                     	;# 
   957  0813                     	;# 
   958  0814                     	;# 
   959  081A                     	;# 
   960  081B                     	;# 
   961  081C                     	;# 
   962  081D                     	;# 
   963  081E                     	;# 
   964  081F                     	;# 
   965  088C                     	;# 
   966  088D                     	;# 
   967  088E                     	;# 
   968  088F                     	;# 
   969  0890                     	;# 
   970  0891                     	;# 
   971  0892                     	;# 
   972  0893                     	;# 
   973  0895                     	;# 
   974  0896                     	;# 
   975  0897                     	;# 
   976  0898                     	;# 
   977  0899                     	;# 
   978  089A                     	;# 
   979  089B                     	;# 
   980  090C                     	;# 
   981  090E                     	;# 
   982  090F                     	;# 
   983  091F                     	;# 
   984  091F                     	;# 
   985  098F                     	;# 
   986  098F                     	;# 
   987  0990                     	;# 
   988  0991                     	;# 
   989  0992                     	;# 
   990  0993                     	;# 
   991  0994                     	;# 
   992  0995                     	;# 
   993  0996                     	;# 
   994  0997                     	;# 
   995  0E0F                     	;# 
   996  0E10                     	;# 
   997  0E11                     	;# 
   998  0E12                     	;# 
   999  0E13                     	;# 
  1000  0E14                     	;# 
  1001  0E15                     	;# 
  1002  0E16                     	;# 
  1003  0E17                     	;# 
  1004  0E18                     	;# 
  1005  0E19                     	;# 
  1006  0E1A                     	;# 
  1007  0E1B                     	;# 
  1008  0E1C                     	;# 
  1009  0E1D                     	;# 
  1010  0E1E                     	;# 
  1011  0E1F                     	;# 
  1012  0E20                     	;# 
  1013  0E21                     	;# 
  1014  0E22                     	;# 
  1015  0E23                     	;# 
  1016  0E24                     	;# 
  1017  0E25                     	;# 
  1018  0E26                     	;# 
  1019  0E27                     	;# 
  1020  0E28                     	;# 
  1021  0E29                     	;# 
  1022  0E2A                     	;# 
  1023  0E2B                     	;# 
  1024  0E2C                     	;# 
  1025  0E2D                     	;# 
  1026  0E2E                     	;# 
  1027  0E2F                     	;# 
  1028  0E30                     	;# 
  1029  0E31                     	;# 
  1030  0E32                     	;# 
  1031  0E33                     	;# 
  1032  0E34                     	;# 
  1033  0E35                     	;# 
  1034  0E36                     	;# 
  1035  0E37                     	;# 
  1036  0E8F                     	;# 
  1037  0E90                     	;# 
  1038  0E91                     	;# 
  1039  0E92                     	;# 
  1040  0E93                     	;# 
  1041  0E94                     	;# 
  1042  0E95                     	;# 
  1043  0E96                     	;# 
  1044  0E97                     	;# 
  1045  0E9C                     	;# 
  1046  0E9D                     	;# 
  1047  0E9E                     	;# 
  1048  0EA1                     	;# 
  1049  0EA2                     	;# 
  1050  0EA3                     	;# 
  1051  0EA4                     	;# 
  1052  0EA5                     	;# 
  1053  0EA9                     	;# 
  1054  0EAA                     	;# 
  1055  0EAB                     	;# 
  1056  0EAC                     	;# 
  1057  0EB1                     	;# 
  1058  0EB2                     	;# 
  1059  0EB3                     	;# 
  1060  0EB8                     	;# 
  1061  0EB9                     	;# 
  1062  0EBA                     	;# 
  1063  0EBB                     	;# 
  1064  0EBC                     	;# 
  1065  0EBD                     	;# 
  1066  0EBE                     	;# 
  1067  0EC3                     	;# 
  1068  0EC5                     	;# 
  1069  0EC6                     	;# 
  1070  0EC7                     	;# 
  1071  0EC8                     	;# 
  1072  0EC9                     	;# 
  1073  0ECA                     	;# 
  1074  0ECB                     	;# 
  1075  0ECC                     	;# 
  1076  0F10                     	;# 
  1077  0F11                     	;# 
  1078  0F12                     	;# 
  1079  0F13                     	;# 
  1080  0F14                     	;# 
  1081  0F15                     	;# 
  1082  0F16                     	;# 
  1083  0F17                     	;# 
  1084  0F18                     	;# 
  1085  0F19                     	;# 
  1086  0F1A                     	;# 
  1087  0F1B                     	;# 
  1088  0F1C                     	;# 
  1089  0F1D                     	;# 
  1090  0F1E                     	;# 
  1091  0F1F                     	;# 
  1092  0F20                     	;# 
  1093  0F21                     	;# 
  1094  0F22                     	;# 
  1095  0F23                     	;# 
  1096  0F24                     	;# 
  1097  0F25                     	;# 
  1098  0F26                     	;# 
  1099  0F27                     	;# 
  1100  0F28                     	;# 
  1101  0F29                     	;# 
  1102  0F2A                     	;# 
  1103  0F2B                     	;# 
  1104  0F2C                     	;# 
  1105  0F2D                     	;# 
  1106  0F2E                     	;# 
  1107  0F2F                     	;# 
  1108  0F30                     	;# 
  1109  0F31                     	;# 
  1110  0F32                     	;# 
  1111  0F38                     	;# 
  1112  0F39                     	;# 
  1113  0F3A                     	;# 
  1114  0F3B                     	;# 
  1115  0F3C                     	;# 
  1116  0F3D                     	;# 
  1117  0F3E                     	;# 
  1118  0F3F                     	;# 
  1119  0F40                     	;# 
  1120  0F41                     	;# 
  1121  0F43                     	;# 
  1122  0F44                     	;# 
  1123  0F45                     	;# 
  1124  0F46                     	;# 
  1125  0F47                     	;# 
  1126  0F48                     	;# 
  1127  0F49                     	;# 
  1128  0F4A                     	;# 
  1129  0F4B                     	;# 
  1130  0F4C                     	;# 
  1131  0F4E                     	;# 
  1132  0F4F                     	;# 
  1133  0F50                     	;# 
  1134  0F51                     	;# 
  1135  0F52                     	;# 
  1136  0F53                     	;# 
  1137  0F54                     	;# 
  1138  0F55                     	;# 
  1139  0F56                     	;# 
  1140  0F57                     	;# 
  1141  0F59                     	;# 
  1142  0F5A                     	;# 
  1143  0F5B                     	;# 
  1144  0F5C                     	;# 
  1145  0F5D                     	;# 
  1146  0F61                     	;# 
  1147  0F62                     	;# 
  1148  0F64                     	;# 
  1149  0F65                     	;# 
  1150  0F66                     	;# 
  1151  0F67                     	;# 
  1152  0F68                     	;# 
  1153  0F69                     	;# 
  1154  0F6A                     	;# 
  1155  0F6B                     	;# 
  1156  0F6C                     	;# 
  1157  0F6D                     	;# 
  1158  0FE4                     	;# 
  1159  0FE5                     	;# 
  1160  0FE6                     	;# 
  1161  0FE7                     	;# 
  1162  0FE8                     	;# 
  1163  0FE9                     	;# 
  1164  0FEA                     	;# 
  1165  0FEB                     	;# 
  1166  0FED                     	;# 
  1167  0FEE                     	;# 
  1168  0FEF                     	;# 
  1169  0000                     	;# 
  1170  0001                     	;# 
  1171  0002                     	;# 
  1172  0003                     	;# 
  1173  0004                     	;# 
  1174  0005                     	;# 
  1175  0006                     	;# 
  1176  0007                     	;# 
  1177  0008                     	;# 
  1178  0009                     	;# 
  1179  000A                     	;# 
  1180  000B                     	;# 
  1181  000C                     	;# 
  1182  000D                     	;# 
  1183  000E                     	;# 
  1184  000F                     	;# 
  1185  0010                     	;# 
  1186  0011                     	;# 
  1187  0012                     	;# 
  1188  0013                     	;# 
  1189  0014                     	;# 
  1190  0015                     	;# 
  1191  0016                     	;# 
  1192  0017                     	;# 
  1193  0018                     	;# 
  1194  0019                     	;# 
  1195  001A                     	;# 
  1196  001C                     	;# 
  1197  001C                     	;# 
  1198  001D                     	;# 
  1199  001D                     	;# 
  1200  001E                     	;# 
  1201  001F                     	;# 
  1202  008C                     	;# 
  1203  008C                     	;# 
  1204  008D                     	;# 
  1205  008E                     	;# 
  1206  008E                     	;# 
  1207  008F                     	;# 
  1208  0090                     	;# 
  1209  0090                     	;# 
  1210  0091                     	;# 
  1211  0093                     	;# 
  1212  0094                     	;# 
  1213  0095                     	;# 
  1214  0096                     	;# 
  1215  0097                     	;# 
  1216  0098                     	;# 
  1217  0099                     	;# 
  1218  009A                     	;# 
  1219  009B                     	;# 
  1220  009C                     	;# 
  1221  009D                     	;# 
  1222  009E                     	;# 
  1223  010C                     	;# 
  1224  010D                     	;# 
  1225  010E                     	;# 
  1226  010E                     	;# 
  1227  010F                     	;# 
  1228  0110                     	;# 
  1229  0110                     	;# 
  1230  0111                     	;# 
  1231  0112                     	;# 
  1232  0112                     	;# 
  1233  0113                     	;# 
  1234  0114                     	;# 
  1235  0114                     	;# 
  1236  0115                     	;# 
  1237  0116                     	;# 
  1238  0116                     	;# 
  1239  0117                     	;# 
  1240  0119                     	;# 
  1241  0119                     	;# 
  1242  0119                     	;# 
  1243  011A                     	;# 
  1244  011A                     	;# 
  1245  011A                     	;# 
  1246  011B                     	;# 
  1247  011B                     	;# 
  1248  011B                     	;# 
  1249  011B                     	;# 
  1250  011B                     	;# 
  1251  011C                     	;# 
  1252  011C                     	;# 
  1253  011C                     	;# 
  1254  011D                     	;# 
  1255  011D                     	;# 
  1256  011D                     	;# 
  1257  011E                     	;# 
  1258  011E                     	;# 
  1259  011E                     	;# 
  1260  011F                     	;# 
  1261  011F                     	;# 
  1262  011F                     	;# 
  1263  011F                     	;# 
  1264  011F                     	;# 
  1265  018C                     	;# 
  1266  018D                     	;# 
  1267  018E                     	;# 
  1268  018F                     	;# 
  1269  0190                     	;# 
  1270  0191                     	;# 
  1271  0192                     	;# 
  1272  0196                     	;# 
  1273  0197                     	;# 
  1274  0198                     	;# 
  1275  0199                     	;# 
  1276  019A                     	;# 
  1277  019B                     	;# 
  1278  019C                     	;# 
  1279  020C                     	;# 
  1280  020C                     	;# 
  1281  020D                     	;# 
  1282  020E                     	;# 
  1283  020F                     	;# 
  1284  020F                     	;# 
  1285  0210                     	;# 
  1286  0210                     	;# 
  1287  0211                     	;# 
  1288  0211                     	;# 
  1289  0212                     	;# 
  1290  0212                     	;# 
  1291  0213                     	;# 
  1292  0214                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0216                     	;# 
  1296  0216                     	;# 
  1297  0217                     	;# 
  1298  0217                     	;# 
  1299  0218                     	;# 
  1300  0218                     	;# 
  1301  0219                     	;# 
  1302  021A                     	;# 
  1303  021B                     	;# 
  1304  021B                     	;# 
  1305  021C                     	;# 
  1306  021C                     	;# 
  1307  021D                     	;# 
  1308  021D                     	;# 
  1309  021E                     	;# 
  1310  021F                     	;# 
  1311  028C                     	;# 
  1312  028C                     	;# 
  1313  028D                     	;# 
  1314  028D                     	;# 
  1315  028E                     	;# 
  1316  028F                     	;# 
  1317  0290                     	;# 
  1318  0290                     	;# 
  1319  0291                     	;# 
  1320  0292                     	;# 
  1321  0292                     	;# 
  1322  0293                     	;# 
  1323  0293                     	;# 
  1324  0294                     	;# 
  1325  0295                     	;# 
  1326  0296                     	;# 
  1327  0296                     	;# 
  1328  0297                     	;# 
  1329  0298                     	;# 
  1330  0298                     	;# 
  1331  0299                     	;# 
  1332  0299                     	;# 
  1333  029A                     	;# 
  1334  029B                     	;# 
  1335  029C                     	;# 
  1336  029C                     	;# 
  1337  029D                     	;# 
  1338  030C                     	;# 
  1339  030C                     	;# 
  1340  030D                     	;# 
  1341  030E                     	;# 
  1342  030F                     	;# 
  1343  0310                     	;# 
  1344  0310                     	;# 
  1345  0311                     	;# 
  1346  0312                     	;# 
  1347  0313                     	;# 
  1348  0314                     	;# 
  1349  0314                     	;# 
  1350  0315                     	;# 
  1351  0316                     	;# 
  1352  0317                     	;# 
  1353  0318                     	;# 
  1354  0318                     	;# 
  1355  0319                     	;# 
  1356  031A                     	;# 
  1357  031B                     	;# 
  1358  031C                     	;# 
  1359  031C                     	;# 
  1360  031D                     	;# 
  1361  031E                     	;# 
  1362  031F                     	;# 
  1363  038C                     	;# 
  1364  038C                     	;# 
  1365  038D                     	;# 
  1366  038E                     	;# 
  1367  0390                     	;# 
  1368  0390                     	;# 
  1369  0391                     	;# 
  1370  0392                     	;# 
  1371  040C                     	;# 
  1372  040D                     	;# 
  1373  040E                     	;# 
  1374  040F                     	;# 
  1375  0410                     	;# 
  1376  0411                     	;# 
  1377  0416                     	;# 
  1378  0416                     	;# 
  1379  0417                     	;# 
  1380  0418                     	;# 
  1381  0418                     	;# 
  1382  0419                     	;# 
  1383  041A                     	;# 
  1384  041A                     	;# 
  1385  041B                     	;# 
  1386  041C                     	;# 
  1387  041C                     	;# 
  1388  041D                     	;# 
  1389  041E                     	;# 
  1390  041F                     	;# 
  1391  048C                     	;# 
  1392  048C                     	;# 
  1393  048D                     	;# 
  1394  048E                     	;# 
  1395  048F                     	;# 
  1396  048F                     	;# 
  1397  0490                     	;# 
  1398  0491                     	;# 
  1399  0492                     	;# 
  1400  0492                     	;# 
  1401  0493                     	;# 
  1402  0494                     	;# 
  1403  0495                     	;# 
  1404  0495                     	;# 
  1405  0496                     	;# 
  1406  0497                     	;# 
  1407  0498                     	;# 
  1408  0499                     	;# 
  1409  049A                     	;# 
  1410  049B                     	;# 
  1411  049C                     	;# 
  1412  049D                     	;# 
  1413  050C                     	;# 
  1414  050C                     	;# 
  1415  050D                     	;# 
  1416  050E                     	;# 
  1417  050F                     	;# 
  1418  050F                     	;# 
  1419  0510                     	;# 
  1420  0511                     	;# 
  1421  0512                     	;# 
  1422  0512                     	;# 
  1423  0513                     	;# 
  1424  0514                     	;# 
  1425  0515                     	;# 
  1426  0515                     	;# 
  1427  0516                     	;# 
  1428  0517                     	;# 
  1429  0518                     	;# 
  1430  0519                     	;# 
  1431  051A                     	;# 
  1432  051B                     	;# 
  1433  051C                     	;# 
  1434  051D                     	;# 
  1435  058C                     	;# 
  1436  058C                     	;# 
  1437  058D                     	;# 
  1438  058E                     	;# 
  1439  058F                     	;# 
  1440  058F                     	;# 
  1441  0590                     	;# 
  1442  0591                     	;# 
  1443  0592                     	;# 
  1444  0593                     	;# 
  1445  060C                     	;# 
  1446  060D                     	;# 
  1447  060E                     	;# 
  1448  060F                     	;# 
  1449  0610                     	;# 
  1450  0611                     	;# 
  1451  0612                     	;# 
  1452  0613                     	;# 
  1453  0614                     	;# 
  1454  0616                     	;# 
  1455  0617                     	;# 
  1456  0618                     	;# 
  1457  0619                     	;# 
  1458  061A                     	;# 
  1459  061B                     	;# 
  1460  061C                     	;# 
  1461  061D                     	;# 
  1462  061E                     	;# 
  1463  068C                     	;# 
  1464  068D                     	;# 
  1465  068E                     	;# 
  1466  068F                     	;# 
  1467  0690                     	;# 
  1468  0691                     	;# 
  1469  0692                     	;# 
  1470  0693                     	;# 
  1471  0694                     	;# 
  1472  070C                     	;# 
  1473  070D                     	;# 
  1474  070E                     	;# 
  1475  070F                     	;# 
  1476  0710                     	;# 
  1477  0711                     	;# 
  1478  0712                     	;# 
  1479  0713                     	;# 
  1480  0714                     	;# 
  1481  0716                     	;# 
  1482  0717                     	;# 
  1483  0718                     	;# 
  1484  0719                     	;# 
  1485  071A                     	;# 
  1486  071B                     	;# 
  1487  071C                     	;# 
  1488  071D                     	;# 
  1489  071E                     	;# 
  1490  0796                     	;# 
  1491  0797                     	;# 
  1492  0798                     	;# 
  1493  0799                     	;# 
  1494  079A                     	;# 
  1495  079B                     	;# 
  1496  080C                     	;# 
  1497  080D                     	;# 
  1498  080E                     	;# 
  1499  080F                     	;# 
  1500  0810                     	;# 
  1501  0811                     	;# 
  1502  0812                     	;# 
  1503  0813                     	;# 
  1504  0814                     	;# 
  1505  081A                     	;# 
  1506  081B                     	;# 
  1507  081C                     	;# 
  1508  081D                     	;# 
  1509  081E                     	;# 
  1510  081F                     	;# 
  1511  088C                     	;# 
  1512  088D                     	;# 
  1513  088E                     	;# 
  1514  088F                     	;# 
  1515  0890                     	;# 
  1516  0891                     	;# 
  1517  0892                     	;# 
  1518  0893                     	;# 
  1519  0895                     	;# 
  1520  0896                     	;# 
  1521  0897                     	;# 
  1522  0898                     	;# 
  1523  0899                     	;# 
  1524  089A                     	;# 
  1525  089B                     	;# 
  1526  090C                     	;# 
  1527  090E                     	;# 
  1528  090F                     	;# 
  1529  091F                     	;# 
  1530  091F                     	;# 
  1531  098F                     	;# 
  1532  098F                     	;# 
  1533  0990                     	;# 
  1534  0991                     	;# 
  1535  0992                     	;# 
  1536  0993                     	;# 
  1537  0994                     	;# 
  1538  0995                     	;# 
  1539  0996                     	;# 
  1540  0997                     	;# 
  1541  0E0F                     	;# 
  1542  0E10                     	;# 
  1543  0E11                     	;# 
  1544  0E12                     	;# 
  1545  0E13                     	;# 
  1546  0E14                     	;# 
  1547  0E15                     	;# 
  1548  0E16                     	;# 
  1549  0E17                     	;# 
  1550  0E18                     	;# 
  1551  0E19                     	;# 
  1552  0E1A                     	;# 
  1553  0E1B                     	;# 
  1554  0E1C                     	;# 
  1555  0E1D                     	;# 
  1556  0E1E                     	;# 
  1557  0E1F                     	;# 
  1558  0E20                     	;# 
  1559  0E21                     	;# 
  1560  0E22                     	;# 
  1561  0E23                     	;# 
  1562  0E24                     	;# 
  1563  0E25                     	;# 
  1564  0E26                     	;# 
  1565  0E27                     	;# 
  1566  0E28                     	;# 
  1567  0E29                     	;# 
  1568  0E2A                     	;# 
  1569  0E2B                     	;# 
  1570  0E2C                     	;# 
  1571  0E2D                     	;# 
  1572  0E2E                     	;# 
  1573  0E2F                     	;# 
  1574  0E30                     	;# 
  1575  0E31                     	;# 
  1576  0E32                     	;# 
  1577  0E33                     	;# 
  1578  0E34                     	;# 
  1579  0E35                     	;# 
  1580  0E36                     	;# 
  1581  0E37                     	;# 
  1582  0E8F                     	;# 
  1583  0E90                     	;# 
  1584  0E91                     	;# 
  1585  0E92                     	;# 
  1586  0E93                     	;# 
  1587  0E94                     	;# 
  1588  0E95                     	;# 
  1589  0E96                     	;# 
  1590  0E97                     	;# 
  1591  0E9C                     	;# 
  1592  0E9D                     	;# 
  1593  0E9E                     	;# 
  1594  0EA1                     	;# 
  1595  0EA2                     	;# 
  1596  0EA3                     	;# 
  1597  0EA4                     	;# 
  1598  0EA5                     	;# 
  1599  0EA9                     	;# 
  1600  0EAA                     	;# 
  1601  0EAB                     	;# 
  1602  0EAC                     	;# 
  1603  0EB1                     	;# 
  1604  0EB2                     	;# 
  1605  0EB3                     	;# 
  1606  0EB8                     	;# 
  1607  0EB9                     	;# 
  1608  0EBA                     	;# 
  1609  0EBB                     	;# 
  1610  0EBC                     	;# 
  1611  0EBD                     	;# 
  1612  0EBE                     	;# 
  1613  0EC3                     	;# 
  1614  0EC5                     	;# 
  1615  0EC6                     	;# 
  1616  0EC7                     	;# 
  1617  0EC8                     	;# 
  1618  0EC9                     	;# 
  1619  0ECA                     	;# 
  1620  0ECB                     	;# 
  1621  0ECC                     	;# 
  1622  0F10                     	;# 
  1623  0F11                     	;# 
  1624  0F12                     	;# 
  1625  0F13                     	;# 
  1626  0F14                     	;# 
  1627  0F15                     	;# 
  1628  0F16                     	;# 
  1629  0F17                     	;# 
  1630  0F18                     	;# 
  1631  0F19                     	;# 
  1632  0F1A                     	;# 
  1633  0F1B                     	;# 
  1634  0F1C                     	;# 
  1635  0F1D                     	;# 
  1636  0F1E                     	;# 
  1637  0F1F                     	;# 
  1638  0F20                     	;# 
  1639  0F21                     	;# 
  1640  0F22                     	;# 
  1641  0F23                     	;# 
  1642  0F24                     	;# 
  1643  0F25                     	;# 
  1644  0F26                     	;# 
  1645  0F27                     	;# 
  1646  0F28                     	;# 
  1647  0F29                     	;# 
  1648  0F2A                     	;# 
  1649  0F2B                     	;# 
  1650  0F2C                     	;# 
  1651  0F2D                     	;# 
  1652  0F2E                     	;# 
  1653  0F2F                     	;# 
  1654  0F30                     	;# 
  1655  0F31                     	;# 
  1656  0F32                     	;# 
  1657  0F38                     	;# 
  1658  0F39                     	;# 
  1659  0F3A                     	;# 
  1660  0F3B                     	;# 
  1661  0F3C                     	;# 
  1662  0F3D                     	;# 
  1663  0F3E                     	;# 
  1664  0F3F                     	;# 
  1665  0F40                     	;# 
  1666  0F41                     	;# 
  1667  0F43                     	;# 
  1668  0F44                     	;# 
  1669  0F45                     	;# 
  1670  0F46                     	;# 
  1671  0F47                     	;# 
  1672  0F48                     	;# 
  1673  0F49                     	;# 
  1674  0F4A                     	;# 
  1675  0F4B                     	;# 
  1676  0F4C                     	;# 
  1677  0F4E                     	;# 
  1678  0F4F                     	;# 
  1679  0F50                     	;# 
  1680  0F51                     	;# 
  1681  0F52                     	;# 
  1682  0F53                     	;# 
  1683  0F54                     	;# 
  1684  0F55                     	;# 
  1685  0F56                     	;# 
  1686  0F57                     	;# 
  1687  0F59                     	;# 
  1688  0F5A                     	;# 
  1689  0F5B                     	;# 
  1690  0F5C                     	;# 
  1691  0F5D                     	;# 
  1692  0F61                     	;# 
  1693  0F62                     	;# 
  1694  0F64                     	;# 
  1695  0F65                     	;# 
  1696  0F66                     	;# 
  1697  0F67                     	;# 
  1698  0F68                     	;# 
  1699  0F69                     	;# 
  1700  0F6A                     	;# 
  1701  0F6B                     	;# 
  1702  0F6C                     	;# 
  1703  0F6D                     	;# 
  1704  0FE4                     	;# 
  1705  0FE5                     	;# 
  1706  0FE6                     	;# 
  1707  0FE7                     	;# 
  1708  0FE8                     	;# 
  1709  0FE9                     	;# 
  1710  0FEA                     	;# 
  1711  0FEB                     	;# 
  1712  0FED                     	;# 
  1713  0FEE                     	;# 
  1714  0FEF                     	;# 
  1715  0000                     	;# 
  1716  0001                     	;# 
  1717  0002                     	;# 
  1718  0003                     	;# 
  1719  0004                     	;# 
  1720  0005                     	;# 
  1721  0006                     	;# 
  1722  0007                     	;# 
  1723  0008                     	;# 
  1724  0009                     	;# 
  1725  000A                     	;# 
  1726  000B                     	;# 
  1727  000C                     	;# 
  1728  000D                     	;# 
  1729  000E                     	;# 
  1730  000F                     	;# 
  1731  0010                     	;# 
  1732  0011                     	;# 
  1733  0012                     	;# 
  1734  0013                     	;# 
  1735  0014                     	;# 
  1736  0015                     	;# 
  1737  0016                     	;# 
  1738  0017                     	;# 
  1739  0018                     	;# 
  1740  0019                     	;# 
  1741  001A                     	;# 
  1742  001C                     	;# 
  1743  001C                     	;# 
  1744  001D                     	;# 
  1745  001D                     	;# 
  1746  001E                     	;# 
  1747  001F                     	;# 
  1748  008C                     	;# 
  1749  008C                     	;# 
  1750  008D                     	;# 
  1751  008E                     	;# 
  1752  008E                     	;# 
  1753  008F                     	;# 
  1754  0090                     	;# 
  1755  0090                     	;# 
  1756  0091                     	;# 
  1757  0093                     	;# 
  1758  0094                     	;# 
  1759  0095                     	;# 
  1760  0096                     	;# 
  1761  0097                     	;# 
  1762  0098                     	;# 
  1763  0099                     	;# 
  1764  009A                     	;# 
  1765  009B                     	;# 
  1766  009C                     	;# 
  1767  009D                     	;# 
  1768  009E                     	;# 
  1769  010C                     	;# 
  1770  010D                     	;# 
  1771  010E                     	;# 
  1772  010E                     	;# 
  1773  010F                     	;# 
  1774  0110                     	;# 
  1775  0110                     	;# 
  1776  0111                     	;# 
  1777  0112                     	;# 
  1778  0112                     	;# 
  1779  0113                     	;# 
  1780  0114                     	;# 
  1781  0114                     	;# 
  1782  0115                     	;# 
  1783  0116                     	;# 
  1784  0116                     	;# 
  1785  0117                     	;# 
  1786  0119                     	;# 
  1787  0119                     	;# 
  1788  0119                     	;# 
  1789  011A                     	;# 
  1790  011A                     	;# 
  1791  011A                     	;# 
  1792  011B                     	;# 
  1793  011B                     	;# 
  1794  011B                     	;# 
  1795  011B                     	;# 
  1796  011B                     	;# 
  1797  011C                     	;# 
  1798  011C                     	;# 
  1799  011C                     	;# 
  1800  011D                     	;# 
  1801  011D                     	;# 
  1802  011D                     	;# 
  1803  011E                     	;# 
  1804  011E                     	;# 
  1805  011E                     	;# 
  1806  011F                     	;# 
  1807  011F                     	;# 
  1808  011F                     	;# 
  1809  011F                     	;# 
  1810  011F                     	;# 
  1811  018C                     	;# 
  1812  018D                     	;# 
  1813  018E                     	;# 
  1814  018F                     	;# 
  1815  0190                     	;# 
  1816  0191                     	;# 
  1817  0192                     	;# 
  1818  0196                     	;# 
  1819  0197                     	;# 
  1820  0198                     	;# 
  1821  0199                     	;# 
  1822  019A                     	;# 
  1823  019B                     	;# 
  1824  019C                     	;# 
  1825  020C                     	;# 
  1826  020C                     	;# 
  1827  020D                     	;# 
  1828  020E                     	;# 
  1829  020F                     	;# 
  1830  020F                     	;# 
  1831  0210                     	;# 
  1832  0210                     	;# 
  1833  0211                     	;# 
  1834  0211                     	;# 
  1835  0212                     	;# 
  1836  0212                     	;# 
  1837  0213                     	;# 
  1838  0214                     	;# 
  1839  0215                     	;# 
  1840  0215                     	;# 
  1841  0216                     	;# 
  1842  0216                     	;# 
  1843  0217                     	;# 
  1844  0217                     	;# 
  1845  0218                     	;# 
  1846  0218                     	;# 
  1847  0219                     	;# 
  1848  021A                     	;# 
  1849  021B                     	;# 
  1850  021B                     	;# 
  1851  021C                     	;# 
  1852  021C                     	;# 
  1853  021D                     	;# 
  1854  021D                     	;# 
  1855  021E                     	;# 
  1856  021F                     	;# 
  1857  028C                     	;# 
  1858  028C                     	;# 
  1859  028D                     	;# 
  1860  028D                     	;# 
  1861  028E                     	;# 
  1862  028F                     	;# 
  1863  0290                     	;# 
  1864  0290                     	;# 
  1865  0291                     	;# 
  1866  0292                     	;# 
  1867  0292                     	;# 
  1868  0293                     	;# 
  1869  0293                     	;# 
  1870  0294                     	;# 
  1871  0295                     	;# 
  1872  0296                     	;# 
  1873  0296                     	;# 
  1874  0297                     	;# 
  1875  0298                     	;# 
  1876  0298                     	;# 
  1877  0299                     	;# 
  1878  0299                     	;# 
  1879  029A                     	;# 
  1880  029B                     	;# 
  1881  029C                     	;# 
  1882  029C                     	;# 
  1883  029D                     	;# 
  1884  030C                     	;# 
  1885  030C                     	;# 
  1886  030D                     	;# 
  1887  030E                     	;# 
  1888  030F                     	;# 
  1889  0310                     	;# 
  1890  0310                     	;# 
  1891  0311                     	;# 
  1892  0312                     	;# 
  1893  0313                     	;# 
  1894  0314                     	;# 
  1895  0314                     	;# 
  1896  0315                     	;# 
  1897  0316                     	;# 
  1898  0317                     	;# 
  1899  0318                     	;# 
  1900  0318                     	;# 
  1901  0319                     	;# 
  1902  031A                     	;# 
  1903  031B                     	;# 
  1904  031C                     	;# 
  1905  031C                     	;# 
  1906  031D                     	;# 
  1907  031E                     	;# 
  1908  031F                     	;# 
  1909  038C                     	;# 
  1910  038C                     	;# 
  1911  038D                     	;# 
  1912  038E                     	;# 
  1913  0390                     	;# 
  1914  0390                     	;# 
  1915  0391                     	;# 
  1916  0392                     	;# 
  1917  040C                     	;# 
  1918  040D                     	;# 
  1919  040E                     	;# 
  1920  040F                     	;# 
  1921  0410                     	;# 
  1922  0411                     	;# 
  1923  0416                     	;# 
  1924  0416                     	;# 
  1925  0417                     	;# 
  1926  0418                     	;# 
  1927  0418                     	;# 
  1928  0419                     	;# 
  1929  041A                     	;# 
  1930  041A                     	;# 
  1931  041B                     	;# 
  1932  041C                     	;# 
  1933  041C                     	;# 
  1934  041D                     	;# 
  1935  041E                     	;# 
  1936  041F                     	;# 
  1937  048C                     	;# 
  1938  048C                     	;# 
  1939  048D                     	;# 
  1940  048E                     	;# 
  1941  048F                     	;# 
  1942  048F                     	;# 
  1943  0490                     	;# 
  1944  0491                     	;# 
  1945  0492                     	;# 
  1946  0492                     	;# 
  1947  0493                     	;# 
  1948  0494                     	;# 
  1949  0495                     	;# 
  1950  0495                     	;# 
  1951  0496                     	;# 
  1952  0497                     	;# 
  1953  0498                     	;# 
  1954  0499                     	;# 
  1955  049A                     	;# 
  1956  049B                     	;# 
  1957  049C                     	;# 
  1958  049D                     	;# 
  1959  050C                     	;# 
  1960  050C                     	;# 
  1961  050D                     	;# 
  1962  050E                     	;# 
  1963  050F                     	;# 
  1964  050F                     	;# 
  1965  0510                     	;# 
  1966  0511                     	;# 
  1967  0512                     	;# 
  1968  0512                     	;# 
  1969  0513                     	;# 
  1970  0514                     	;# 
  1971  0515                     	;# 
  1972  0515                     	;# 
  1973  0516                     	;# 
  1974  0517                     	;# 
  1975  0518                     	;# 
  1976  0519                     	;# 
  1977  051A                     	;# 
  1978  051B                     	;# 
  1979  051C                     	;# 
  1980  051D                     	;# 
  1981  058C                     	;# 
  1982  058C                     	;# 
  1983  058D                     	;# 
  1984  058E                     	;# 
  1985  058F                     	;# 
  1986  058F                     	;# 
  1987  0590                     	;# 
  1988  0591                     	;# 
  1989  0592                     	;# 
  1990  0593                     	;# 
  1991  060C                     	;# 
  1992  060D                     	;# 
  1993  060E                     	;# 
  1994  060F                     	;# 
  1995  0610                     	;# 
  1996  0611                     	;# 
  1997  0612                     	;# 
  1998  0613                     	;# 
  1999  0614                     	;# 
  2000  0616                     	;# 
  2001  0617                     	;# 
  2002  0618                     	;# 
  2003  0619                     	;# 
  2004  061A                     	;# 
  2005  061B                     	;# 
  2006  061C                     	;# 
  2007  061D                     	;# 
  2008  061E                     	;# 
  2009  068C                     	;# 
  2010  068D                     	;# 
  2011  068E                     	;# 
  2012  068F                     	;# 
  2013  0690                     	;# 
  2014  0691                     	;# 
  2015  0692                     	;# 
  2016  0693                     	;# 
  2017  0694                     	;# 
  2018  070C                     	;# 
  2019  070D                     	;# 
  2020  070E                     	;# 
  2021  070F                     	;# 
  2022  0710                     	;# 
  2023  0711                     	;# 
  2024  0712                     	;# 
  2025  0713                     	;# 
  2026  0714                     	;# 
  2027  0716                     	;# 
  2028  0717                     	;# 
  2029  0718                     	;# 
  2030  0719                     	;# 
  2031  071A                     	;# 
  2032  071B                     	;# 
  2033  071C                     	;# 
  2034  071D                     	;# 
  2035  071E                     	;# 
  2036  0796                     	;# 
  2037  0797                     	;# 
  2038  0798                     	;# 
  2039  0799                     	;# 
  2040  079A                     	;# 
  2041  079B                     	;# 
  2042  080C                     	;# 
  2043  080D                     	;# 
  2044  080E                     	;# 
  2045  080F                     	;# 
  2046  0810                     	;# 
  2047  0811                     	;# 
  2048  0812                     	;# 
  2049  0813                     	;# 
  2050  0814                     	;# 
  2051  081A                     	;# 
  2052  081B                     	;# 
  2053  081C                     	;# 
  2054  081D                     	;# 
  2055  081E                     	;# 
  2056  081F                     	;# 
  2057  088C                     	;# 
  2058  088D                     	;# 
  2059  088E                     	;# 
  2060  088F                     	;# 
  2061  0890                     	;# 
  2062  0891                     	;# 
  2063  0892                     	;# 
  2064  0893                     	;# 
  2065  0895                     	;# 
  2066  0896                     	;# 
  2067  0897                     	;# 
  2068  0898                     	;# 
  2069  0899                     	;# 
  2070  089A                     	;# 
  2071  089B                     	;# 
  2072  090C                     	;# 
  2073  090E                     	;# 
  2074  090F                     	;# 
  2075  091F                     	;# 
  2076  091F                     	;# 
  2077  098F                     	;# 
  2078  098F                     	;# 
  2079  0990                     	;# 
  2080  0991                     	;# 
  2081  0992                     	;# 
  2082  0993                     	;# 
  2083  0994                     	;# 
  2084  0995                     	;# 
  2085  0996                     	;# 
  2086  0997                     	;# 
  2087  0E0F                     	;# 
  2088  0E10                     	;# 
  2089  0E11                     	;# 
  2090  0E12                     	;# 
  2091  0E13                     	;# 
  2092  0E14                     	;# 
  2093  0E15                     	;# 
  2094  0E16                     	;# 
  2095  0E17                     	;# 
  2096  0E18                     	;# 
  2097  0E19                     	;# 
  2098  0E1A                     	;# 
  2099  0E1B                     	;# 
  2100  0E1C                     	;# 
  2101  0E1D                     	;# 
  2102  0E1E                     	;# 
  2103  0E1F                     	;# 
  2104  0E20                     	;# 
  2105  0E21                     	;# 
  2106  0E22                     	;# 
  2107  0E23                     	;# 
  2108  0E24                     	;# 
  2109  0E25                     	;# 
  2110  0E26                     	;# 
  2111  0E27                     	;# 
  2112  0E28                     	;# 
  2113  0E29                     	;# 
  2114  0E2A                     	;# 
  2115  0E2B                     	;# 
  2116  0E2C                     	;# 
  2117  0E2D                     	;# 
  2118  0E2E                     	;# 
  2119  0E2F                     	;# 
  2120  0E30                     	;# 
  2121  0E31                     	;# 
  2122  0E32                     	;# 
  2123  0E33                     	;# 
  2124  0E34                     	;# 
  2125  0E35                     	;# 
  2126  0E36                     	;# 
  2127  0E37                     	;# 
  2128  0E8F                     	;# 
  2129  0E90                     	;# 
  2130  0E91                     	;# 
  2131  0E92                     	;# 
  2132  0E93                     	;# 
  2133  0E94                     	;# 
  2134  0E95                     	;# 
  2135  0E96                     	;# 
  2136  0E97                     	;# 
  2137  0E9C                     	;# 
  2138  0E9D                     	;# 
  2139  0E9E                     	;# 
  2140  0EA1                     	;# 
  2141  0EA2                     	;# 
  2142  0EA3                     	;# 
  2143  0EA4                     	;# 
  2144  0EA5                     	;# 
  2145  0EA9                     	;# 
  2146  0EAA                     	;# 
  2147  0EAB                     	;# 
  2148  0EAC                     	;# 
  2149  0EB1                     	;# 
  2150  0EB2                     	;# 
  2151  0EB3                     	;# 
  2152  0EB8                     	;# 
  2153  0EB9                     	;# 
  2154  0EBA                     	;# 
  2155  0EBB                     	;# 
  2156  0EBC                     	;# 
  2157  0EBD                     	;# 
  2158  0EBE                     	;# 
  2159  0EC3                     	;# 
  2160  0EC5                     	;# 
  2161  0EC6                     	;# 
  2162  0EC7                     	;# 
  2163  0EC8                     	;# 
  2164  0EC9                     	;# 
  2165  0ECA                     	;# 
  2166  0ECB                     	;# 
  2167  0ECC                     	;# 
  2168  0F10                     	;# 
  2169  0F11                     	;# 
  2170  0F12                     	;# 
  2171  0F13                     	;# 
  2172  0F14                     	;# 
  2173  0F15                     	;# 
  2174  0F16                     	;# 
  2175  0F17                     	;# 
  2176  0F18                     	;# 
  2177  0F19                     	;# 
  2178  0F1A                     	;# 
  2179  0F1B                     	;# 
  2180  0F1C                     	;# 
  2181  0F1D                     	;# 
  2182  0F1E                     	;# 
  2183  0F1F                     	;# 
  2184  0F20                     	;# 
  2185  0F21                     	;# 
  2186  0F22                     	;# 
  2187  0F23                     	;# 
  2188  0F24                     	;# 
  2189  0F25                     	;# 
  2190  0F26                     	;# 
  2191  0F27                     	;# 
  2192  0F28                     	;# 
  2193  0F29                     	;# 
  2194  0F2A                     	;# 
  2195  0F2B                     	;# 
  2196  0F2C                     	;# 
  2197  0F2D                     	;# 
  2198  0F2E                     	;# 
  2199  0F2F                     	;# 
  2200  0F30                     	;# 
  2201  0F31                     	;# 
  2202  0F32                     	;# 
  2203  0F38                     	;# 
  2204  0F39                     	;# 
  2205  0F3A                     	;# 
  2206  0F3B                     	;# 
  2207  0F3C                     	;# 
  2208  0F3D                     	;# 
  2209  0F3E                     	;# 
  2210  0F3F                     	;# 
  2211  0F40                     	;# 
  2212  0F41                     	;# 
  2213  0F43                     	;# 
  2214  0F44                     	;# 
  2215  0F45                     	;# 
  2216  0F46                     	;# 
  2217  0F47                     	;# 
  2218  0F48                     	;# 
  2219  0F49                     	;# 
  2220  0F4A                     	;# 
  2221  0F4B                     	;# 
  2222  0F4C                     	;# 
  2223  0F4E                     	;# 
  2224  0F4F                     	;# 
  2225  0F50                     	;# 
  2226  0F51                     	;# 
  2227  0F52                     	;# 
  2228  0F53                     	;# 
  2229  0F54                     	;# 
  2230  0F55                     	;# 
  2231  0F56                     	;# 
  2232  0F57                     	;# 
  2233  0F59                     	;# 
  2234  0F5A                     	;# 
  2235  0F5B                     	;# 
  2236  0F5C                     	;# 
  2237  0F5D                     	;# 
  2238  0F61                     	;# 
  2239  0F62                     	;# 
  2240  0F64                     	;# 
  2241  0F65                     	;# 
  2242  0F66                     	;# 
  2243  0F67                     	;# 
  2244  0F68                     	;# 
  2245  0F69                     	;# 
  2246  0F6A                     	;# 
  2247  0F6B                     	;# 
  2248  0F6C                     	;# 
  2249  0F6D                     	;# 
  2250  0FE4                     	;# 
  2251  0FE5                     	;# 
  2252  0FE6                     	;# 
  2253  0FE7                     	;# 
  2254  0FE8                     	;# 
  2255  0FE9                     	;# 
  2256  0FEA                     	;# 
  2257  0FEB                     	;# 
  2258  0FED                     	;# 
  2259  0FEE                     	;# 
  2260  0FEF                     	;# 
  2261  0000                     	;# 
  2262  0001                     	;# 
  2263  0002                     	;# 
  2264  0003                     	;# 
  2265  0004                     	;# 
  2266  0005                     	;# 
  2267  0006                     	;# 
  2268  0007                     	;# 
  2269  0008                     	;# 
  2270  0009                     	;# 
  2271  000A                     	;# 
  2272  000B                     	;# 
  2273  000C                     	;# 
  2274  000D                     	;# 
  2275  000E                     	;# 
  2276  000F                     	;# 
  2277  0010                     	;# 
  2278  0011                     	;# 
  2279  0012                     	;# 
  2280  0013                     	;# 
  2281  0014                     	;# 
  2282  0015                     	;# 
  2283  0016                     	;# 
  2284  0017                     	;# 
  2285  0018                     	;# 
  2286  0019                     	;# 
  2287  001A                     	;# 
  2288  001C                     	;# 
  2289  001C                     	;# 
  2290  001D                     	;# 
  2291  001D                     	;# 
  2292  001E                     	;# 
  2293  001F                     	;# 
  2294  008C                     	;# 
  2295  008C                     	;# 
  2296  008D                     	;# 
  2297  008E                     	;# 
  2298  008E                     	;# 
  2299  008F                     	;# 
  2300  0090                     	;# 
  2301  0090                     	;# 
  2302  0091                     	;# 
  2303  0093                     	;# 
  2304  0094                     	;# 
  2305  0095                     	;# 
  2306  0096                     	;# 
  2307  0097                     	;# 
  2308  0098                     	;# 
  2309  0099                     	;# 
  2310  009A                     	;# 
  2311  009B                     	;# 
  2312  009C                     	;# 
  2313  009D                     	;# 
  2314  009E                     	;# 
  2315  010C                     	;# 
  2316  010D                     	;# 
  2317  010E                     	;# 
  2318  010E                     	;# 
  2319  010F                     	;# 
  2320  0110                     	;# 
  2321  0110                     	;# 
  2322  0111                     	;# 
  2323  0112                     	;# 
  2324  0112                     	;# 
  2325  0113                     	;# 
  2326  0114                     	;# 
  2327  0114                     	;# 
  2328  0115                     	;# 
  2329  0116                     	;# 
  2330  0116                     	;# 
  2331  0117                     	;# 
  2332  0119                     	;# 
  2333  0119                     	;# 
  2334  0119                     	;# 
  2335  011A                     	;# 
  2336  011A                     	;# 
  2337  011A                     	;# 
  2338  011B                     	;# 
  2339  011B                     	;# 
  2340  011B                     	;# 
  2341  011B                     	;# 
  2342  011B                     	;# 
  2343  011C                     	;# 
  2344  011C                     	;# 
  2345  011C                     	;# 
  2346  011D                     	;# 
  2347  011D                     	;# 
  2348  011D                     	;# 
  2349  011E                     	;# 
  2350  011E                     	;# 
  2351  011E                     	;# 
  2352  011F                     	;# 
  2353  011F                     	;# 
  2354  011F                     	;# 
  2355  011F                     	;# 
  2356  011F                     	;# 
  2357  018C                     	;# 
  2358  018D                     	;# 
  2359  018E                     	;# 
  2360  018F                     	;# 
  2361  0190                     	;# 
  2362  0191                     	;# 
  2363  0192                     	;# 
  2364  0196                     	;# 
  2365  0197                     	;# 
  2366  0198                     	;# 
  2367  0199                     	;# 
  2368  019A                     	;# 
  2369  019B                     	;# 
  2370  019C                     	;# 
  2371  020C                     	;# 
  2372  020C                     	;# 
  2373  020D                     	;# 
  2374  020E                     	;# 
  2375  020F                     	;# 
  2376  020F                     	;# 
  2377  0210                     	;# 
  2378  0210                     	;# 
  2379  0211                     	;# 
  2380  0211                     	;# 
  2381  0212                     	;# 
  2382  0212                     	;# 
  2383  0213                     	;# 
  2384  0214                     	;# 
  2385  0215                     	;# 
  2386  0215                     	;# 
  2387  0216                     	;# 
  2388  0216                     	;# 
  2389  0217                     	;# 
  2390  0217                     	;# 
  2391  0218                     	;# 
  2392  0218                     	;# 
  2393  0219                     	;# 
  2394  021A                     	;# 
  2395  021B                     	;# 
  2396  021B                     	;# 
  2397  021C                     	;# 
  2398  021C                     	;# 
  2399  021D                     	;# 
  2400  021D                     	;# 
  2401  021E                     	;# 
  2402  021F                     	;# 
  2403  028C                     	;# 
  2404  028C                     	;# 
  2405  028D                     	;# 
  2406  028D                     	;# 
  2407  028E                     	;# 
  2408  028F                     	;# 
  2409  0290                     	;# 
  2410  0290                     	;# 
  2411  0291                     	;# 
  2412  0292                     	;# 
  2413  0292                     	;# 
  2414  0293                     	;# 
  2415  0293                     	;# 
  2416  0294                     	;# 
  2417  0295                     	;# 
  2418  0296                     	;# 
  2419  0296                     	;# 
  2420  0297                     	;# 
  2421  0298                     	;# 
  2422  0298                     	;# 
  2423  0299                     	;# 
  2424  0299                     	;# 
  2425  029A                     	;# 
  2426  029B                     	;# 
  2427  029C                     	;# 
  2428  029C                     	;# 
  2429  029D                     	;# 
  2430  030C                     	;# 
  2431  030C                     	;# 
  2432  030D                     	;# 
  2433  030E                     	;# 
  2434  030F                     	;# 
  2435  0310                     	;# 
  2436  0310                     	;# 
  2437  0311                     	;# 
  2438  0312                     	;# 
  2439  0313                     	;# 
  2440  0314                     	;# 
  2441  0314                     	;# 
  2442  0315                     	;# 
  2443  0316                     	;# 
  2444  0317                     	;# 
  2445  0318                     	;# 
  2446  0318                     	;# 
  2447  0319                     	;# 
  2448  031A                     	;# 
  2449  031B                     	;# 
  2450  031C                     	;# 
  2451  031C                     	;# 
  2452  031D                     	;# 
  2453  031E                     	;# 
  2454  031F                     	;# 
  2455  038C                     	;# 
  2456  038C                     	;# 
  2457  038D                     	;# 
  2458  038E                     	;# 
  2459  0390                     	;# 
  2460  0390                     	;# 
  2461  0391                     	;# 
  2462  0392                     	;# 
  2463  040C                     	;# 
  2464  040D                     	;# 
  2465  040E                     	;# 
  2466  040F                     	;# 
  2467  0410                     	;# 
  2468  0411                     	;# 
  2469  0416                     	;# 
  2470  0416                     	;# 
  2471  0417                     	;# 
  2472  0418                     	;# 
  2473  0418                     	;# 
  2474  0419                     	;# 
  2475  041A                     	;# 
  2476  041A                     	;# 
  2477  041B                     	;# 
  2478  041C                     	;# 
  2479  041C                     	;# 
  2480  041D                     	;# 
  2481  041E                     	;# 
  2482  041F                     	;# 
  2483  048C                     	;# 
  2484  048C                     	;# 
  2485  048D                     	;# 
  2486  048E                     	;# 
  2487  048F                     	;# 
  2488  048F                     	;# 
  2489  0490                     	;# 
  2490  0491                     	;# 
  2491  0492                     	;# 
  2492  0492                     	;# 
  2493  0493                     	;# 
  2494  0494                     	;# 
  2495  0495                     	;# 
  2496  0495                     	;# 
  2497  0496                     	;# 
  2498  0497                     	;# 
  2499  0498                     	;# 
  2500  0499                     	;# 
  2501  049A                     	;# 
  2502  049B                     	;# 
  2503  049C                     	;# 
  2504  049D                     	;# 
  2505  050C                     	;# 
  2506  050C                     	;# 
  2507  050D                     	;# 
  2508  050E                     	;# 
  2509  050F                     	;# 
  2510  050F                     	;# 
  2511  0510                     	;# 
  2512  0511                     	;# 
  2513  0512                     	;# 
  2514  0512                     	;# 
  2515  0513                     	;# 
  2516  0514                     	;# 
  2517  0515                     	;# 
  2518  0515                     	;# 
  2519  0516                     	;# 
  2520  0517                     	;# 
  2521  0518                     	;# 
  2522  0519                     	;# 
  2523  051A                     	;# 
  2524  051B                     	;# 
  2525  051C                     	;# 
  2526  051D                     	;# 
  2527  058C                     	;# 
  2528  058C                     	;# 
  2529  058D                     	;# 
  2530  058E                     	;# 
  2531  058F                     	;# 
  2532  058F                     	;# 
  2533  0590                     	;# 
  2534  0591                     	;# 
  2535  0592                     	;# 
  2536  0593                     	;# 
  2537  060C                     	;# 
  2538  060D                     	;# 
  2539  060E                     	;# 
  2540  060F                     	;# 
  2541  0610                     	;# 
  2542  0611                     	;# 
  2543  0612                     	;# 
  2544  0613                     	;# 
  2545  0614                     	;# 
  2546  0616                     	;# 
  2547  0617                     	;# 
  2548  0618                     	;# 
  2549  0619                     	;# 
  2550  061A                     	;# 
  2551  061B                     	;# 
  2552  061C                     	;# 
  2553  061D                     	;# 
  2554  061E                     	;# 
  2555  068C                     	;# 
  2556  068D                     	;# 
  2557  068E                     	;# 
  2558  068F                     	;# 
  2559  0690                     	;# 
  2560  0691                     	;# 
  2561  0692                     	;# 
  2562  0693                     	;# 
  2563  0694                     	;# 
  2564  070C                     	;# 
  2565  070D                     	;# 
  2566  070E                     	;# 
  2567  070F                     	;# 
  2568  0710                     	;# 
  2569  0711                     	;# 
  2570  0712                     	;# 
  2571  0713                     	;# 
  2572  0714                     	;# 
  2573  0716                     	;# 
  2574  0717                     	;# 
  2575  0718                     	;# 
  2576  0719                     	;# 
  2577  071A                     	;# 
  2578  071B                     	;# 
  2579  071C                     	;# 
  2580  071D                     	;# 
  2581  071E                     	;# 
  2582  0796                     	;# 
  2583  0797                     	;# 
  2584  0798                     	;# 
  2585  0799                     	;# 
  2586  079A                     	;# 
  2587  079B                     	;# 
  2588  080C                     	;# 
  2589  080D                     	;# 
  2590  080E                     	;# 
  2591  080F                     	;# 
  2592  0810                     	;# 
  2593  0811                     	;# 
  2594  0812                     	;# 
  2595  0813                     	;# 
  2596  0814                     	;# 
  2597  081A                     	;# 
  2598  081B                     	;# 
  2599  081C                     	;# 
  2600  081D                     	;# 
  2601  081E                     	;# 
  2602  081F                     	;# 
  2603  088C                     	;# 
  2604  088D                     	;# 
  2605  088E                     	;# 
  2606  088F                     	;# 
  2607  0890                     	;# 
  2608  0891                     	;# 
  2609  0892                     	;# 
  2610  0893                     	;# 
  2611  0895                     	;# 
  2612  0896                     	;# 
  2613  0897                     	;# 
  2614  0898                     	;# 
  2615  0899                     	;# 
  2616  089A                     	;# 
  2617  089B                     	;# 
  2618  090C                     	;# 
  2619  090E                     	;# 
  2620  090F                     	;# 
  2621  091F                     	;# 
  2622  091F                     	;# 
  2623  098F                     	;# 
  2624  098F                     	;# 
  2625  0990                     	;# 
  2626  0991                     	;# 
  2627  0992                     	;# 
  2628  0993                     	;# 
  2629  0994                     	;# 
  2630  0995                     	;# 
  2631  0996                     	;# 
  2632  0997                     	;# 
  2633  0E0F                     	;# 
  2634  0E10                     	;# 
  2635  0E11                     	;# 
  2636  0E12                     	;# 
  2637  0E13                     	;# 
  2638  0E14                     	;# 
  2639  0E15                     	;# 
  2640  0E16                     	;# 
  2641  0E17                     	;# 
  2642  0E18                     	;# 
  2643  0E19                     	;# 
  2644  0E1A                     	;# 
  2645  0E1B                     	;# 
  2646  0E1C                     	;# 
  2647  0E1D                     	;# 
  2648  0E1E                     	;# 
  2649  0E1F                     	;# 
  2650  0E20                     	;# 
  2651  0E21                     	;# 
  2652  0E22                     	;# 
  2653  0E23                     	;# 
  2654  0E24                     	;# 
  2655  0E25                     	;# 
  2656  0E26                     	;# 
  2657  0E27                     	;# 
  2658  0E28                     	;# 
  2659  0E29                     	;# 
  2660  0E2A                     	;# 
  2661  0E2B                     	;# 
  2662  0E2C                     	;# 
  2663  0E2D                     	;# 
  2664  0E2E                     	;# 
  2665  0E2F                     	;# 
  2666  0E30                     	;# 
  2667  0E31                     	;# 
  2668  0E32                     	;# 
  2669  0E33                     	;# 
  2670  0E34                     	;# 
  2671  0E35                     	;# 
  2672  0E36                     	;# 
  2673  0E37                     	;# 
  2674  0E8F                     	;# 
  2675  0E90                     	;# 
  2676  0E91                     	;# 
  2677  0E92                     	;# 
  2678  0E93                     	;# 
  2679  0E94                     	;# 
  2680  0E95                     	;# 
  2681  0E96                     	;# 
  2682  0E97                     	;# 
  2683  0E9C                     	;# 
  2684  0E9D                     	;# 
  2685  0E9E                     	;# 
  2686  0EA1                     	;# 
  2687  0EA2                     	;# 
  2688  0EA3                     	;# 
  2689  0EA4                     	;# 
  2690  0EA5                     	;# 
  2691  0EA9                     	;# 
  2692  0EAA                     	;# 
  2693  0EAB                     	;# 
  2694  0EAC                     	;# 
  2695  0EB1                     	;# 
  2696  0EB2                     	;# 
  2697  0EB3                     	;# 
  2698  0EB8                     	;# 
  2699  0EB9                     	;# 
  2700  0EBA                     	;# 
  2701  0EBB                     	;# 
  2702  0EBC                     	;# 
  2703  0EBD                     	;# 
  2704  0EBE                     	;# 
  2705  0EC3                     	;# 
  2706  0EC5                     	;# 
  2707  0EC6                     	;# 
  2708  0EC7                     	;# 
  2709  0EC8                     	;# 
  2710  0EC9                     	;# 
  2711  0ECA                     	;# 
  2712  0ECB                     	;# 
  2713  0ECC                     	;# 
  2714  0F10                     	;# 
  2715  0F11                     	;# 
  2716  0F12                     	;# 
  2717  0F13                     	;# 
  2718  0F14                     	;# 
  2719  0F15                     	;# 
  2720  0F16                     	;# 
  2721  0F17                     	;# 
  2722  0F18                     	;# 
  2723  0F19                     	;# 
  2724  0F1A                     	;# 
  2725  0F1B                     	;# 
  2726  0F1C                     	;# 
  2727  0F1D                     	;# 
  2728  0F1E                     	;# 
  2729  0F1F                     	;# 
  2730  0F20                     	;# 
  2731  0F21                     	;# 
  2732  0F22                     	;# 
  2733  0F23                     	;# 
  2734  0F24                     	;# 
  2735  0F25                     	;# 
  2736  0F26                     	;# 
  2737  0F27                     	;# 
  2738  0F28                     	;# 
  2739  0F29                     	;# 
  2740  0F2A                     	;# 
  2741  0F2B                     	;# 
  2742  0F2C                     	;# 
  2743  0F2D                     	;# 
  2744  0F2E                     	;# 
  2745  0F2F                     	;# 
  2746  0F30                     	;# 
  2747  0F31                     	;# 
  2748  0F32                     	;# 
  2749  0F38                     	;# 
  2750  0F39                     	;# 
  2751  0F3A                     	;# 
  2752  0F3B                     	;# 
  2753  0F3C                     	;# 
  2754  0F3D                     	;# 
  2755  0F3E                     	;# 
  2756  0F3F                     	;# 
  2757  0F40                     	;# 
  2758  0F41                     	;# 
  2759  0F43                     	;# 
  2760  0F44                     	;# 
  2761  0F45                     	;# 
  2762  0F46                     	;# 
  2763  0F47                     	;# 
  2764  0F48                     	;# 
  2765  0F49                     	;# 
  2766  0F4A                     	;# 
  2767  0F4B                     	;# 
  2768  0F4C                     	;# 
  2769  0F4E                     	;# 
  2770  0F4F                     	;# 
  2771  0F50                     	;# 
  2772  0F51                     	;# 
  2773  0F52                     	;# 
  2774  0F53                     	;# 
  2775  0F54                     	;# 
  2776  0F55                     	;# 
  2777  0F56                     	;# 
  2778  0F57                     	;# 
  2779  0F59                     	;# 
  2780  0F5A                     	;# 
  2781  0F5B                     	;# 
  2782  0F5C                     	;# 
  2783  0F5D                     	;# 
  2784  0F61                     	;# 
  2785  0F62                     	;# 
  2786  0F64                     	;# 
  2787  0F65                     	;# 
  2788  0F66                     	;# 
  2789  0F67                     	;# 
  2790  0F68                     	;# 
  2791  0F69                     	;# 
  2792  0F6A                     	;# 
  2793  0F6B                     	;# 
  2794  0F6C                     	;# 
  2795  0F6D                     	;# 
  2796  0FE4                     	;# 
  2797  0FE5                     	;# 
  2798  0FE6                     	;# 
  2799  0FE7                     	;# 
  2800  0FE8                     	;# 
  2801  0FE9                     	;# 
  2802  0FEA                     	;# 
  2803  0FEB                     	;# 
  2804  0FED                     	;# 
  2805  0FEE                     	;# 
  2806  0FEF                     	;# 
  2807  0000                     	;# 
  2808  0001                     	;# 
  2809  0002                     	;# 
  2810  0003                     	;# 
  2811  0004                     	;# 
  2812  0005                     	;# 
  2813  0006                     	;# 
  2814  0007                     	;# 
  2815  0008                     	;# 
  2816  0009                     	;# 
  2817  000A                     	;# 
  2818  000B                     	;# 
  2819  000C                     	;# 
  2820  000D                     	;# 
  2821  000E                     	;# 
  2822  000F                     	;# 
  2823  0010                     	;# 
  2824  0011                     	;# 
  2825  0012                     	;# 
  2826  0013                     	;# 
  2827  0014                     	;# 
  2828  0015                     	;# 
  2829  0016                     	;# 
  2830  0017                     	;# 
  2831  0018                     	;# 
  2832  0019                     	;# 
  2833  001A                     	;# 
  2834  001C                     	;# 
  2835  001C                     	;# 
  2836  001D                     	;# 
  2837  001D                     	;# 
  2838  001E                     	;# 
  2839  001F                     	;# 
  2840  008C                     	;# 
  2841  008C                     	;# 
  2842  008D                     	;# 
  2843  008E                     	;# 
  2844  008E                     	;# 
  2845  008F                     	;# 
  2846  0090                     	;# 
  2847  0090                     	;# 
  2848  0091                     	;# 
  2849  0093                     	;# 
  2850  0094                     	;# 
  2851  0095                     	;# 
  2852  0096                     	;# 
  2853  0097                     	;# 
  2854  0098                     	;# 
  2855  0099                     	;# 
  2856  009A                     	;# 
  2857  009B                     	;# 
  2858  009C                     	;# 
  2859  009D                     	;# 
  2860  009E                     	;# 
  2861  010C                     	;# 
  2862  010D                     	;# 
  2863  010E                     	;# 
  2864  010E                     	;# 
  2865  010F                     	;# 
  2866  0110                     	;# 
  2867  0110                     	;# 
  2868  0111                     	;# 
  2869  0112                     	;# 
  2870  0112                     	;# 
  2871  0113                     	;# 
  2872  0114                     	;# 
  2873  0114                     	;# 
  2874  0115                     	;# 
  2875  0116                     	;# 
  2876  0116                     	;# 
  2877  0117                     	;# 
  2878  0119                     	;# 
  2879  0119                     	;# 
  2880  0119                     	;# 
  2881  011A                     	;# 
  2882  011A                     	;# 
  2883  011A                     	;# 
  2884  011B                     	;# 
  2885  011B                     	;# 
  2886  011B                     	;# 
  2887  011B                     	;# 
  2888  011B                     	;# 
  2889  011C                     	;# 
  2890  011C                     	;# 
  2891  011C                     	;# 
  2892  011D                     	;# 
  2893  011D                     	;# 
  2894  011D                     	;# 
  2895  011E                     	;# 
  2896  011E                     	;# 
  2897  011E                     	;# 
  2898  011F                     	;# 
  2899  011F                     	;# 
  2900  011F                     	;# 
  2901  011F                     	;# 
  2902  011F                     	;# 
  2903  018C                     	;# 
  2904  018D                     	;# 
  2905  018E                     	;# 
  2906  018F                     	;# 
  2907  0190                     	;# 
  2908  0191                     	;# 
  2909  0192                     	;# 
  2910  0196                     	;# 
  2911  0197                     	;# 
  2912  0198                     	;# 
  2913  0199                     	;# 
  2914  019A                     	;# 
  2915  019B                     	;# 
  2916  019C                     	;# 
  2917  020C                     	;# 
  2918  020C                     	;# 
  2919  020D                     	;# 
  2920  020E                     	;# 
  2921  020F                     	;# 
  2922  020F                     	;# 
  2923  0210                     	;# 
  2924  0210                     	;# 
  2925  0211                     	;# 
  2926  0211                     	;# 
  2927  0212                     	;# 
  2928  0212                     	;# 
  2929  0213                     	;# 
  2930  0214                     	;# 
  2931  0215                     	;# 
  2932  0215                     	;# 
  2933  0216                     	;# 
  2934  0216                     	;# 
  2935  0217                     	;# 
  2936  0217                     	;# 
  2937  0218                     	;# 
  2938  0218                     	;# 
  2939  0219                     	;# 
  2940  021A                     	;# 
  2941  021B                     	;# 
  2942  021B                     	;# 
  2943  021C                     	;# 
  2944  021C                     	;# 
  2945  021D                     	;# 
  2946  021D                     	;# 
  2947  021E                     	;# 
  2948  021F                     	;# 
  2949  028C                     	;# 
  2950  028C                     	;# 
  2951  028D                     	;# 
  2952  028D                     	;# 
  2953  028E                     	;# 
  2954  028F                     	;# 
  2955  0290                     	;# 
  2956  0290                     	;# 
  2957  0291                     	;# 
  2958  0292                     	;# 
  2959  0292                     	;# 
  2960  0293                     	;# 
  2961  0293                     	;# 
  2962  0294                     	;# 
  2963  0295                     	;# 
  2964  0296                     	;# 
  2965  0296                     	;# 
  2966  0297                     	;# 
  2967  0298                     	;# 
  2968  0298                     	;# 
  2969  0299                     	;# 
  2970  0299                     	;# 
  2971  029A                     	;# 
  2972  029B                     	;# 
  2973  029C                     	;# 
  2974  029C                     	;# 
  2975  029D                     	;# 
  2976  030C                     	;# 
  2977  030C                     	;# 
  2978  030D                     	;# 
  2979  030E                     	;# 
  2980  030F                     	;# 
  2981  0310                     	;# 
  2982  0310                     	;# 
  2983  0311                     	;# 
  2984  0312                     	;# 
  2985  0313                     	;# 
  2986  0314                     	;# 
  2987  0314                     	;# 
  2988  0315                     	;# 
  2989  0316                     	;# 
  2990  0317                     	;# 
  2991  0318                     	;# 
  2992  0318                     	;# 
  2993  0319                     	;# 
  2994  031A                     	;# 
  2995  031B                     	;# 
  2996  031C                     	;# 
  2997  031C                     	;# 
  2998  031D                     	;# 
  2999  031E                     	;# 
  3000  031F                     	;# 
  3001  038C                     	;# 
  3002  038C                     	;# 
  3003  038D                     	;# 
  3004  038E                     	;# 
  3005  0390                     	;# 
  3006  0390                     	;# 
  3007  0391                     	;# 
  3008  0392                     	;# 
  3009  040C                     	;# 
  3010  040D                     	;# 
  3011  040E                     	;# 
  3012  040F                     	;# 
  3013  0410                     	;# 
  3014  0411                     	;# 
  3015  0416                     	;# 
  3016  0416                     	;# 
  3017  0417                     	;# 
  3018  0418                     	;# 
  3019  0418                     	;# 
  3020  0419                     	;# 
  3021  041A                     	;# 
  3022  041A                     	;# 
  3023  041B                     	;# 
  3024  041C                     	;# 
  3025  041C                     	;# 
  3026  041D                     	;# 
  3027  041E                     	;# 
  3028  041F                     	;# 
  3029  048C                     	;# 
  3030  048C                     	;# 
  3031  048D                     	;# 
  3032  048E                     	;# 
  3033  048F                     	;# 
  3034  048F                     	;# 
  3035  0490                     	;# 
  3036  0491                     	;# 
  3037  0492                     	;# 
  3038  0492                     	;# 
  3039  0493                     	;# 
  3040  0494                     	;# 
  3041  0495                     	;# 
  3042  0495                     	;# 
  3043  0496                     	;# 
  3044  0497                     	;# 
  3045  0498                     	;# 
  3046  0499                     	;# 
  3047  049A                     	;# 
  3048  049B                     	;# 
  3049  049C                     	;# 
  3050  049D                     	;# 
  3051  050C                     	;# 
  3052  050C                     	;# 
  3053  050D                     	;# 
  3054  050E                     	;# 
  3055  050F                     	;# 
  3056  050F                     	;# 
  3057  0510                     	;# 
  3058  0511                     	;# 
  3059  0512                     	;# 
  3060  0512                     	;# 
  3061  0513                     	;# 
  3062  0514                     	;# 
  3063  0515                     	;# 
  3064  0515                     	;# 
  3065  0516                     	;# 
  3066  0517                     	;# 
  3067  0518                     	;# 
  3068  0519                     	;# 
  3069  051A                     	;# 
  3070  051B                     	;# 
  3071  051C                     	;# 
  3072  051D                     	;# 
  3073  058C                     	;# 
  3074  058C                     	;# 
  3075  058D                     	;# 
  3076  058E                     	;# 
  3077  058F                     	;# 
  3078  058F                     	;# 
  3079  0590                     	;# 
  3080  0591                     	;# 
  3081  0592                     	;# 
  3082  0593                     	;# 
  3083  060C                     	;# 
  3084  060D                     	;# 
  3085  060E                     	;# 
  3086  060F                     	;# 
  3087  0610                     	;# 
  3088  0611                     	;# 
  3089  0612                     	;# 
  3090  0613                     	;# 
  3091  0614                     	;# 
  3092  0616                     	;# 
  3093  0617                     	;# 
  3094  0618                     	;# 
  3095  0619                     	;# 
  3096  061A                     	;# 
  3097  061B                     	;# 
  3098  061C                     	;# 
  3099  061D                     	;# 
  3100  061E                     	;# 
  3101  068C                     	;# 
  3102  068D                     	;# 
  3103  068E                     	;# 
  3104  068F                     	;# 
  3105  0690                     	;# 
  3106  0691                     	;# 
  3107  0692                     	;# 
  3108  0693                     	;# 
  3109  0694                     	;# 
  3110  070C                     	;# 
  3111  070D                     	;# 
  3112  070E                     	;# 
  3113  070F                     	;# 
  3114  0710                     	;# 
  3115  0711                     	;# 
  3116  0712                     	;# 
  3117  0713                     	;# 
  3118  0714                     	;# 
  3119  0716                     	;# 
  3120  0717                     	;# 
  3121  0718                     	;# 
  3122  0719                     	;# 
  3123  071A                     	;# 
  3124  071B                     	;# 
  3125  071C                     	;# 
  3126  071D                     	;# 
  3127  071E                     	;# 
  3128  0796                     	;# 
  3129  0797                     	;# 
  3130  0798                     	;# 
  3131  0799                     	;# 
  3132  079A                     	;# 
  3133  079B                     	;# 
  3134  080C                     	;# 
  3135  080D                     	;# 
  3136  080E                     	;# 
  3137  080F                     	;# 
  3138  0810                     	;# 
  3139  0811                     	;# 
  3140  0812                     	;# 
  3141  0813                     	;# 
  3142  0814                     	;# 
  3143  081A                     	;# 
  3144  081B                     	;# 
  3145  081C                     	;# 
  3146  081D                     	;# 
  3147  081E                     	;# 
  3148  081F                     	;# 
  3149  088C                     	;# 
  3150  088D                     	;# 
  3151  088E                     	;# 
  3152  088F                     	;# 
  3153  0890                     	;# 
  3154  0891                     	;# 
  3155  0892                     	;# 
  3156  0893                     	;# 
  3157  0895                     	;# 
  3158  0896                     	;# 
  3159  0897                     	;# 
  3160  0898                     	;# 
  3161  0899                     	;# 
  3162  089A                     	;# 
  3163  089B                     	;# 
  3164  090C                     	;# 
  3165  090E                     	;# 
  3166  090F                     	;# 
  3167  091F                     	;# 
  3168  091F                     	;# 
  3169  098F                     	;# 
  3170  098F                     	;# 
  3171  0990                     	;# 
  3172  0991                     	;# 
  3173  0992                     	;# 
  3174  0993                     	;# 
  3175  0994                     	;# 
  3176  0995                     	;# 
  3177  0996                     	;# 
  3178  0997                     	;# 
  3179  0E0F                     	;# 
  3180  0E10                     	;# 
  3181  0E11                     	;# 
  3182  0E12                     	;# 
  3183  0E13                     	;# 
  3184  0E14                     	;# 
  3185  0E15                     	;# 
  3186  0E16                     	;# 
  3187  0E17                     	;# 
  3188  0E18                     	;# 
  3189  0E19                     	;# 
  3190  0E1A                     	;# 
  3191  0E1B                     	;# 
  3192  0E1C                     	;# 
  3193  0E1D                     	;# 
  3194  0E1E                     	;# 
  3195  0E1F                     	;# 
  3196  0E20                     	;# 
  3197  0E21                     	;# 
  3198  0E22                     	;# 
  3199  0E23                     	;# 
  3200  0E24                     	;# 
  3201  0E25                     	;# 
  3202  0E26                     	;# 
  3203  0E27                     	;# 
  3204  0E28                     	;# 
  3205  0E29                     	;# 
  3206  0E2A                     	;# 
  3207  0E2B                     	;# 
  3208  0E2C                     	;# 
  3209  0E2D                     	;# 
  3210  0E2E                     	;# 
  3211  0E2F                     	;# 
  3212  0E30                     	;# 
  3213  0E31                     	;# 
  3214  0E32                     	;# 
  3215  0E33                     	;# 
  3216  0E34                     	;# 
  3217  0E35                     	;# 
  3218  0E36                     	;# 
  3219  0E37                     	;# 
  3220  0E8F                     	;# 
  3221  0E90                     	;# 
  3222  0E91                     	;# 
  3223  0E92                     	;# 
  3224  0E93                     	;# 
  3225  0E94                     	;# 
  3226  0E95                     	;# 
  3227  0E96                     	;# 
  3228  0E97                     	;# 
  3229  0E9C                     	;# 
  3230  0E9D                     	;# 
  3231  0E9E                     	;# 
  3232  0EA1                     	;# 
  3233  0EA2                     	;# 
  3234  0EA3                     	;# 
  3235  0EA4                     	;# 
  3236  0EA5                     	;# 
  3237  0EA9                     	;# 
  3238  0EAA                     	;# 
  3239  0EAB                     	;# 
  3240  0EAC                     	;# 
  3241  0EB1                     	;# 
  3242  0EB2                     	;# 
  3243  0EB3                     	;# 
  3244  0EB8                     	;# 
  3245  0EB9                     	;# 
  3246  0EBA                     	;# 
  3247  0EBB                     	;# 
  3248  0EBC                     	;# 
  3249  0EBD                     	;# 
  3250  0EBE                     	;# 
  3251  0EC3                     	;# 
  3252  0EC5                     	;# 
  3253  0EC6                     	;# 
  3254  0EC7                     	;# 
  3255  0EC8                     	;# 
  3256  0EC9                     	;# 
  3257  0ECA                     	;# 
  3258  0ECB                     	;# 
  3259  0ECC                     	;# 
  3260  0F10                     	;# 
  3261  0F11                     	;# 
  3262  0F12                     	;# 
  3263  0F13                     	;# 
  3264  0F14                     	;# 
  3265  0F15                     	;# 
  3266  0F16                     	;# 
  3267  0F17                     	;# 
  3268  0F18                     	;# 
  3269  0F19                     	;# 
  3270  0F1A                     	;# 
  3271  0F1B                     	;# 
  3272  0F1C                     	;# 
  3273  0F1D                     	;# 
  3274  0F1E                     	;# 
  3275  0F1F                     	;# 
  3276  0F20                     	;# 
  3277  0F21                     	;# 
  3278  0F22                     	;# 
  3279  0F23                     	;# 
  3280  0F24                     	;# 
  3281  0F25                     	;# 
  3282  0F26                     	;# 
  3283  0F27                     	;# 
  3284  0F28                     	;# 
  3285  0F29                     	;# 
  3286  0F2A                     	;# 
  3287  0F2B                     	;# 
  3288  0F2C                     	;# 
  3289  0F2D                     	;# 
  3290  0F2E                     	;# 
  3291  0F2F                     	;# 
  3292  0F30                     	;# 
  3293  0F31                     	;# 
  3294  0F32                     	;# 
  3295  0F38                     	;# 
  3296  0F39                     	;# 
  3297  0F3A                     	;# 
  3298  0F3B                     	;# 
  3299  0F3C                     	;# 
  3300  0F3D                     	;# 
  3301  0F3E                     	;# 
  3302  0F3F                     	;# 
  3303  0F40                     	;# 
  3304  0F41                     	;# 
  3305  0F43                     	;# 
  3306  0F44                     	;# 
  3307  0F45                     	;# 
  3308  0F46                     	;# 
  3309  0F47                     	;# 
  3310  0F48                     	;# 
  3311  0F49                     	;# 
  3312  0F4A                     	;# 
  3313  0F4B                     	;# 
  3314  0F4C                     	;# 
  3315  0F4E                     	;# 
  3316  0F4F                     	;# 
  3317  0F50                     	;# 
  3318  0F51                     	;# 
  3319  0F52                     	;# 
  3320  0F53                     	;# 
  3321  0F54                     	;# 
  3322  0F55                     	;# 
  3323  0F56                     	;# 
  3324  0F57                     	;# 
  3325  0F59                     	;# 
  3326  0F5A                     	;# 
  3327  0F5B                     	;# 
  3328  0F5C                     	;# 
  3329  0F5D                     	;# 
  3330  0F61                     	;# 
  3331  0F62                     	;# 
  3332  0F64                     	;# 
  3333  0F65                     	;# 
  3334  0F66                     	;# 
  3335  0F67                     	;# 
  3336  0F68                     	;# 
  3337  0F69                     	;# 
  3338  0F6A                     	;# 
  3339  0F6B                     	;# 
  3340  0F6C                     	;# 
  3341  0F6D                     	;# 
  3342  0FE4                     	;# 
  3343  0FE5                     	;# 
  3344  0FE6                     	;# 
  3345  0FE7                     	;# 
  3346  0FE8                     	;# 
  3347  0FE9                     	;# 
  3348  0FEA                     	;# 
  3349  0FEB                     	;# 
  3350  0FED                     	;# 
  3351  0FEE                     	;# 
  3352  0FEF                     	;# 
  3353                           
  3354 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3355  0000                     
  3356 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3357  0000                     
  3358 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3359  0000                     
  3360                           	psect	nvBANK1
  3361  00C8                     __pnvBANK1:	
  3362  00C8                     _EUSART_ErrorHandler:	
  3363  00C8                     	ds	2
  3364  00CA                     _EUSART_OverrunErrorHandler:	
  3365  00CA                     	ds	2
  3366  00CC                     _EUSART_FramingErrorHandler:	
  3367  00CC                     	ds	2
  3368  0016                     _LATAbits	set	22
  3369  0014                     _TRISD	set	20
  3370  0013                     _TRISC	set	19
  3371  0012                     _TRISB	set	18
  3372  0011                     _TRISA	set	17
  3373  0015                     _TRISE	set	21
  3374  0018                     _LATC	set	24
  3375  0017                     _LATB	set	23
  3376  0016                     _LATA	set	22
  3377  0019                     _LATD	set	25
  3378  001A                     _LATE	set	26
  3379  0094                     _ADCON1bits	set	148
  3380  008E                     _ADPREVL	set	142
  3381  008F                     _ADPREVH	set	143
  3382  0097                     _ADSTATbits	set	151
  3383  0090                     _ADACCL	set	144
  3384  0091                     _ADACCH	set	145
  3385  0095                     _ADCON2bits	set	149
  3386  0096                     _ADCON3bits	set	150
  3387  008C                     _ADRESL	set	140
  3388  008D                     _ADRESH	set	141
  3389  0093                     _ADCON0bits	set	147
  3390  009D                     _ADACQ	set	157
  3391  0093                     _ADCON0	set	147
  3392  0098                     _ADCLK	set	152
  3393  0099                     _ADACT	set	153
  3394  009A                     _ADREF	set	154
  3395  0097                     _ADSTAT	set	151
  3396  0096                     _ADCON3	set	150
  3397  0095                     _ADCON2	set	149
  3398  0094                     _ADCON1	set	148
  3399  009C                     _ADPRE	set	156
  3400  009B                     _ADCAP	set	155
  3401  009E                     _ADPCH	set	158
  3402  0116                     _ADERRL	set	278
  3403  0117                     _ADERRH	set	279
  3404  0114                     _ADFLTRL	set	276
  3405  0115                     _ADFLTRH	set	277
  3406  010C                     _ADCNT	set	268
  3407  010D                     _ADRPT	set	269
  3408  0113                     _ADSTPTH	set	275
  3409  0112                     _ADSTPTL	set	274
  3410  0111                     _ADUTHH	set	273
  3411  0110                     _ADUTHL	set	272
  3412  010F                     _ADLTHH	set	271
  3413  010E                     _ADLTHL	set	270
  3414  011A                     _TX1REG	set	282
  3415  0119                     _RC1REG	set	281
  3416  011D                     _RC1STAbits	set	285
  3417  011E                     _TX1STAbits	set	286
  3418  011C                     _SP1BRGH	set	284
  3419  011B                     _SP1BRGL	set	283
  3420  011E                     _TX1STA	set	286
  3421  011D                     _RC1STA	set	285
  3422  011F                     _BAUD1CON	set	287
  3423  070F                     _PIR3bits	set	1807
  3424  079B                     _PMD5	set	1947
  3425  079A                     _PMD4	set	1946
  3426  0799                     _PMD3	set	1945
  3427  0798                     _PMD2	set	1944
  3428  0797                     _PMD1	set	1943
  3429  0796                     _PMD0	set	1942
  3430  0892                     _OSCTUNE	set	2194
  3431  0893                     _OSCFRQ	set	2195
  3432  0891                     _OSCEN	set	2193
  3433  088F                     _OSCCON3	set	2191
  3434  088D                     _OSCCON1	set	2189
  3435  0ECB                     _RXPPS	set	3787
  3436  0F26                     _RC6PPS	set	3878
  3437  0F68                     _INLVLE	set	3944
  3438  0F5D                     _INLVLD	set	3933
  3439  0F52                     _INLVLC	set	3922
  3440  0F47                     _INLVLB	set	3911
  3441  0F3C                     _INLVLA	set	3900
  3442  0F67                     _SLRCONE	set	3943
  3443  0F5C                     _SLRCOND	set	3932
  3444  0F51                     _SLRCONC	set	3921
  3445  0F46                     _SLRCONB	set	3910
  3446  0F3B                     _SLRCONA	set	3899
  3447  0F5B                     _ODCOND	set	3931
  3448  0F50                     _ODCONC	set	3920
  3449  0F45                     _ODCONB	set	3909
  3450  0F3A                     _ODCONA	set	3898
  3451  0F66                     _ODCONE	set	3942
  3452  0F4F                     _WPUC	set	3919
  3453  0F39                     _WPUA	set	3897
  3454  0F44                     _WPUB	set	3908
  3455  0F65                     _WPUE	set	3941
  3456  0F5A                     _WPUD	set	3930
  3457  0F38                     _ANSELA	set	3896
  3458  0F64                     _ANSELE	set	3940
  3459  0F43                     _ANSELB	set	3907
  3460  0F4E                     _ANSELC	set	3918
  3461  0F59                     _ANSELD	set	3929
  3462                           
  3463                           	psect	stringtext1
  3464  0800                     __pstringtext1:	
  3465  0800                     STR_1:	
  3466  0800  3425               	retlw	37	;'%'
  3467  0801  3464               	retlw	100	;'d'
  3468  0802  340A               	retlw	10
  3469  0803  3400               	retlw	0
  3470                           
  3471                           	psect	stringtext2
  3472  0000                     __pstringtext2:	
  3473                           
  3474                           ; #config settings
  3475  0000                     
  3476                           	psect	cinit
  3477  07F4                     start_initialization:	
  3478  07F4                     __initialization:	
  3479                           
  3480                           ; Clear objects allocated to BANK0
  3481  07F4  0020               	movlb	0	; select bank0
  3482  07F5  01EF               	clrf	__pbssBANK0& (0+127)
  3483                           
  3484                           ; Clear objects allocated to BANK1
  3485  07F6  30A0               	movlw	low __pbssBANK1
  3486  07F7  0084               	movwf	4
  3487  07F8  3000               	movlw	high __pbssBANK1
  3488  07F9  0085               	movwf	5
  3489  07FA  3028               	movlw	40
  3490  07FB  3181  21BA         	fcall	clear_ram0
  3491  07FD                     end_of_initialization:	
  3492                           ;End of C runtime variable initialization code
  3493                           
  3494  07FD                     __end_of__initialization:	
  3495  07FD  0020               	movlb	0
  3496  07FE  3183  2B96         	ljmp	_main	;jump to C main() function
  3497                           
  3498                           	psect	bssBANK0
  3499  006F                     __pbssBANK0:	
  3500  006F                     _eusartRxLastError:	
  3501  006F                     	ds	1
  3502                           
  3503                           	psect	bssBANK1
  3504  00A0                     __pbssBANK1:	
  3505  00A0                     _nout:	
  3506  00A0                     	ds	2
  3507  00A2                     _width:	
  3508  00A2                     	ds	2
  3509  00A4                     _prec:	
  3510  00A4                     	ds	2
  3511  00A6                     _flags:	
  3512  00A6                     	ds	2
  3513  00A8                     _dbuf:	
  3514  00A8                     	ds	32
  3515                           
  3516                           	psect	clrtext
  3517  01BA                     clear_ram0:	
  3518                           ;	Called with FSR0 containing the base address, and
  3519                           ;	WREG with the size to clear
  3520                           
  3521  01BA  0064               	clrwdt	;clear the watchdog before getting into this loop
  3522  01BB                     clrloop0:	
  3523  01BB  0180               	clrf	0	;clear RAM location pointed to by FSR
  3524  01BC  3101               	addfsr 0,1
  3525  01BD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3526  01BE  29BB               	goto	clrloop0	;have we reached the end yet?
  3527  01BF  3400               	retlw	0	;all done for this memory range, return
  3528                           
  3529                           	psect	cstackBANK1
  3530  00CE                     __pcstackBANK1:	
  3531  00CE                     main@valor:	
  3532                           
  3533                           ; 2 bytes @ 0x0
  3534  00CE                     	ds	2
  3535  00D0                     main@letra:	
  3536                           
  3537                           ; 1 bytes @ 0x2
  3538  00D0                     	ds	1
  3539                           
  3540                           	psect	cstackCOMMON
  3541  0070                     __pcstackCOMMON:	
  3542  0070                     ?_EUSART_SetFramingErrorHandler:	
  3543  0070                     ?_EUSART_SetOverrunErrorHandler:	
  3544                           ; 1 bytes @ 0x0
  3545                           
  3546  0070                     ?_EUSART_SetErrorHandler:	
  3547                           ; 1 bytes @ 0x0
  3548                           
  3549  0070                     ?_PMD_Initialize:	
  3550                           ; 1 bytes @ 0x0
  3551                           
  3552  0070                     ??_PMD_Initialize:	
  3553                           ; 1 bytes @ 0x0
  3554                           
  3555  0070                     ?_OSCILLATOR_Initialize:	
  3556                           ; 1 bytes @ 0x0
  3557                           
  3558  0070                     ??_OSCILLATOR_Initialize:	
  3559                           ; 1 bytes @ 0x0
  3560                           
  3561  0070                     ?_ADCC_Initialize:	
  3562                           ; 1 bytes @ 0x0
  3563                           
  3564  0070                     ??_ADCC_Initialize:	
  3565                           ; 1 bytes @ 0x0
  3566                           
  3567  0070                     ?_EUSART_Initialize:	
  3568                           ; 1 bytes @ 0x0
  3569                           
  3570  0070                     ?_EUSART_is_rx_ready:	
  3571                           ; 1 bytes @ 0x0
  3572                           
  3573  0070                     ??_EUSART_is_rx_ready:	
  3574                           ; 1 bytes @ 0x0
  3575                           
  3576  0070                     ?_EUSART_Read:	
  3577                           ; 1 bytes @ 0x0
  3578                           
  3579  0070                     ??_EUSART_Read:	
  3580                           ; 1 bytes @ 0x0
  3581                           
  3582  0070                     ?_EUSART_Write:	
  3583                           ; 1 bytes @ 0x0
  3584                           
  3585  0070                     ??_EUSART_Write:	
  3586                           ; 1 bytes @ 0x0
  3587                           
  3588  0070                     ?_getch:	
  3589                           ; 1 bytes @ 0x0
  3590                           
  3591  0070                     ??_getch:	
  3592                           ; 1 bytes @ 0x0
  3593                           
  3594  0070                     ?_putch:	
  3595                           ; 1 bytes @ 0x0
  3596                           
  3597  0070                     ?_PIN_MANAGER_Initialize:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600  0070                     ??_PIN_MANAGER_Initialize:	
  3601                           ; 1 bytes @ 0x0
  3602                           
  3603  0070                     ?_SYSTEM_Initialize:	
  3604                           ; 1 bytes @ 0x0
  3605                           
  3606  0070                     ?_main:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609  0070                     ??___aodiv:	
  3610                           ; 1 bytes @ 0x0
  3611                           
  3612  0070                     ??___aomod:	
  3613                           ; 1 bytes @ 0x0
  3614                           
  3615  0070                     ?_strlen:	
  3616                           ; 1 bytes @ 0x0
  3617                           
  3618  0070                     ?_ADCC_GetSingleConversion:	
  3619                           ; 2 bytes @ 0x0
  3620                           
  3621  0070                     EUSART_Write@txData:	
  3622                           ; 2 bytes @ 0x0
  3623                           
  3624  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3625                           ; 1 bytes @ 0x0
  3626                           
  3627  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3628                           ; 2 bytes @ 0x0
  3629                           
  3630  0070                     EUSART_SetErrorHandler@interruptHandler:	
  3631                           ; 2 bytes @ 0x0
  3632                           
  3633                           
  3634                           ; 2 bytes @ 0x0
  3635  0070                     	ds	1
  3636  0071                     ??_putch:	
  3637  0071                     putch@txData:	
  3638                           ; 1 bytes @ 0x1
  3639                           
  3640  0071                     ___aodiv@counter:	
  3641                           ; 1 bytes @ 0x1
  3642                           
  3643  0071                     ___aomod@counter:	
  3644                           ; 1 bytes @ 0x1
  3645                           
  3646                           
  3647                           ; 1 bytes @ 0x1
  3648  0071                     	ds	1
  3649  0072                     ??_EUSART_SetFramingErrorHandler:	
  3650  0072                     ??_EUSART_SetOverrunErrorHandler:	
  3651                           ; 1 bytes @ 0x2
  3652                           
  3653  0072                     ??_EUSART_SetErrorHandler:	
  3654                           ; 1 bytes @ 0x2
  3655                           
  3656  0072                     ??_strlen:	
  3657                           ; 1 bytes @ 0x2
  3658                           
  3659  0072                     ??_EUSART_Initialize:	
  3660                           ; 1 bytes @ 0x2
  3661                           
  3662  0072                     ??_SYSTEM_Initialize:	
  3663                           ; 1 bytes @ 0x2
  3664                           
  3665  0072                     ?_fputc:	
  3666                           ; 1 bytes @ 0x2
  3667                           
  3668  0072                     ___aodiv@sign:	
  3669                           ; 2 bytes @ 0x2
  3670                           
  3671  0072                     ___aomod@sign:	
  3672                           ; 1 bytes @ 0x2
  3673                           
  3674  0072                     fputc@c:	
  3675                           ; 1 bytes @ 0x2
  3676                           
  3677                           
  3678                           ; 2 bytes @ 0x2
  3679  0072                     	ds	1
  3680  0073                     ??_ADCC_GetSingleConversion:	
  3681  0073                     ?_abs:	
  3682                           ; 1 bytes @ 0x3
  3683                           
  3684  0073                     ADCC_GetSingleConversion@channel:	
  3685                           ; 2 bytes @ 0x3
  3686                           
  3687  0073                     strlen@a:	
  3688                           ; 1 bytes @ 0x3
  3689                           
  3690  0073                     abs@a:	
  3691                           ; 1 bytes @ 0x3
  3692                           
  3693  0073                     ___aodiv@quotient:	
  3694                           ; 2 bytes @ 0x3
  3695                           
  3696                           
  3697                           ; 8 bytes @ 0x3
  3698  0073                     	ds	1
  3699  0074                     fputc@fp:	
  3700  0074                     strlen@s:	
  3701                           ; 1 bytes @ 0x4
  3702                           
  3703                           
  3704                           ; 1 bytes @ 0x4
  3705  0074                     	ds	1
  3706  0075                     ??_fputc:	
  3707  0075                     ??_abs:	
  3708                           ; 1 bytes @ 0x5
  3709                           
  3710                           
  3711                           ; 1 bytes @ 0x5
  3712  0075                     	ds	5
  3713  007A                     ?_fputs:	
  3714  007A                     fputs@fp:	
  3715                           ; 2 bytes @ 0xA
  3716                           
  3717                           
  3718                           ; 1 bytes @ 0xA
  3719  007A                     	ds	1
  3720  007B                     ??_fputs:	
  3721                           
  3722                           ; 1 bytes @ 0xB
  3723  007B                     	ds	3
  3724                           
  3725                           	psect	cstackBANK0
  3726  0020                     __pcstackBANK0:	
  3727  0020                     ?___aodiv:	
  3728  0020                     ?___aomod:	
  3729                           ; 8 bytes @ 0x0
  3730                           
  3731  0020                     fputs@c:	
  3732                           ; 8 bytes @ 0x0
  3733                           
  3734  0020                     ___aodiv@divisor:	
  3735                           ; 1 bytes @ 0x0
  3736                           
  3737  0020                     ___aomod@divisor:	
  3738                           ; 8 bytes @ 0x0
  3739                           
  3740                           
  3741                           ; 8 bytes @ 0x0
  3742  0020                     	ds	1
  3743  0021                     fputs@i:	
  3744                           
  3745                           ; 2 bytes @ 0x1
  3746  0021                     	ds	2
  3747  0023                     fputs@s:	
  3748                           
  3749                           ; 1 bytes @ 0x3
  3750  0023                     	ds	1
  3751  0024                     ?_pad:	
  3752  0024                     pad@buf:	
  3753                           ; 2 bytes @ 0x4
  3754                           
  3755                           
  3756                           ; 1 bytes @ 0x4
  3757  0024                     	ds	1
  3758  0025                     pad@p:	
  3759                           
  3760                           ; 2 bytes @ 0x5
  3761  0025                     	ds	2
  3762  0027                     ??_pad:	
  3763                           
  3764                           ; 1 bytes @ 0x7
  3765  0027                     	ds	1
  3766  0028                     pad@i:	
  3767  0028                     ___aodiv@dividend:	
  3768                           ; 2 bytes @ 0x8
  3769                           
  3770  0028                     ___aomod@dividend:	
  3771                           ; 8 bytes @ 0x8
  3772                           
  3773                           
  3774                           ; 8 bytes @ 0x8
  3775  0028                     	ds	2
  3776  002A                     pad@w:	
  3777                           
  3778                           ; 2 bytes @ 0xA
  3779  002A                     	ds	2
  3780  002C                     pad@fp:	
  3781                           
  3782                           ; 1 bytes @ 0xC
  3783  002C                     	ds	4
  3784  0030                     ?_dtoa:	
  3785  0030                     dtoa@d:	
  3786                           ; 2 bytes @ 0x10
  3787                           
  3788                           
  3789                           ; 8 bytes @ 0x10
  3790  0030                     	ds	8
  3791  0038                     ??_dtoa:	
  3792                           
  3793                           ; 1 bytes @ 0x18
  3794  0038                     	ds	3
  3795  003B                     _dtoa$777:	
  3796                           
  3797                           ; 2 bytes @ 0x1B
  3798  003B                     	ds	2
  3799  003D                     dtoa@p:	
  3800                           
  3801                           ; 2 bytes @ 0x1D
  3802  003D                     	ds	2
  3803  003F                     dtoa@fp:	
  3804                           
  3805                           ; 1 bytes @ 0x1F
  3806  003F                     	ds	1
  3807  0040                     dtoa@w:	
  3808                           
  3809                           ; 2 bytes @ 0x20
  3810  0040                     	ds	2
  3811  0042                     dtoa@s:	
  3812                           
  3813                           ; 2 bytes @ 0x22
  3814  0042                     	ds	2
  3815  0044                     dtoa@n:	
  3816                           
  3817                           ; 8 bytes @ 0x24
  3818  0044                     	ds	8
  3819  004C                     dtoa@i:	
  3820                           
  3821                           ; 2 bytes @ 0x2C
  3822  004C                     	ds	2
  3823  004E                     ?_vfpfcnvrt:	
  3824  004E                     vfpfcnvrt@fmt:	
  3825                           ; 2 bytes @ 0x2E
  3826                           
  3827                           
  3828                           ; 1 bytes @ 0x2E
  3829  004E                     	ds	1
  3830  004F                     vfpfcnvrt@ap:	
  3831                           
  3832                           ; 1 bytes @ 0x2F
  3833  004F                     	ds	1
  3834  0050                     ??_vfpfcnvrt:	
  3835                           
  3836                           ; 1 bytes @ 0x30
  3837  0050                     	ds	5
  3838  0055                     vfpfcnvrt@ll:	
  3839                           
  3840                           ; 8 bytes @ 0x35
  3841  0055                     	ds	8
  3842  005D                     vfpfcnvrt@fp:	
  3843                           
  3844                           ; 1 bytes @ 0x3D
  3845  005D                     	ds	1
  3846  005E                     ?_vfprintf:	
  3847  005E                     vfprintf@fmt:	
  3848                           ; 2 bytes @ 0x3E
  3849                           
  3850                           
  3851                           ; 2 bytes @ 0x3E
  3852  005E                     	ds	2
  3853  0060                     vfprintf@ap:	
  3854                           
  3855                           ; 1 bytes @ 0x40
  3856  0060                     	ds	1
  3857  0061                     ??_vfprintf:	
  3858                           
  3859                           ; 1 bytes @ 0x41
  3860  0061                     	ds	2
  3861  0063                     vfprintf@fp:	
  3862                           
  3863                           ; 1 bytes @ 0x43
  3864  0063                     	ds	1
  3865  0064                     vfprintf@cfmt:	
  3866                           
  3867                           ; 2 bytes @ 0x44
  3868  0064                     	ds	2
  3869  0066                     ?_printf:	
  3870  0066                     printf@fmt:	
  3871                           ; 2 bytes @ 0x46
  3872                           
  3873                           
  3874                           ; 2 bytes @ 0x46
  3875  0066                     	ds	4
  3876  006A                     ??_printf:	
  3877                           
  3878                           ; 1 bytes @ 0x4A
  3879  006A                     	ds	3
  3880  006D                     printf@ap:	
  3881                           
  3882                           ; 1 bytes @ 0x4D
  3883  006D                     	ds	1
  3884  006E                     ??_main:	
  3885                           
  3886                           ; 1 bytes @ 0x4E
  3887  006E                     	ds	1
  3888                           
  3889                           	psect	maintext
  3890  0396                     __pmaintext:	
  3891 ;;
  3892 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3893 ;;
  3894 ;; *************** function _main *****************
  3895 ;; Defined at:
  3896 ;;		line 49 in file "main.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  valor           2    0[BANK1 ] int 
  3901 ;;  letra           1    2[BANK1 ] unsigned char 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1    wreg      void 
  3904 ;; Registers used:
  3905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : B1F/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3912 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3913 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3914 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3915 ;;Total ram usage:        4 bytes
  3916 ;; Hardware stack levels required when called:    9
  3917 ;; This function calls:
  3918 ;;		_ADCC_GetSingleConversion
  3919 ;;		_EUSART_is_rx_ready
  3920 ;;		_SYSTEM_Initialize
  3921 ;;		_getch
  3922 ;;		_printf
  3923 ;; This function is called by:
  3924 ;;		Startup code after reset
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           
  3929                           ;psect for function _main
  3930  0396                     _main:	
  3931                           
  3932                           ;main.c: 52:     SYSTEM_Initialize();
  3933                           
  3934                           ;incstack = 0
  3935                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3936  0396  3181  21E4  3183   	fcall	_SYSTEM_Initialize
  3937  0399                     l388:	
  3938                           ;main.c: 68:     char letra;;main.c: 69:     int valor;;main.c: 70:     while (1)
  3939                           
  3940                           
  3941                           ;main.c: 71:     {;main.c: 72:          if (EUSART_is_rx_ready()){
  3942  0399  3181  219E  3183   	fcall	_EUSART_is_rx_ready
  3943  039C  3A00               	xorlw	0
  3944  039D  1903               	skipnz
  3945  039E  2BEC               	goto	l2095
  3946                           
  3947                           ;main.c: 73:             letra=getch();
  3948  039F  3181  219B  3183   	fcall	_getch
  3949  03A2  0020               	movlb	0	; select bank0
  3950  03A3  00EE               	movwf	??_main
  3951  03A4  086E               	movf	??_main,w
  3952  03A5  0021               	movlb	1	; select bank1
  3953  03A6  00D0               	movwf	main@letra^(0+128)
  3954                           
  3955                           ;main.c: 74:             if (letra=='1' || letra=='2' ){
  3956  03A7  3031               	movlw	49
  3957  03A8  0650               	xorwf	main@letra^(0+128),w
  3958  03A9  1903               	btfsc	3,2
  3959  03AA  2BAF               	goto	l393
  3960  03AB  3032               	movlw	50
  3961  03AC  0650               	xorwf	main@letra^(0+128),w
  3962  03AD  1D03               	btfss	3,2
  3963  03AE  2BB4               	goto	l2079
  3964  03AF                     l393:	
  3965                           ;main.c: 75:                 do { LATAbits.LATA4 = 1; } while(0);
  3966                           
  3967  03AF  0020               	movlb	0	; select bank0
  3968  03B0  1616               	bsf	22,4	;volatile
  3969                           
  3970                           ;main.c: 76:                 do { LATAbits.LATA5 = 0; } while(0);
  3971  03B1  1296               	bcf	22,5	;volatile
  3972                           
  3973                           ;main.c: 77:                 do { LATAbits.LATA6 = 0; } while(0);
  3974  03B2  1316               	bcf	22,6	;volatile
  3975                           
  3976                           ;main.c: 78:                 do { LATAbits.LATA7 = 0; } while(0);
  3977  03B3  1396               	bcf	22,7	;volatile
  3978  03B4                     l2079:	
  3979                           
  3980                           ;main.c: 80:             if (letra=='3' || letra=='4'){
  3981  03B4  3033               	movlw	51
  3982  03B5  0021               	movlb	1	; select bank1
  3983  03B6  0650               	xorwf	main@letra^(0+128),w
  3984  03B7  1903               	btfsc	3,2
  3985  03B8  2BBD               	goto	l404
  3986  03B9  3034               	movlw	52
  3987  03BA  0650               	xorwf	main@letra^(0+128),w
  3988  03BB  1D03               	btfss	3,2
  3989  03BC  2BC2               	goto	l2083
  3990  03BD                     l404:	
  3991                           ;main.c: 81:                 do { LATAbits.LATA5 = 1; } while(0);
  3992                           
  3993  03BD  0020               	movlb	0	; select bank0
  3994  03BE  1696               	bsf	22,5	;volatile
  3995                           
  3996                           ;main.c: 82:                 do { LATAbits.LATA4 = 0; } while(0);
  3997  03BF  1216               	bcf	22,4	;volatile
  3998                           
  3999                           ;main.c: 83:                 do { LATAbits.LATA6 = 0; } while(0);
  4000  03C0  1316               	bcf	22,6	;volatile
  4001                           
  4002                           ;main.c: 84:                 do { LATAbits.LATA7 = 0; } while(0);
  4003  03C1  1396               	bcf	22,7	;volatile
  4004  03C2                     l2083:	
  4005                           
  4006                           ;main.c: 86:              if (letra=='4' || letra=='5'){
  4007  03C2  3034               	movlw	52
  4008  03C3  0021               	movlb	1	; select bank1
  4009  03C4  0650               	xorwf	main@letra^(0+128),w
  4010  03C5  1903               	btfsc	3,2
  4011  03C6  2BCB               	goto	l415
  4012  03C7  3035               	movlw	53
  4013  03C8  0650               	xorwf	main@letra^(0+128),w
  4014  03C9  1D03               	btfss	3,2
  4015  03CA  2BD0               	goto	l2087
  4016  03CB                     l415:	
  4017                           ;main.c: 87:                 do { LATAbits.LATA6 = 1; } while(0);
  4018                           
  4019  03CB  0020               	movlb	0	; select bank0
  4020  03CC  1716               	bsf	22,6	;volatile
  4021                           
  4022                           ;main.c: 88:                 do { LATAbits.LATA4 = 0; } while(0);
  4023  03CD  1216               	bcf	22,4	;volatile
  4024                           
  4025                           ;main.c: 89:                 do { LATAbits.LATA5 = 0; } while(0);
  4026  03CE  1296               	bcf	22,5	;volatile
  4027                           
  4028                           ;main.c: 90:                 do { LATAbits.LATA7 = 0; } while(0);
  4029  03CF  1396               	bcf	22,7	;volatile
  4030  03D0                     l2087:	
  4031                           
  4032                           ;main.c: 92:              if (letra=='6' || letra=='7'){
  4033  03D0  3036               	movlw	54
  4034  03D1  0021               	movlb	1	; select bank1
  4035  03D2  0650               	xorwf	main@letra^(0+128),w
  4036  03D3  1903               	btfsc	3,2
  4037  03D4  2BD9               	goto	l426
  4038  03D5  3037               	movlw	55
  4039  03D6  0650               	xorwf	main@letra^(0+128),w
  4040  03D7  1D03               	btfss	3,2
  4041  03D8  2BDE               	goto	l2091
  4042  03D9                     l426:	
  4043                           ;main.c: 93:                 do { LATAbits.LATA7 = 1; } while(0);
  4044                           
  4045  03D9  0020               	movlb	0	; select bank0
  4046  03DA  1796               	bsf	22,7	;volatile
  4047                           
  4048                           ;main.c: 94:                 do { LATAbits.LATA4 = 0; } while(0);
  4049  03DB  1216               	bcf	22,4	;volatile
  4050                           
  4051                           ;main.c: 95:                 do { LATAbits.LATA6 = 0; } while(0);
  4052  03DC  1316               	bcf	22,6	;volatile
  4053                           
  4054                           ;main.c: 96:                 do { LATAbits.LATA5 = 0; } while(0);
  4055  03DD  1296               	bcf	22,5	;volatile
  4056  03DE                     l2091:	
  4057                           
  4058                           ;main.c: 98:             if (letra=='8' || letra=='9'){
  4059  03DE  3038               	movlw	56
  4060  03DF  0021               	movlb	1	; select bank1
  4061  03E0  0650               	xorwf	main@letra^(0+128),w
  4062  03E1  1903               	btfsc	3,2
  4063  03E2  2BE7               	goto	l437
  4064  03E3  3039               	movlw	57
  4065  03E4  0650               	xorwf	main@letra^(0+128),w
  4066  03E5  1D03               	btfss	3,2
  4067  03E6  2BEC               	goto	l2095
  4068  03E7                     l437:	
  4069                           ;main.c: 99:                 do { LATAbits.LATA7 = 1; } while(0);
  4070                           
  4071  03E7  0020               	movlb	0	; select bank0
  4072  03E8  1796               	bsf	22,7	;volatile
  4073                           
  4074                           ;main.c: 100:                 do { LATAbits.LATA4 = 0; } while(0);
  4075  03E9  1216               	bcf	22,4	;volatile
  4076                           
  4077                           ;main.c: 101:                 do { LATAbits.LATA6 = 1; } while(0);
  4078  03EA  1716               	bsf	22,6	;volatile
  4079                           
  4080                           ;main.c: 102:                 do { LATAbits.LATA5 = 0; } while(0);
  4081  03EB  1296               	bcf	22,5	;volatile
  4082  03EC                     l2095:	
  4083                           
  4084                           ;main.c: 105:         valor=ADCC_GetSingleConversion(analogico0);
  4085  03EC  3000               	movlw	0
  4086  03ED  3181  21F3  3183   	fcall	_ADCC_GetSingleConversion
  4087  03F0  0871               	movf	?_ADCC_GetSingleConversion+1,w
  4088  03F1  0021               	movlb	1	; select bank1
  4089  03F2  00CF               	movwf	(main@valor+1)^(0+128)
  4090  03F3  0870               	movf	?_ADCC_GetSingleConversion,w
  4091  03F4  00CE               	movwf	main@valor^(0+128)
  4092                           
  4093                           ;main.c: 106:         printf("%d\n",valor);
  4094  03F5  3000               	movlw	low (STR_1| (0+32768))
  4095  03F6  0020               	movlb	0	; select bank0
  4096  03F7  00E6               	movwf	printf@fmt
  4097  03F8  3088               	movlw	high (STR_1| (0+32768))
  4098  03F9  00E7               	movwf	printf@fmt+1
  4099  03FA  0021               	movlb	1	; select bank1
  4100  03FB  084F               	movf	(main@valor+1)^(0+128),w
  4101  03FC  0020               	movlb	0	; select bank0
  4102  03FD  00E9               	movwf	?_printf+3
  4103  03FE  0021               	movlb	1	; select bank1
  4104  03FF  084E               	movf	main@valor^(0+128),w
  4105  0400  0020               	movlb	0	; select bank0
  4106  0401  00E8               	movwf	?_printf+2
  4107  0402  3182  2203  3183   	fcall	_printf
  4108  0405  2B99               	goto	l388
  4109  0406                     __end_of_main:	
  4110                           
  4111                           	psect	text1
  4112  0203                     __ptext1:	
  4113 ;; *************** function _printf *****************
  4114 ;; Defined at:
  4115 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  4118 ;;		 -> STR_1(4), 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  ret             2    0        int 
  4121 ;;  ap              1   77[BANK0 ] PTR void [1]
  4122 ;;		 -> ?_printf(2), 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  2   70[BANK0 ] int 
  4125 ;; Registers used:
  4126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4132 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4136 ;;Total ram usage:        8 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    8
  4139 ;; This function calls:
  4140 ;;		_vfprintf
  4141 ;; This function is called by:
  4142 ;;		_main
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           
  4147                           ;psect for function _printf
  4148  0203                     _printf:	
  4149                           
  4150                           ;incstack = 0
  4151                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4152  0203  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4153  0204  0020               	movlb	0	; select bank0
  4154  0205  00EA               	movwf	??_printf
  4155  0206  086A               	movf	??_printf,w
  4156  0207  00ED               	movwf	printf@ap
  4157  0208  0867               	movf	printf@fmt+1,w
  4158  0209  00DF               	movwf	vfprintf@fmt+1
  4159  020A  0866               	movf	printf@fmt,w
  4160  020B  00DE               	movwf	vfprintf@fmt
  4161  020C  306D               	movlw	(low (printf@ap| 0))& (0+255)
  4162  020D  00EA               	movwf	??_printf
  4163  020E  086A               	movf	??_printf,w
  4164  020F  00E0               	movwf	vfprintf@ap
  4165  0210  3000               	movlw	0
  4166  0211  3182  22A2         	fcall	_vfprintf
  4167  0213  0008               	return
  4168  0214                     __end_of_printf:	
  4169                           
  4170                           	psect	text2
  4171  02A2                     __ptext2:	
  4172 ;; *************** function _vfprintf *****************
  4173 ;; Defined at:
  4174 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  fp              1    wreg     PTR struct _IO_FILE
  4177 ;;		 -> NULL(0), 
  4178 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  4179 ;;		 -> STR_1(4), 
  4180 ;;  ap              1   64[BANK0 ] PTR PTR void 
  4181 ;;		 -> printf@ap(1), 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  4184 ;;		 -> NULL(0), 
  4185 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  4186 ;;		 -> STR_1(4), 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2   62[BANK0 ] int 
  4189 ;; Registers used:
  4190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4196 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;Total ram usage:        8 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    7
  4203 ;; This function calls:
  4204 ;;		_vfpfcnvrt
  4205 ;; This function is called by:
  4206 ;;		_printf
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           
  4211                           ;psect for function _vfprintf
  4212  02A2                     _vfprintf:	
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4216                           ;vfprintf@fp stored from wreg
  4217  02A2  0020               	movlb	0	; select bank0
  4218  02A3  00E3               	movwf	vfprintf@fp
  4219                           
  4220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4221  02A4  085F               	movf	vfprintf@fmt+1,w
  4222  02A5  00E5               	movwf	vfprintf@cfmt+1
  4223  02A6  085E               	movf	vfprintf@fmt,w
  4224  02A7  00E4               	movwf	vfprintf@cfmt
  4225                           
  4226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4227  02A8  0021               	movlb	1	; select bank1
  4228  02A9  01A0               	clrf	_nout^(0+128)
  4229  02AA  01A1               	clrf	(_nout+1)^(0+128)
  4230  02AB                     l2027:	
  4231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4232                           
  4233                           
  4234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4235  02AB  0020               	movlb	0	; select bank0
  4236  02AC  0864               	movf	vfprintf@cfmt,w
  4237  02AD  0084               	movwf	4
  4238  02AE  0865               	movf	vfprintf@cfmt+1,w
  4239  02AF  0085               	movwf	5
  4240  02B0  0012               	moviw fsr0++
  4241  02B1  1903               	btfsc	3,2
  4242  02B2  2AC8               	goto	l2029
  4243                           
  4244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4245  02B3  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4246  02B4  00E1               	movwf	??_vfprintf
  4247  02B5  0861               	movf	??_vfprintf,w
  4248  02B6  00CE               	movwf	vfpfcnvrt@fmt
  4249  02B7  0860               	movf	vfprintf@ap,w
  4250  02B8  00E2               	movwf	??_vfprintf+1
  4251  02B9  0862               	movf	??_vfprintf+1,w
  4252  02BA  00CF               	movwf	vfpfcnvrt@ap
  4253  02BB  0863               	movf	vfprintf@fp,w
  4254  02BC  3184  2406  3182   	fcall	_vfpfcnvrt
  4255  02BF  0020               	movlb	0	; select bank0
  4256  02C0  084E               	movf	?_vfpfcnvrt,w
  4257  02C1  0021               	movlb	1	; select bank1
  4258  02C2  07A0               	addwf	_nout^(0+128),f
  4259  02C3  0020               	movlb	0	; select bank0
  4260  02C4  084F               	movf	?_vfpfcnvrt+1,w
  4261  02C5  0021               	movlb	1	; select bank1
  4262  02C6  3DA1               	addwfc	(_nout+1)^(0+128),f
  4263  02C7  2AAB               	goto	l2027
  4264  02C8                     l2029:	
  4265                           
  4266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4267  02C8  0021               	movlb	1	; select bank1
  4268  02C9  0821               	movf	(_nout+1)^(0+128),w
  4269  02CA  0020               	movlb	0	; select bank0
  4270  02CB  00DF               	movwf	?_vfprintf+1
  4271  02CC  0021               	movlb	1	; select bank1
  4272  02CD  0820               	movf	_nout^(0+128),w
  4273  02CE  0020               	movlb	0	; select bank0
  4274  02CF  00DE               	movwf	?_vfprintf
  4275  02D0  0008               	return
  4276  02D1                     __end_of_vfprintf:	
  4277                           
  4278                           	psect	text3
  4279  0406                     __ptext3:	
  4280 ;; *************** function _vfpfcnvrt *****************
  4281 ;; Defined at:
  4282 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  fp              1    wreg     PTR struct _IO_FILE
  4285 ;;		 -> NULL(0), 
  4286 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  4287 ;;		 -> vfprintf@cfmt(2), 
  4288 ;;  ap              1   47[BANK0 ] PTR PTR void 
  4289 ;;		 -> printf@ap(1), 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  4292 ;;		 -> NULL(0), 
  4293 ;;  ll              8   53[BANK0 ] long long 
  4294 ;;  llu             8    0        unsigned long long 
  4295 ;;  f               4    0        unsigned long long 
  4296 ;;  ct              3    0        unsigned char [3]
  4297 ;;  vp              2    0        PTR void 
  4298 ;;  i               2    0        int 
  4299 ;;  done            2    0        int 
  4300 ;;  cp              2    0        PTR unsigned char 
  4301 ;;  c               1    0        unsigned char 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  2   46[BANK0 ] int 
  4304 ;; Registers used:
  4305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4311 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4312 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4313 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4314 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;Total ram usage:       16 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    6
  4318 ;; This function calls:
  4319 ;;		_dtoa
  4320 ;;		_fputc
  4321 ;; This function is called by:
  4322 ;;		_vfprintf
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           
  4327                           ;psect for function _vfpfcnvrt
  4328  0406                     _vfpfcnvrt:	
  4329                           
  4330                           ;incstack = 0
  4331                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4332                           ;vfpfcnvrt@fp stored from wreg
  4333  0406  0020               	movlb	0	; select bank0
  4334  0407  00DD               	movwf	vfpfcnvrt@fp
  4335                           
  4336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4337  0408  084E               	movf	vfpfcnvrt@fmt,w
  4338  0409  0086               	movwf	6
  4339  040A  0187               	clrf	7
  4340  040B  3F40               	moviw [0]fsr1
  4341  040C  00D0               	movwf	??_vfpfcnvrt
  4342  040D  3F41               	moviw [1]fsr1
  4343  040E  00D1               	movwf	??_vfpfcnvrt+1
  4344  040F  0850               	movf	??_vfpfcnvrt,w
  4345  0410  0084               	movwf	4
  4346  0411  0851               	movf	??_vfpfcnvrt+1,w
  4347  0412  0085               	movwf	5
  4348  0413  0012               	moviw fsr0++
  4349  0414  3A25               	xorlw	37
  4350  0415  1D03               	btfss	3,2
  4351  0416  2CB3               	goto	l1913
  4352                           
  4353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4354  0417  084E               	movf	vfpfcnvrt@fmt,w
  4355  0418  0086               	movwf	6
  4356  0419  0187               	clrf	7
  4357  041A  3001               	movlw	1
  4358  041B  0781               	addwf	1,f
  4359  041C  3141               	addfsr 1,1
  4360  041D  1803               	skipnc
  4361  041E  0A81               	incf	1,f
  4362                           
  4363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4364  041F  0021               	movlb	1	; select bank1
  4365  0420  01A2               	clrf	_width^(0+128)
  4366  0421  01A3               	clrf	(_width+1)^(0+128)
  4367  0422  01A6               	clrf	_flags^(0+128)
  4368  0423  01A7               	clrf	(_flags+1)^(0+128)
  4369                           
  4370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4371  0424  30FF               	movlw	255
  4372  0425  00A4               	movwf	_prec^(0+128)
  4373  0426  30FF               	movlw	255
  4374  0427  00A5               	movwf	(_prec^(0+128)+1)
  4375                           
  4376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4377  0428  0020               	movlb	0	; select bank0
  4378  0429  084E               	movf	vfpfcnvrt@fmt,w
  4379  042A  0086               	movwf	6
  4380  042B  0187               	clrf	7
  4381  042C  3F40               	moviw [0]fsr1
  4382  042D  00D0               	movwf	??_vfpfcnvrt
  4383  042E  3F41               	moviw [1]fsr1
  4384  042F  00D1               	movwf	??_vfpfcnvrt+1
  4385  0430  0850               	movf	??_vfpfcnvrt,w
  4386  0431  0084               	movwf	4
  4387  0432  0851               	movf	??_vfpfcnvrt+1,w
  4388  0433  0085               	movwf	5
  4389  0434  0012               	moviw fsr0++
  4390  0435  3A64               	xorlw	100
  4391  0436  1903               	btfsc	3,2
  4392  0437  2C47               	goto	l1889
  4393  0438  084E               	movf	vfpfcnvrt@fmt,w
  4394  0439  0086               	movwf	6
  4395  043A  0187               	clrf	7
  4396  043B  3F40               	moviw [0]fsr1
  4397  043C  00D0               	movwf	??_vfpfcnvrt
  4398  043D  3F41               	moviw [1]fsr1
  4399  043E  00D1               	movwf	??_vfpfcnvrt+1
  4400  043F  0850               	movf	??_vfpfcnvrt,w
  4401  0440  0084               	movwf	4
  4402  0441  0851               	movf	??_vfpfcnvrt+1,w
  4403  0442  0085               	movwf	5
  4404  0443  0012               	moviw fsr0++
  4405  0444  3A69               	xorlw	105
  4406  0445  1D03               	btfss	3,2
  4407  0446  2C81               	goto	l1897
  4408  0447                     l1889:	
  4409                           
  4410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4411  0447  084E               	movf	vfpfcnvrt@fmt,w
  4412  0448  0086               	movwf	6
  4413  0449  0187               	clrf	7
  4414  044A  3001               	movlw	1
  4415  044B  0781               	addwf	1,f
  4416  044C  3141               	addfsr 1,1
  4417  044D  1803               	skipnc
  4418  044E  0A81               	incf	1,f
  4419                           
  4420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4421  044F  084F               	movf	vfpfcnvrt@ap,w
  4422  0450  0086               	movwf	6
  4423  0451  0187               	clrf	7
  4424  0452  0801               	movf	1,w
  4425  0453  0084               	movwf	4
  4426  0454  0185               	clrf	5
  4427  0455  3002               	movlw	2
  4428  0456  0781               	addwf	1,f
  4429  0457  3F00               	moviw [0]fsr0
  4430  0458  00D0               	movwf	??_vfpfcnvrt
  4431  0459  3F01               	moviw [1]fsr0
  4432  045A  00D1               	movwf	??_vfpfcnvrt+1
  4433  045B  0850               	movf	??_vfpfcnvrt,w
  4434  045C  00D5               	movwf	vfpfcnvrt@ll
  4435  045D  0851               	movf	??_vfpfcnvrt+1,w
  4436  045E  00D6               	movwf	vfpfcnvrt@ll+1
  4437  045F  0D89               	rlf	9,f
  4438  0460  3B89               	subwfb	9,f
  4439  0461  0989               	comf	9,f
  4440  0462  00D7               	movwf	vfpfcnvrt@ll+2
  4441  0463  00D8               	movwf	vfpfcnvrt@ll+3
  4442  0464  00D9               	movwf	vfpfcnvrt@ll+4
  4443  0465  00DA               	movwf	vfpfcnvrt@ll+5
  4444  0466  00DB               	movwf	vfpfcnvrt@ll+6
  4445  0467  00DC               	movwf	vfpfcnvrt@ll+7
  4446                           
  4447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4448  0468  0855               	movf	vfpfcnvrt@ll,w
  4449  0469  00B0               	movwf	dtoa@d
  4450  046A  0856               	movf	vfpfcnvrt@ll+1,w
  4451  046B  00B1               	movwf	dtoa@d+1
  4452  046C  0857               	movf	vfpfcnvrt@ll+2,w
  4453  046D  00B2               	movwf	dtoa@d+2
  4454  046E  0858               	movf	vfpfcnvrt@ll+3,w
  4455  046F  00B3               	movwf	dtoa@d+3
  4456  0470  0859               	movf	vfpfcnvrt@ll+4,w
  4457  0471  00B4               	movwf	dtoa@d+4
  4458  0472  085A               	movf	vfpfcnvrt@ll+5,w
  4459  0473  00B5               	movwf	dtoa@d+5
  4460  0474  085B               	movf	vfpfcnvrt@ll+6,w
  4461  0475  00B6               	movwf	dtoa@d+6
  4462  0476  085C               	movf	vfpfcnvrt@ll+7,w
  4463  0477  00B7               	movwf	dtoa@d+7
  4464  0478  085D               	movf	vfpfcnvrt@fp,w
  4465  0479  3186  26A5         	fcall	_dtoa
  4466  047B  0020               	movlb	0	; select bank0
  4467  047C  0831               	movf	?_dtoa+1,w
  4468  047D  00CF               	movwf	?_vfpfcnvrt+1
  4469  047E  0830               	movf	?_dtoa,w
  4470  047F  00CE               	movwf	?_vfpfcnvrt
  4471  0480  0008               	return
  4472  0481                     l1897:	
  4473                           
  4474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4475  0481  084E               	movf	vfpfcnvrt@fmt,w
  4476  0482  0086               	movwf	6
  4477  0483  0187               	clrf	7
  4478  0484  3F40               	moviw [0]fsr1
  4479  0485  00D0               	movwf	??_vfpfcnvrt
  4480  0486  3F41               	moviw [1]fsr1
  4481  0487  00D1               	movwf	??_vfpfcnvrt+1
  4482  0488  0850               	movf	??_vfpfcnvrt,w
  4483  0489  0084               	movwf	4
  4484  048A  0851               	movf	??_vfpfcnvrt+1,w
  4485  048B  0085               	movwf	5
  4486  048C  0012               	moviw fsr0++
  4487  048D  3A25               	xorlw	37
  4488  048E  1D03               	btfss	3,2
  4489  048F  2CA8               	goto	l1907
  4490                           
  4491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4492  0490  084E               	movf	vfpfcnvrt@fmt,w
  4493  0491  0086               	movwf	6
  4494  0492  0187               	clrf	7
  4495  0493  3001               	movlw	1
  4496  0494  0781               	addwf	1,f
  4497  0495  3141               	addfsr 1,1
  4498  0496  1803               	skipnc
  4499  0497  0A81               	incf	1,f
  4500                           
  4501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4502  0498  3025               	movlw	37
  4503  0499  00F2               	movwf	fputc@c
  4504  049A  3000               	movlw	0
  4505  049B  00F3               	movwf	fputc@c+1
  4506  049C  085D               	movf	vfpfcnvrt@fp,w
  4507  049D  00D0               	movwf	??_vfpfcnvrt
  4508  049E  0850               	movf	??_vfpfcnvrt,w
  4509  049F  00F4               	movwf	fputc@fp
  4510  04A0  3182  22D1         	fcall	_fputc
  4511  04A2                     l1903:	
  4512                           
  4513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4514  04A2  3001               	movlw	1
  4515  04A3  0020               	movlb	0	; select bank0
  4516  04A4  00CE               	movwf	?_vfpfcnvrt
  4517  04A5  3000               	movlw	0
  4518  04A6  00CF               	movwf	?_vfpfcnvrt+1
  4519  04A7  0008               	return
  4520  04A8                     l1907:	
  4521                           
  4522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4523  04A8  084E               	movf	vfpfcnvrt@fmt,w
  4524  04A9  0086               	movwf	6
  4525  04AA  0187               	clrf	7
  4526  04AB  3001               	movlw	1
  4527  04AC  0781               	addwf	1,f
  4528  04AD  3141               	addfsr 1,1
  4529  04AE  1803               	skipnc
  4530  04AF  0A81               	incf	1,f
  4531                           
  4532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4533  04B0  01CE               	clrf	?_vfpfcnvrt
  4534  04B1  01CF               	clrf	?_vfpfcnvrt+1
  4535  04B2  0008               	return
  4536  04B3                     l1913:	
  4537                           
  4538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4539  04B3  084E               	movf	vfpfcnvrt@fmt,w
  4540  04B4  0086               	movwf	6
  4541  04B5  0187               	clrf	7
  4542  04B6  3F40               	moviw [0]fsr1
  4543  04B7  00D0               	movwf	??_vfpfcnvrt
  4544  04B8  3F41               	moviw [1]fsr1
  4545  04B9  00D1               	movwf	??_vfpfcnvrt+1
  4546  04BA  0850               	movf	??_vfpfcnvrt,w
  4547  04BB  0084               	movwf	4
  4548  04BC  0851               	movf	??_vfpfcnvrt+1,w
  4549  04BD  0085               	movwf	5
  4550  04BE  0800               	movf	0,w	;code access
  4551  04BF  00D2               	movwf	??_vfpfcnvrt+2
  4552  04C0  01D3               	clrf	??_vfpfcnvrt+3
  4553  04C1  0852               	movf	??_vfpfcnvrt+2,w
  4554  04C2  00F2               	movwf	fputc@c
  4555  04C3  0853               	movf	??_vfpfcnvrt+3,w
  4556  04C4  00F3               	movwf	fputc@c+1
  4557  04C5  085D               	movf	vfpfcnvrt@fp,w
  4558  04C6  00D4               	movwf	??_vfpfcnvrt+4
  4559  04C7  0854               	movf	??_vfpfcnvrt+4,w
  4560  04C8  00F4               	movwf	fputc@fp
  4561  04C9  3182  22D1  3184   	fcall	_fputc
  4562                           
  4563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4564  04CC  0020               	movlb	0	; select bank0
  4565  04CD  084E               	movf	vfpfcnvrt@fmt,w
  4566  04CE  0086               	movwf	6
  4567  04CF  0187               	clrf	7
  4568  04D0  3001               	movlw	1
  4569  04D1  0781               	addwf	1,f
  4570  04D2  3141               	addfsr 1,1
  4571  04D3  1803               	skipnc
  4572  04D4  0A81               	incf	1,f
  4573  04D5  2CA2               	goto	l1903
  4574  04D6                     __end_of_vfpfcnvrt:	
  4575                           
  4576                           	psect	text4
  4577  06A5                     __ptext4:	
  4578 ;; *************** function _dtoa *****************
  4579 ;; Defined at:
  4580 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;  fp              1    wreg     PTR struct _IO_FILE
  4583 ;;		 -> NULL(0), 
  4584 ;;  d               8   16[BANK0 ] long long 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  4587 ;;		 -> NULL(0), 
  4588 ;;  n               8   36[BANK0 ] long long 
  4589 ;;  i               2   44[BANK0 ] int 
  4590 ;;  s               2   34[BANK0 ] int 
  4591 ;;  w               2   32[BANK0 ] int 
  4592 ;;  p               2   29[BANK0 ] int 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  2   16[BANK0 ] int 
  4595 ;; Registers used:
  4596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4602 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;Total ram usage:       30 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    5
  4609 ;; This function calls:
  4610 ;;		___aodiv
  4611 ;;		___aomod
  4612 ;;		_abs
  4613 ;;		_pad
  4614 ;; This function is called by:
  4615 ;;		_vfpfcnvrt
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _dtoa
  4621  06A5                     _dtoa:	
  4622                           
  4623                           ;incstack = 0
  4624                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4625                           ;dtoa@fp stored from wreg
  4626  06A5  0020               	movlb	0	; select bank0
  4627  06A6  00BF               	movwf	dtoa@fp
  4628                           
  4629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4630  06A7  0830               	movf	dtoa@d,w
  4631  06A8  00C4               	movwf	dtoa@n
  4632  06A9  0831               	movf	dtoa@d+1,w
  4633  06AA  00C5               	movwf	dtoa@n+1
  4634  06AB  0832               	movf	dtoa@d+2,w
  4635  06AC  00C6               	movwf	dtoa@n+2
  4636  06AD  0833               	movf	dtoa@d+3,w
  4637  06AE  00C7               	movwf	dtoa@n+3
  4638  06AF  0834               	movf	dtoa@d+4,w
  4639  06B0  00C8               	movwf	dtoa@n+4
  4640  06B1  0835               	movf	dtoa@d+5,w
  4641  06B2  00C9               	movwf	dtoa@n+5
  4642  06B3  0836               	movf	dtoa@d+6,w
  4643  06B4  00CA               	movwf	dtoa@n+6
  4644  06B5  0837               	movf	dtoa@d+7,w
  4645  06B6  00CB               	movwf	dtoa@n+7
  4646                           
  4647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4648  06B7  3044               	movlw	low dtoa@n
  4649  06B8  0086               	movwf	6
  4650  06B9  3000               	movlw	high dtoa@n
  4651  06BA  0087               	movwf	7
  4652  06BB  3F47               	moviw [7]fsr1
  4653  06BC  00B8               	movwf	??_dtoa
  4654  06BD  1FB8               	btfss	??_dtoa,7
  4655  06BE  2EC1               	goto	u1040
  4656  06BF  3001               	movlw	1
  4657  06C0  2EC2               	goto	u1050
  4658  06C1                     u1040:	
  4659  06C1  3000               	movlw	0
  4660  06C2                     u1050:	
  4661  06C2  0020               	movlb	0	; select bank0
  4662  06C3  00B9               	movwf	??_dtoa+1
  4663  06C4  01BA               	clrf	??_dtoa+2
  4664  06C5  0839               	movf	??_dtoa+1,w
  4665  06C6  00C2               	movwf	dtoa@s
  4666  06C7  083A               	movf	??_dtoa+2,w
  4667  06C8  00C3               	movwf	dtoa@s+1
  4668                           
  4669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4670  06C9  0842               	movf	dtoa@s,w
  4671  06CA  0443               	iorwf	dtoa@s+1,w
  4672  06CB  1903               	btfsc	3,2
  4673  06CC  2EEB               	goto	l630
  4674                           
  4675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4676  06CD  09C4               	comf	dtoa@n,f
  4677  06CE  09C5               	comf	dtoa@n+1,f
  4678  06CF  09C6               	comf	dtoa@n+2,f
  4679  06D0  09C7               	comf	dtoa@n+3,f
  4680  06D1  09C8               	comf	dtoa@n+4,f
  4681  06D2  09C9               	comf	dtoa@n+5,f
  4682  06D3  09CA               	comf	dtoa@n+6,f
  4683  06D4  09CB               	comf	dtoa@n+7,f
  4684  06D5  0AC4               	incf	dtoa@n,f
  4685  06D6  1D03               	skipz
  4686  06D7  2EEB               	goto	l630
  4687  06D8  0AC5               	incf	dtoa@n+1,f
  4688  06D9  1D03               	skipz
  4689  06DA  2EEB               	goto	l630
  4690  06DB  0AC6               	incf	dtoa@n+2,f
  4691  06DC  1D03               	skipz
  4692  06DD  2EEB               	goto	l630
  4693  06DE  0AC7               	incf	dtoa@n+3,f
  4694  06DF  1D03               	skipz
  4695  06E0  2EEB               	goto	l630
  4696  06E1  0AC8               	incf	dtoa@n+4,f
  4697  06E2  1D03               	skipz
  4698  06E3  2EEB               	goto	l630
  4699  06E4  0AC9               	incf	dtoa@n+5,f
  4700  06E5  1D03               	skipz
  4701  06E6  2EEB               	goto	l630
  4702  06E7  0ACA               	incf	dtoa@n+6,f
  4703  06E8  1D03               	skipz
  4704  06E9  2EEB               	goto	l630
  4705  06EA  0ACB               	incf	dtoa@n+7,f
  4706  06EB                     l630:	
  4707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  4708                           
  4709                           
  4710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4711  06EB  0021               	movlb	1	; select bank1
  4712  06EC  1BA5               	btfsc	(_prec+1)^(0+128),7
  4713  06ED  2EF2               	goto	l631
  4714                           
  4715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4716  06EE  30FD               	movlw	253
  4717  06EF  05A6               	andwf	_flags^(0+128),f
  4718  06F0  30FF               	movlw	255
  4719  06F1  05A7               	andwf	(_flags+1)^(0+128),f
  4720  06F2                     l631:	
  4721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  4722                           
  4723                           
  4724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4725  06F2  0825               	movf	(_prec+1)^(0+128),w
  4726  06F3  3A80               	xorlw	128
  4727  06F4  0020               	movlb	0	; select bank0
  4728  06F5  00B8               	movwf	??_dtoa
  4729  06F6  3080               	movlw	128
  4730  06F7  0238               	subwf	??_dtoa,w
  4731  06F8  1D03               	skipz
  4732  06F9  2EFD               	goto	u1095
  4733  06FA  3001               	movlw	1
  4734  06FB  0021               	movlb	1	; select bank1
  4735  06FC  0224               	subwf	_prec^(0+128),w
  4736  06FD                     u1095:	
  4737  06FD  1803               	skipnc
  4738  06FE  2F05               	goto	l1825
  4739  06FF  3001               	movlw	1
  4740  0700  0020               	movlb	0	; select bank0
  4741  0701  00BD               	movwf	dtoa@p
  4742  0702  3000               	movlw	0
  4743  0703  00BE               	movwf	dtoa@p+1
  4744  0704  2F0D               	goto	l635
  4745  0705                     l1825:	
  4746  0705  0021               	movlb	1	; select bank1
  4747  0706  0825               	movf	(_prec+1)^(0+128),w
  4748  0707  0020               	movlb	0	; select bank0
  4749  0708  00BE               	movwf	dtoa@p+1
  4750  0709  0021               	movlb	1	; select bank1
  4751  070A  0824               	movf	_prec^(0+128),w
  4752  070B  0020               	movlb	0	; select bank0
  4753  070C  00BD               	movwf	dtoa@p
  4754  070D                     l635:	
  4755                           
  4756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4757  070D  0021               	movlb	1	; select bank1
  4758  070E  0823               	movf	(_width+1)^(0+128),w
  4759  070F  0020               	movlb	0	; select bank0
  4760  0710  00C1               	movwf	dtoa@w+1
  4761  0711  0021               	movlb	1	; select bank1
  4762  0712  0822               	movf	_width^(0+128),w
  4763  0713  0020               	movlb	0	; select bank0
  4764  0714  00C0               	movwf	dtoa@w
  4765                           
  4766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4767  0715  0842               	movf	dtoa@s,w
  4768  0716  0443               	iorwf	dtoa@s+1,w
  4769  0717  1D03               	btfss	3,2
  4770  0718  2F1C               	goto	l1831
  4771  0719  0021               	movlb	1	; select bank1
  4772  071A  1D26               	btfss	_flags^(0+128),2
  4773  071B  2F21               	goto	l636
  4774  071C                     l1831:	
  4775                           
  4776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4777  071C  30FF               	movlw	255
  4778  071D  0020               	movlb	0	; select bank0
  4779  071E  07C0               	addwf	dtoa@w,f
  4780  071F  30FF               	movlw	255
  4781  0720  3DC1               	addwfc	dtoa@w+1,f
  4782  0721                     l636:	
  4783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  4784                           
  4785                           
  4786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4787  0721  301F               	movlw	31
  4788  0722  0020               	movlb	0	; select bank0
  4789  0723  00CC               	movwf	dtoa@i
  4790  0724  3000               	movlw	0
  4791  0725  00CD               	movwf	dtoa@i+1
  4792                           
  4793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4794  0726  0021               	movlb	1	; select bank1
  4795  0727  01C7               	clrf	(_dbuf^(0+128)+31)
  4796                           
  4797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4798  0728  2FB6               	goto	l639
  4799  0729                     l1845:	
  4800  0729  0020               	movlb	0	; select bank0
  4801  072A  0844               	movf	dtoa@n,w
  4802  072B  0445               	iorwf	dtoa@n+1,w
  4803  072C  0446               	iorwf	dtoa@n+2,w
  4804  072D  0447               	iorwf	dtoa@n+3,w
  4805  072E  0448               	iorwf	dtoa@n+4,w
  4806  072F  0449               	iorwf	dtoa@n+5,w
  4807  0730  044A               	iorwf	dtoa@n+6,w
  4808  0731  044B               	iorwf	dtoa@n+7,w
  4809  0732  1D03               	skipz
  4810  0733  2F4E               	goto	l1835
  4811  0734  083E               	movf	dtoa@p+1,w
  4812  0735  3A80               	xorlw	128
  4813  0736  00B8               	movwf	??_dtoa
  4814  0737  3080               	movlw	128
  4815  0738  0238               	subwf	??_dtoa,w
  4816  0739  1D03               	skipz
  4817  073A  2F3D               	goto	u1145
  4818  073B  3001               	movlw	1
  4819  073C  023D               	subwf	dtoa@p,w
  4820  073D                     u1145:	
  4821  073D  1803               	skipnc
  4822  073E  2F4E               	goto	l1835
  4823  073F  0020               	movlb	0	; select bank0
  4824  0740  0841               	movf	dtoa@w+1,w
  4825  0741  3A80               	xorlw	128
  4826  0742  00B8               	movwf	??_dtoa
  4827  0743  3080               	movlw	128
  4828  0744  0238               	subwf	??_dtoa,w
  4829  0745  1D03               	skipz
  4830  0746  2F49               	goto	u1155
  4831  0747  3001               	movlw	1
  4832  0748  0240               	subwf	dtoa@w,w
  4833  0749                     u1155:	
  4834  0749  1C03               	skipc
  4835  074A  2FC2               	goto	l1853
  4836  074B  0021               	movlb	1	; select bank1
  4837  074C  1CA6               	btfss	_flags^(0+128),1
  4838  074D  2FC2               	goto	l1853
  4839  074E                     l1835:	
  4840                           
  4841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4842  074E  30FF               	movlw	255
  4843  074F  0020               	movlb	0	; select bank0
  4844  0750  07CC               	addwf	dtoa@i,f
  4845  0751  30FF               	movlw	255
  4846  0752  3DCD               	addwfc	dtoa@i+1,f
  4847                           
  4848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4849  0753  300A               	movlw	10
  4850  0754  00A0               	movwf	___aomod@divisor
  4851  0755  01A1               	clrf	___aomod@divisor+1
  4852  0756  01A2               	clrf	___aomod@divisor+2
  4853  0757  01A3               	clrf	___aomod@divisor+3
  4854  0758  01A4               	clrf	___aomod@divisor+4
  4855  0759  01A5               	clrf	___aomod@divisor+5
  4856  075A  01A6               	clrf	___aomod@divisor+6
  4857  075B  01A7               	clrf	___aomod@divisor+7
  4858  075C  0844               	movf	dtoa@n,w
  4859  075D  00A8               	movwf	___aomod@dividend
  4860  075E  0845               	movf	dtoa@n+1,w
  4861  075F  00A9               	movwf	___aomod@dividend+1
  4862  0760  0846               	movf	dtoa@n+2,w
  4863  0761  00AA               	movwf	___aomod@dividend+2
  4864  0762  0847               	movf	dtoa@n+3,w
  4865  0763  00AB               	movwf	___aomod@dividend+3
  4866  0764  0848               	movf	dtoa@n+4,w
  4867  0765  00AC               	movwf	___aomod@dividend+4
  4868  0766  0849               	movf	dtoa@n+5,w
  4869  0767  00AD               	movwf	___aomod@dividend+5
  4870  0768  084A               	movf	dtoa@n+6,w
  4871  0769  00AE               	movwf	___aomod@dividend+6
  4872  076A  084B               	movf	dtoa@n+7,w
  4873  076B  00AF               	movwf	___aomod@dividend+7
  4874  076C  3184  24D6  3186   	fcall	___aomod
  4875  076F  0020               	movlb	0	; select bank0
  4876  0770  0821               	movf	?___aomod+1,w
  4877  0771  00F4               	movwf	abs@a+1
  4878  0772  0820               	movf	?___aomod,w
  4879  0773  00F3               	movwf	abs@a
  4880  0774  3182  2214  3186   	fcall	_abs
  4881  0777  0873               	movf	?_abs,w
  4882  0778  3E30               	addlw	48
  4883  0779  0020               	movlb	0	; select bank0
  4884  077A  00B8               	movwf	??_dtoa
  4885  077B  084C               	movf	dtoa@i,w
  4886  077C  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  4887  077D  0086               	movwf	6
  4888  077E  0187               	clrf	7
  4889  077F  0838               	movf	??_dtoa,w
  4890  0780  0081               	movwf	1
  4891                           
  4892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4893  0781  30FF               	movlw	255
  4894  0782  07BD               	addwf	dtoa@p,f
  4895  0783  30FF               	movlw	255
  4896  0784  3DBE               	addwfc	dtoa@p+1,f
  4897                           
  4898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4899  0785  30FF               	movlw	255
  4900  0786  07C0               	addwf	dtoa@w,f
  4901  0787  30FF               	movlw	255
  4902  0788  3DC1               	addwfc	dtoa@w+1,f
  4903                           
  4904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4905  0789  300A               	movlw	10
  4906  078A  00A0               	movwf	___aodiv@divisor
  4907  078B  01A1               	clrf	___aodiv@divisor+1
  4908  078C  01A2               	clrf	___aodiv@divisor+2
  4909  078D  01A3               	clrf	___aodiv@divisor+3
  4910  078E  01A4               	clrf	___aodiv@divisor+4
  4911  078F  01A5               	clrf	___aodiv@divisor+5
  4912  0790  01A6               	clrf	___aodiv@divisor+6
  4913  0791  01A7               	clrf	___aodiv@divisor+7
  4914  0792  0844               	movf	dtoa@n,w
  4915  0793  00A8               	movwf	___aodiv@dividend
  4916  0794  0845               	movf	dtoa@n+1,w
  4917  0795  00A9               	movwf	___aodiv@dividend+1
  4918  0796  0846               	movf	dtoa@n+2,w
  4919  0797  00AA               	movwf	___aodiv@dividend+2
  4920  0798  0847               	movf	dtoa@n+3,w
  4921  0799  00AB               	movwf	___aodiv@dividend+3
  4922  079A  0848               	movf	dtoa@n+4,w
  4923  079B  00AC               	movwf	___aodiv@dividend+4
  4924  079C  0849               	movf	dtoa@n+5,w
  4925  079D  00AD               	movwf	___aodiv@dividend+5
  4926  079E  084A               	movf	dtoa@n+6,w
  4927  079F  00AE               	movwf	___aodiv@dividend+6
  4928  07A0  084B               	movf	dtoa@n+7,w
  4929  07A1  00AF               	movwf	___aodiv@dividend+7
  4930  07A2  3185  25B2  3186   	fcall	___aodiv
  4931  07A5  0020               	movlb	0	; select bank0
  4932  07A6  0820               	movf	?___aodiv,w
  4933  07A7  00C4               	movwf	dtoa@n
  4934  07A8  0821               	movf	?___aodiv+1,w
  4935  07A9  00C5               	movwf	dtoa@n+1
  4936  07AA  0822               	movf	?___aodiv+2,w
  4937  07AB  00C6               	movwf	dtoa@n+2
  4938  07AC  0823               	movf	?___aodiv+3,w
  4939  07AD  00C7               	movwf	dtoa@n+3
  4940  07AE  0824               	movf	?___aodiv+4,w
  4941  07AF  00C8               	movwf	dtoa@n+4
  4942  07B0  0825               	movf	?___aodiv+5,w
  4943  07B1  00C9               	movwf	dtoa@n+5
  4944  07B2  0826               	movf	?___aodiv+6,w
  4945  07B3  00CA               	movwf	dtoa@n+6
  4946  07B4  0827               	movf	?___aodiv+7,w
  4947  07B5  00CB               	movwf	dtoa@n+7
  4948  07B6                     l639:	
  4949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  4950                           
  4951                           
  4952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4953  07B6  0020               	movlb	0	; select bank0
  4954  07B7  084D               	movf	dtoa@i+1,w
  4955  07B8  3A80               	xorlw	128
  4956  07B9  00B8               	movwf	??_dtoa
  4957  07BA  3080               	movlw	128
  4958  07BB  0238               	subwf	??_dtoa,w
  4959  07BC  1D03               	skipz
  4960  07BD  2FC0               	goto	u1125
  4961  07BE  3001               	movlw	1
  4962  07BF  024C               	subwf	dtoa@i,w
  4963  07C0                     u1125:	
  4964  07C0  1803               	btfsc	3,0
  4965  07C1  2F29               	goto	l1845
  4966  07C2                     l1853:	
  4967                           
  4968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4969  07C2  0020               	movlb	0	; select bank0
  4970  07C3  0842               	movf	dtoa@s,w
  4971  07C4  0443               	iorwf	dtoa@s+1,w
  4972  07C5  1D03               	btfss	3,2
  4973  07C6  2FCA               	goto	l1857
  4974  07C7  0021               	movlb	1	; select bank1
  4975  07C8  1D26               	btfss	_flags^(0+128),2
  4976  07C9  2FE1               	goto	l1867
  4977  07CA                     l1857:	
  4978                           
  4979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4980  07CA  30FF               	movlw	255
  4981  07CB  0020               	movlb	0	; select bank0
  4982  07CC  07CC               	addwf	dtoa@i,f
  4983  07CD  30FF               	movlw	255
  4984  07CE  3DCD               	addwfc	dtoa@i+1,f
  4985                           
  4986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4987  07CF  0842               	movf	dtoa@s,w
  4988  07D0  0443               	iorwf	dtoa@s+1,w
  4989  07D1  1D03               	btfss	3,2
  4990  07D2  2FD5               	goto	l1863
  4991  07D3  302B               	movlw	43
  4992  07D4  2FD6               	goto	L1
  4993  07D5                     l1863:	
  4994  07D5  302D               	movlw	45
  4995  07D6                     L1:	
  4996  07D6  00BB               	movwf	_dtoa$777
  4997  07D7  3000               	movlw	0
  4998  07D8  00BC               	movwf	_dtoa$777+1
  4999  07D9  083B               	movf	_dtoa$777,w
  5000  07DA  00B8               	movwf	??_dtoa
  5001  07DB  084C               	movf	dtoa@i,w
  5002  07DC  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  5003  07DD  0086               	movwf	6
  5004  07DE  0187               	clrf	7
  5005  07DF  0838               	movf	??_dtoa,w
  5006  07E0  0081               	movwf	1
  5007  07E1                     l1867:	
  5008                           
  5009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5010  07E1  0020               	movlb	0	; select bank0
  5011  07E2  084C               	movf	dtoa@i,w
  5012  07E3  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  5013  07E4  00B8               	movwf	??_dtoa
  5014  07E5  0838               	movf	??_dtoa,w
  5015  07E6  00A4               	movwf	pad@buf
  5016  07E7  0841               	movf	dtoa@w+1,w
  5017  07E8  00A6               	movwf	pad@p+1
  5018  07E9  0840               	movf	dtoa@w,w
  5019  07EA  00A5               	movwf	pad@p
  5020  07EB  083F               	movf	dtoa@fp,w
  5021  07EC  3183  2346         	fcall	_pad
  5022  07EE  0020               	movlb	0	; select bank0
  5023  07EF  0825               	movf	?_pad+1,w
  5024  07F0  00B1               	movwf	?_dtoa+1
  5025  07F1  0824               	movf	?_pad,w
  5026  07F2  00B0               	movwf	?_dtoa
  5027  07F3  0008               	return
  5028  07F4                     __end_of_dtoa:	
  5029                           
  5030                           	psect	text5
  5031  0346                     __ptext5:	
  5032 ;; *************** function _pad *****************
  5033 ;; Defined at:
  5034 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  fp              1    wreg     PTR struct _IO_FILE
  5037 ;;		 -> NULL(0), 
  5038 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5039 ;;		 -> dbuf(32), 
  5040 ;;  p               2    5[BANK0 ] int 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  5043 ;;		 -> NULL(0), 
  5044 ;;  w               2   10[BANK0 ] int 
  5045 ;;  i               2    8[BANK0 ] int 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  2    4[BANK0 ] int 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5055 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5059 ;;Total ram usage:        9 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    4
  5062 ;; This function calls:
  5063 ;;		_fputc
  5064 ;;		_fputs
  5065 ;;		_strlen
  5066 ;; This function is called by:
  5067 ;;		_dtoa
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           
  5072                           ;psect for function _pad
  5073  0346                     _pad:	
  5074                           
  5075                           ;incstack = 0
  5076                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5077                           ;pad@fp stored from wreg
  5078  0346  0020               	movlb	0	; select bank0
  5079  0347  00AC               	movwf	pad@fp
  5080                           
  5081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5082  0348  0021               	movlb	1	; select bank1
  5083  0349  1C26               	btfss	_flags^(0+128),0
  5084  034A  2B54               	goto	l1725
  5085                           
  5086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5087  034B  0020               	movlb	0	; select bank0
  5088  034C  082C               	movf	pad@fp,w
  5089  034D  00A7               	movwf	??_pad
  5090  034E  0827               	movf	??_pad,w
  5091  034F  00FA               	movwf	fputs@fp
  5092  0350  0824               	movf	pad@buf,w
  5093  0351  3182  227D  3183   	fcall	_fputs
  5094  0354                     l1725:	
  5095                           
  5096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5097  0354  0020               	movlb	0	; select bank0
  5098  0355  1BA6               	btfsc	pad@p+1,7
  5099  0356  2B5C               	goto	l1729
  5100  0357  0826               	movf	pad@p+1,w
  5101  0358  00AB               	movwf	pad@w+1
  5102  0359  0825               	movf	pad@p,w
  5103  035A  00AA               	movwf	pad@w
  5104  035B  2B5E               	goto	l622
  5105  035C                     l1729:	
  5106  035C  01AA               	clrf	pad@w
  5107  035D  01AB               	clrf	pad@w+1
  5108  035E                     l622:	
  5109                           
  5110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5111  035E  01A8               	clrf	pad@i
  5112  035F  01A9               	clrf	pad@i+1
  5113  0360                     l1735:	
  5114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5115                           
  5116                           
  5117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5118  0360  0829               	movf	pad@i+1,w
  5119  0361  3A80               	xorlw	128
  5120  0362  00A7               	movwf	??_pad
  5121  0363  082B               	movf	pad@w+1,w
  5122  0364  3A80               	xorlw	128
  5123  0365  0227               	subwf	??_pad,w
  5124  0366  1D03               	skipz
  5125  0367  2B6A               	goto	u805
  5126  0368  082A               	movf	pad@w,w
  5127  0369  0228               	subwf	pad@i,w
  5128  036A                     u805:	
  5129  036A  1803               	btfsc	3,0
  5130  036B  2B7E               	goto	l625
  5131                           
  5132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5133  036C  3020               	movlw	32
  5134  036D  00F2               	movwf	fputc@c
  5135  036E  3000               	movlw	0
  5136  036F  00F3               	movwf	fputc@c+1
  5137  0370  0020               	movlb	0	; select bank0
  5138  0371  082C               	movf	pad@fp,w
  5139  0372  00A7               	movwf	??_pad
  5140  0373  0827               	movf	??_pad,w
  5141  0374  00F4               	movwf	fputc@fp
  5142  0375  3182  22D1  3183   	fcall	_fputc
  5143                           
  5144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5145  0378  3001               	movlw	1
  5146  0379  0020               	movlb	0	; select bank0
  5147  037A  07A8               	addwf	pad@i,f
  5148  037B  3000               	movlw	0
  5149  037C  3DA9               	addwfc	pad@i+1,f
  5150  037D  2B60               	goto	l1735
  5151  037E                     l625:	
  5152                           
  5153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5154  037E  0021               	movlb	1	; select bank1
  5155  037F  1826               	btfsc	_flags^(0+128),0
  5156  0380  2B8A               	goto	l626
  5157                           
  5158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5159  0381  0020               	movlb	0	; select bank0
  5160  0382  082C               	movf	pad@fp,w
  5161  0383  00A7               	movwf	??_pad
  5162  0384  0827               	movf	??_pad,w
  5163  0385  00FA               	movwf	fputs@fp
  5164  0386  0824               	movf	pad@buf,w
  5165  0387  3182  227D  3183   	fcall	_fputs
  5166  038A                     l626:	
  5167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 92:     }
  5168                           
  5169                           
  5170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5171  038A  0020               	movlb	0	; select bank0
  5172  038B  0824               	movf	pad@buf,w
  5173  038C  3182  222B         	fcall	_strlen
  5174  038E  0020               	movlb	0	; select bank0
  5175  038F  082A               	movf	pad@w,w
  5176  0390  0770               	addwf	?_strlen,w
  5177  0391  00A4               	movwf	?_pad
  5178  0392  082B               	movf	pad@w+1,w
  5179  0393  3D71               	addwfc	?_strlen+1,w
  5180  0394  00A5               	movwf	?_pad+1
  5181  0395  0008               	return
  5182  0396                     __end_of_pad:	
  5183                           
  5184                           	psect	text6
  5185  022B                     __ptext6:	
  5186 ;; *************** function _strlen *****************
  5187 ;; Defined at:
  5188 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  s               1    wreg     PTR const unsigned char 
  5191 ;;		 -> dbuf(32), 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  s               1    4[COMMON] PTR const unsigned char 
  5194 ;;		 -> dbuf(32), 
  5195 ;;  a               1    3[COMMON] PTR const unsigned char 
  5196 ;;		 -> dbuf(32), 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  2    0[COMMON] unsigned int 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5209 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5210 ;;Total ram usage:        5 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_pad
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           
  5220                           ;psect for function _strlen
  5221  022B                     _strlen:	
  5222                           
  5223                           ;incstack = 0
  5224                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5225                           ;strlen@s stored from wreg
  5226  022B  00F4               	movwf	strlen@s
  5227  022C  0874               	movf	strlen@s,w
  5228  022D  00F2               	movwf	??_strlen
  5229  022E  0872               	movf	??_strlen,w
  5230  022F  00F3               	movwf	strlen@a
  5231  0230                     l1715:	
  5232  0230  0874               	movf	strlen@s,w
  5233  0231  0086               	movwf	6
  5234  0232  0187               	clrf	7
  5235  0233  0801               	movf	1,w
  5236  0234  1903               	btfsc	3,2
  5237  0235  2A3B               	goto	l1717
  5238  0236  3001               	movlw	1
  5239  0237  00F2               	movwf	??_strlen
  5240  0238  0872               	movf	??_strlen,w
  5241  0239  07F4               	addwf	strlen@s,f
  5242  023A  2A30               	goto	l1715
  5243  023B                     l1717:	
  5244  023B  0873               	movf	strlen@a,w
  5245  023C  0274               	subwf	strlen@s,w
  5246  023D  00F0               	movwf	?_strlen
  5247  023E  01F1               	clrf	?_strlen+1
  5248  023F  1BF0               	btfsc	?_strlen,7
  5249  0240  03F1               	decf	?_strlen+1,f
  5250  0241  0008               	return
  5251  0242                     __end_of_strlen:	
  5252                           
  5253                           	psect	text7
  5254  027D                     __ptext7:	
  5255 ;; *************** function _fputs *****************
  5256 ;; Defined at:
  5257 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  s               1    wreg     PTR const unsigned char 
  5260 ;;		 -> dbuf(32), 
  5261 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  5262 ;;		 -> NULL(0), 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  5265 ;;		 -> dbuf(32), 
  5266 ;;  i               2    1[BANK0 ] int 
  5267 ;;  c               1    0[BANK0 ] unsigned char 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  2   10[COMMON] int 
  5270 ;; Registers used:
  5271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5277 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5278 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5279 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5281 ;;Total ram usage:        8 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; Hardware stack levels required when called:    3
  5284 ;; This function calls:
  5285 ;;		_fputc
  5286 ;; This function is called by:
  5287 ;;		_pad
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           
  5292                           ;psect for function _fputs
  5293  027D                     _fputs:	
  5294                           
  5295                           ;incstack = 0
  5296                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5297                           ;fputs@s stored from wreg
  5298  027D  0020               	movlb	0	; select bank0
  5299  027E  00A3               	movwf	fputs@s
  5300  027F  01A1               	clrf	fputs@i
  5301  0280  01A2               	clrf	fputs@i+1
  5302  0281                     l1709:	
  5303  0281  0821               	movf	fputs@i,w
  5304  0282  0723               	addwf	fputs@s,w
  5305  0283  00FB               	movwf	??_fputs
  5306  0284  087B               	movf	??_fputs,w
  5307  0285  0086               	movwf	6
  5308  0286  0187               	clrf	7
  5309  0287  0801               	movf	1,w
  5310  0288  00FC               	movwf	??_fputs+1
  5311  0289  087C               	movf	??_fputs+1,w
  5312  028A  00A0               	movwf	fputs@c
  5313  028B  0820               	movf	fputs@c,w
  5314  028C  1903               	btfsc	3,2
  5315  028D  0008               	return
  5316  028E  0820               	movf	fputs@c,w
  5317  028F  00FB               	movwf	??_fputs
  5318  0290  01FC               	clrf	??_fputs+1
  5319  0291  087B               	movf	??_fputs,w
  5320  0292  00F2               	movwf	fputc@c
  5321  0293  087C               	movf	??_fputs+1,w
  5322  0294  00F3               	movwf	fputc@c+1
  5323  0295  087A               	movf	fputs@fp,w
  5324  0296  00FD               	movwf	??_fputs+2
  5325  0297  087D               	movf	??_fputs+2,w
  5326  0298  00F4               	movwf	fputc@fp
  5327  0299  3182  22D1  3182   	fcall	_fputc
  5328  029C  3001               	movlw	1
  5329  029D  0020               	movlb	0	; select bank0
  5330  029E  07A1               	addwf	fputs@i,f
  5331  029F  3000               	movlw	0
  5332  02A0  3DA2               	addwfc	fputs@i+1,f
  5333  02A1  2A81               	goto	l1709
  5334  02A2                     __end_of_fputs:	
  5335                           
  5336                           	psect	text8
  5337  02D1                     __ptext8:	
  5338 ;; *************** function _fputc *****************
  5339 ;; Defined at:
  5340 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  c               2    2[COMMON] int 
  5343 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  5344 ;;		 -> NULL(0), 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  2    2[COMMON] int 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5356 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5358 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5359 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5360 ;;Total ram usage:        8 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    2
  5363 ;; This function calls:
  5364 ;;		_putch
  5365 ;; This function is called by:
  5366 ;;		_pad
  5367 ;;		_vfpfcnvrt
  5368 ;;		_fputs
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           
  5373                           ;psect for function _fputc
  5374  02D1                     _fputc:	
  5375                           
  5376                           ;incstack = 0
  5377                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5378  02D1  0874               	movf	fputc@fp,w
  5379  02D2  1D03               	btfss	3,2
  5380  02D3  0874               	movf	fputc@fp,w
  5381  02D4  1D03               	btfss	3,2
  5382  02D5  2ADA               	goto	l1695
  5383  02D6  0872               	movf	fputc@c,w
  5384  02D7  3181  21A3         	fcall	_putch
  5385  02D9  0008               	return
  5386  02DA                     l1695:	
  5387  02DA  0874               	movf	fputc@fp,w
  5388  02DB  3E03               	addlw	3
  5389  02DC  0086               	movwf	6
  5390  02DD  0187               	clrf	7
  5391  02DE  0016               	moviw fsr1++
  5392  02DF  0401               	iorwf	1,w
  5393  02E0  1903               	btfsc	3,2
  5394  02E1  2AFD               	goto	l1699
  5395  02E2  0874               	movf	fputc@fp,w
  5396  02E3  3E03               	addlw	3
  5397  02E4  0086               	movwf	6
  5398  02E5  0187               	clrf	7
  5399  02E6  3F40               	moviw [0]fsr1
  5400  02E7  00F5               	movwf	??_fputc
  5401  02E8  3F41               	moviw [1]fsr1
  5402  02E9  00F6               	movwf	??_fputc+1
  5403  02EA  0A74               	incf	fputc@fp,w
  5404  02EB  0086               	movwf	6
  5405  02EC  0187               	clrf	7
  5406  02ED  3F40               	moviw [0]fsr1
  5407  02EE  00F7               	movwf	??_fputc+2
  5408  02EF  3F41               	moviw [1]fsr1
  5409  02F0  00F8               	movwf	??_fputc+3
  5410  02F1  0878               	movf	??_fputc+3,w
  5411  02F2  3A80               	xorlw	128
  5412  02F3  00F9               	movwf	??_fputc+4
  5413  02F4  0876               	movf	??_fputc+1,w
  5414  02F5  3A80               	xorlw	128
  5415  02F6  0279               	subwf	??_fputc+4,w
  5416  02F7  1D03               	skipz
  5417  02F8  2AFB               	goto	u755
  5418  02F9  0875               	movf	??_fputc,w
  5419  02FA  0277               	subwf	??_fputc+2,w
  5420  02FB                     u755:	
  5421  02FB  1803               	skipnc
  5422  02FC  0008               	return
  5423  02FD                     l1699:	
  5424  02FD  0A74               	incf	fputc@fp,w
  5425  02FE  0086               	movwf	6
  5426  02FF  0187               	clrf	7
  5427  0300  3001               	movlw	1
  5428  0301  0781               	addwf	1,f
  5429  0302  3141               	addfsr 1,1
  5430  0303  1803               	skipnc
  5431  0304  0A81               	incf	1,f
  5432  0305  0008               	return
  5433  0306                     __end_of_fputc:	
  5434                           
  5435                           	psect	text9
  5436  01A3                     __ptext9:	
  5437 ;; *************** function _putch *****************
  5438 ;; Defined at:
  5439 ;;		line 146 in file "mcc_generated_files/eusart.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  txData          1    wreg     unsigned char 
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;  txData          1    1[COMMON] unsigned char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      void 
  5446 ;; Registers used:
  5447 ;;		wreg, status,2, status,0, pclath, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5457 ;;Total ram usage:        1 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    1
  5460 ;; This function calls:
  5461 ;;		_EUSART_Write
  5462 ;; This function is called by:
  5463 ;;		_fputc
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           
  5468                           ;psect for function _putch
  5469  01A3                     _putch:	
  5470                           
  5471                           ;incstack = 0
  5472                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5473                           ;putch@txData stored from wreg
  5474  01A3  00F1               	movwf	putch@txData
  5475                           
  5476                           ;mcc_generated_files/eusart.c: 146: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 147: {;mcc_generated_files/eusart.c: 148:     EUSART_Write(txData);
  5477  01A4  0871               	movf	putch@txData,w
  5478  01A5  3181  21D0         	fcall	_EUSART_Write
  5479  01A7  0008               	return
  5480  01A8                     __end_of_putch:	
  5481                           
  5482                           	psect	text10
  5483  01D0                     __ptext10:	
  5484 ;; *************** function _EUSART_Write *****************
  5485 ;; Defined at:
  5486 ;;		line 132 in file "mcc_generated_files/eusart.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  txData          1    wreg     unsigned char 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  txData          1    0[COMMON] unsigned char 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  1    wreg      void 
  5493 ;; Registers used:
  5494 ;;		wreg
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5504 ;;Total ram usage:        1 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; This function calls:
  5507 ;;		Nothing
  5508 ;; This function is called by:
  5509 ;;		_putch
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           
  5514                           ;psect for function _EUSART_Write
  5515  01D0                     _EUSART_Write:	
  5516                           
  5517                           ;incstack = 0
  5518                           ; Regs used in _EUSART_Write: [wreg]
  5519                           ;EUSART_Write@txData stored from wreg
  5520  01D0  00F0               	movwf	EUSART_Write@txData
  5521  01D1                     l67:	
  5522                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  5523                           
  5524                           
  5525                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR3bits.TXIF)
  5526  01D1  002E               	movlb	14	; select bank14
  5527  01D2  1E0F               	btfss	15,4	;volatile
  5528  01D3  29D1               	goto	l67
  5529                           
  5530                           ;mcc_generated_files/eusart.c: 138:     TX1REG = txData;
  5531  01D4  0870               	movf	EUSART_Write@txData,w
  5532  01D5  0022               	movlb	2	; select bank2
  5533  01D6  009A               	movwf	26	;volatile
  5534  01D7  0008               	return
  5535  01D8                     __end_of_EUSART_Write:	
  5536                           
  5537                           	psect	text11
  5538  0214                     __ptext11:	
  5539 ;; *************** function _abs *****************
  5540 ;; Defined at:
  5541 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  a               2    3[COMMON] int 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;		None
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  2    3[COMMON] int 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;Total ram usage:        4 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_dtoa
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           
  5569                           ;psect for function _abs
  5570  0214                     _abs:	
  5571                           
  5572                           ;incstack = 0
  5573                           ; Regs used in _abs: [wreg+status,2+status,0]
  5574  0214  0874               	movf	abs@a+1,w
  5575  0215  3A80               	xorlw	128
  5576  0216  00F5               	movwf	??_abs
  5577  0217  3080               	movlw	128
  5578  0218  0275               	subwf	??_abs,w
  5579  0219  1D03               	skipz
  5580  021A  2A1D               	goto	u825
  5581  021B  3001               	movlw	1
  5582  021C  0273               	subwf	abs@a,w
  5583  021D                     u825:	
  5584  021D  1803               	skipnc
  5585  021E  0008               	return
  5586  021F  0973               	comf	abs@a,w
  5587  0220  00F5               	movwf	??_abs
  5588  0221  0974               	comf	abs@a+1,w
  5589  0222  00F6               	movwf	??_abs+1
  5590  0223  0AF5               	incf	??_abs,f
  5591  0224  1903               	skipnz
  5592  0225  0AF6               	incf	??_abs+1,f
  5593  0226  0875               	movf	??_abs,w
  5594  0227  00F3               	movwf	?_abs
  5595  0228  0876               	movf	??_abs+1,w
  5596  0229  00F4               	movwf	?_abs+1
  5597  022A  0008               	return
  5598  022B                     __end_of_abs:	
  5599                           
  5600                           	psect	text12
  5601  04D6                     __ptext12:	
  5602 ;; *************** function ___aomod *****************
  5603 ;; Defined at:
  5604 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  divisor         8    0[BANK0 ] long long 
  5607 ;;  dividend        8    8[BANK0 ] long long 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  sign            1    2[COMMON] unsigned char 
  5610 ;;  counter         1    1[COMMON] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  8    0[BANK0 ] long long 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5620 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5624 ;;Total ram usage:       19 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_dtoa
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           
  5634                           ;psect for function ___aomod
  5635  04D6                     ___aomod:	
  5636                           
  5637                           ;incstack = 0
  5638                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5639  04D6  01F2               	clrf	___aomod@sign
  5640  04D7  3028               	movlw	low ___aomod@dividend
  5641  04D8  0086               	movwf	6
  5642  04D9  3000               	movlw	high ___aomod@dividend
  5643  04DA  0087               	movwf	7
  5644  04DB  3F47               	moviw [7]fsr1
  5645  04DC  00F0               	movwf	??___aomod
  5646  04DD  1FF0               	btfss	??___aomod,7
  5647  04DE  2D00               	goto	l1789
  5648  04DF  0020               	movlb	0	; select bank0
  5649  04E0  09A8               	comf	___aomod@dividend,f
  5650  04E1  09A9               	comf	___aomod@dividend+1,f
  5651  04E2  09AA               	comf	___aomod@dividend+2,f
  5652  04E3  09AB               	comf	___aomod@dividend+3,f
  5653  04E4  09AC               	comf	___aomod@dividend+4,f
  5654  04E5  09AD               	comf	___aomod@dividend+5,f
  5655  04E6  09AE               	comf	___aomod@dividend+6,f
  5656  04E7  09AF               	comf	___aomod@dividend+7,f
  5657  04E8  0AA8               	incf	___aomod@dividend,f
  5658  04E9  1D03               	skipz
  5659  04EA  2CFE               	goto	u95lld
  5660  04EB  0AA9               	incf	___aomod@dividend+1,f
  5661  04EC  1D03               	skipz
  5662  04ED  2CFE               	goto	u95lld
  5663  04EE  0AAA               	incf	___aomod@dividend+2,f
  5664  04EF  1D03               	skipz
  5665  04F0  2CFE               	goto	u95lld
  5666  04F1  0AAB               	incf	___aomod@dividend+3,f
  5667  04F2  1D03               	skipz
  5668  04F3  2CFE               	goto	u95lld
  5669  04F4  0AAC               	incf	___aomod@dividend+4,f
  5670  04F5  1D03               	skipz
  5671  04F6  2CFE               	goto	u95lld
  5672  04F7  0AAD               	incf	___aomod@dividend+5,f
  5673  04F8  1D03               	skipz
  5674  04F9  2CFE               	goto	u95lld
  5675  04FA  0AAE               	incf	___aomod@dividend+6,f
  5676  04FB  1D03               	skipz
  5677  04FC  2CFE               	goto	u95lld
  5678  04FD  0AAF               	incf	___aomod@dividend+7,f
  5679  04FE                     u95lld:	
  5680  04FE  01F2               	clrf	___aomod@sign
  5681  04FF  0AF2               	incf	___aomod@sign,f
  5682  0500                     l1789:	
  5683  0500  3020               	movlw	low ___aomod@divisor
  5684  0501  0086               	movwf	6
  5685  0502  3000               	movlw	high ___aomod@divisor
  5686  0503  0087               	movwf	7
  5687  0504  3F47               	moviw [7]fsr1
  5688  0505  00F0               	movwf	??___aomod
  5689  0506  1FF0               	btfss	??___aomod,7
  5690  0507  2D27               	goto	l1793
  5691  0508  0020               	movlb	0	; select bank0
  5692  0509  09A0               	comf	___aomod@divisor,f
  5693  050A  09A1               	comf	___aomod@divisor+1,f
  5694  050B  09A2               	comf	___aomod@divisor+2,f
  5695  050C  09A3               	comf	___aomod@divisor+3,f
  5696  050D  09A4               	comf	___aomod@divisor+4,f
  5697  050E  09A5               	comf	___aomod@divisor+5,f
  5698  050F  09A6               	comf	___aomod@divisor+6,f
  5699  0510  09A7               	comf	___aomod@divisor+7,f
  5700  0511  0AA0               	incf	___aomod@divisor,f
  5701  0512  1D03               	skipz
  5702  0513  2D27               	goto	l1793
  5703  0514  0AA1               	incf	___aomod@divisor+1,f
  5704  0515  1D03               	skipz
  5705  0516  2D27               	goto	l1793
  5706  0517  0AA2               	incf	___aomod@divisor+2,f
  5707  0518  1D03               	skipz
  5708  0519  2D27               	goto	l1793
  5709  051A  0AA3               	incf	___aomod@divisor+3,f
  5710  051B  1D03               	skipz
  5711  051C  2D27               	goto	l1793
  5712  051D  0AA4               	incf	___aomod@divisor+4,f
  5713  051E  1D03               	skipz
  5714  051F  2D27               	goto	l1793
  5715  0520  0AA5               	incf	___aomod@divisor+5,f
  5716  0521  1D03               	skipz
  5717  0522  2D27               	goto	l1793
  5718  0523  0AA6               	incf	___aomod@divisor+6,f
  5719  0524  1D03               	skipz
  5720  0525  2D27               	goto	l1793
  5721  0526  0AA7               	incf	___aomod@divisor+7,f
  5722  0527                     l1793:	
  5723  0527  0020               	movlb	0	; select bank0
  5724  0528  0820               	movf	___aomod@divisor,w
  5725  0529  0421               	iorwf	___aomod@divisor+1,w
  5726  052A  0422               	iorwf	___aomod@divisor+2,w
  5727  052B  0423               	iorwf	___aomod@divisor+3,w
  5728  052C  0424               	iorwf	___aomod@divisor+4,w
  5729  052D  0425               	iorwf	___aomod@divisor+5,w
  5730  052E  0426               	iorwf	___aomod@divisor+6,w
  5731  052F  0427               	iorwf	___aomod@divisor+7,w
  5732  0530  1903               	skipnz
  5733  0531  2D7F               	goto	l1809
  5734  0532  01F1               	clrf	___aomod@counter
  5735  0533  0AF1               	incf	___aomod@counter,f
  5736  0534                     l1801:	
  5737  0534  1BA7               	btfsc	___aomod@divisor+7,7
  5738  0535  2D43               	goto	l1803
  5739  0536  35A0               	lslf	___aomod@divisor,f
  5740  0537  0DA1               	rlf	___aomod@divisor+1,f
  5741  0538  0DA2               	rlf	___aomod@divisor+2,f
  5742  0539  0DA3               	rlf	___aomod@divisor+3,f
  5743  053A  0DA4               	rlf	___aomod@divisor+4,f
  5744  053B  0DA5               	rlf	___aomod@divisor+5,f
  5745  053C  0DA6               	rlf	___aomod@divisor+6,f
  5746  053D  0DA7               	rlf	___aomod@divisor+7,f
  5747  053E  3001               	movlw	1
  5748  053F  00F0               	movwf	??___aomod
  5749  0540  0870               	movf	??___aomod,w
  5750  0541  07F1               	addwf	___aomod@counter,f
  5751  0542  2D34               	goto	l1801
  5752  0543                     l1803:	
  5753  0543  0827               	movf	___aomod@divisor+7,w
  5754  0544  022F               	subwf	___aomod@dividend+7,w
  5755  0545  1D03               	skipz
  5756  0546  2D61               	goto	u1005
  5757  0547  0826               	movf	___aomod@divisor+6,w
  5758  0548  022E               	subwf	___aomod@dividend+6,w
  5759  0549  1D03               	skipz
  5760  054A  2D61               	goto	u1005
  5761  054B  0825               	movf	___aomod@divisor+5,w
  5762  054C  022D               	subwf	___aomod@dividend+5,w
  5763  054D  1D03               	skipz
  5764  054E  2D61               	goto	u1005
  5765  054F  0824               	movf	___aomod@divisor+4,w
  5766  0550  022C               	subwf	___aomod@dividend+4,w
  5767  0551  1D03               	skipz
  5768  0552  2D61               	goto	u1005
  5769  0553  0823               	movf	___aomod@divisor+3,w
  5770  0554  022B               	subwf	___aomod@dividend+3,w
  5771  0555  1D03               	skipz
  5772  0556  2D61               	goto	u1005
  5773  0557  0822               	movf	___aomod@divisor+2,w
  5774  0558  022A               	subwf	___aomod@dividend+2,w
  5775  0559  1D03               	skipz
  5776  055A  2D61               	goto	u1005
  5777  055B  0821               	movf	___aomod@divisor+1,w
  5778  055C  0229               	subwf	___aomod@dividend+1,w
  5779  055D  1D03               	skipz
  5780  055E  2D61               	goto	u1005
  5781  055F  0820               	movf	___aomod@divisor,w
  5782  0560  0228               	subwf	___aomod@dividend,w
  5783  0561                     u1005:	
  5784  0561  1C03               	skipc
  5785  0562  2D73               	goto	l1807
  5786  0563  0820               	movf	___aomod@divisor,w
  5787  0564  02A8               	subwf	___aomod@dividend,f
  5788  0565  0821               	movf	___aomod@divisor+1,w
  5789  0566  3BA9               	subwfb	___aomod@dividend+1,f
  5790  0567  0822               	movf	___aomod@divisor+2,w
  5791  0568  3BAA               	subwfb	___aomod@dividend+2,f
  5792  0569  0823               	movf	___aomod@divisor+3,w
  5793  056A  3BAB               	subwfb	___aomod@dividend+3,f
  5794  056B  0824               	movf	___aomod@divisor+4,w
  5795  056C  3BAC               	subwfb	___aomod@dividend+4,f
  5796  056D  0825               	movf	___aomod@divisor+5,w
  5797  056E  3BAD               	subwfb	___aomod@dividend+5,f
  5798  056F  0826               	movf	___aomod@divisor+6,w
  5799  0570  3BAE               	subwfb	___aomod@dividend+6,f
  5800  0571  0827               	movf	___aomod@divisor+7,w
  5801  0572  3BAF               	subwfb	___aomod@dividend+7,f
  5802  0573                     l1807:	
  5803  0573  36A7               	lsrf	___aomod@divisor+7,f
  5804  0574  0CA6               	rrf	___aomod@divisor+6,f
  5805  0575  0CA5               	rrf	___aomod@divisor+5,f
  5806  0576  0CA4               	rrf	___aomod@divisor+4,f
  5807  0577  0CA3               	rrf	___aomod@divisor+3,f
  5808  0578  0CA2               	rrf	___aomod@divisor+2,f
  5809  0579  0CA1               	rrf	___aomod@divisor+1,f
  5810  057A  0CA0               	rrf	___aomod@divisor,f
  5811  057B  3001               	movlw	1
  5812  057C  02F1               	subwf	___aomod@counter,f
  5813  057D  1D03               	btfss	3,2
  5814  057E  2D43               	goto	l1803
  5815  057F                     l1809:	
  5816  057F  0872               	movf	___aomod@sign,w
  5817  0580  1903               	btfsc	3,2
  5818  0581  2DA0               	goto	l784
  5819  0582  09A8               	comf	___aomod@dividend,f
  5820  0583  09A9               	comf	___aomod@dividend+1,f
  5821  0584  09AA               	comf	___aomod@dividend+2,f
  5822  0585  09AB               	comf	___aomod@dividend+3,f
  5823  0586  09AC               	comf	___aomod@dividend+4,f
  5824  0587  09AD               	comf	___aomod@dividend+5,f
  5825  0588  09AE               	comf	___aomod@dividend+6,f
  5826  0589  09AF               	comf	___aomod@dividend+7,f
  5827  058A  0AA8               	incf	___aomod@dividend,f
  5828  058B  1D03               	skipz
  5829  058C  2DA0               	goto	l784
  5830  058D  0AA9               	incf	___aomod@dividend+1,f
  5831  058E  1D03               	skipz
  5832  058F  2DA0               	goto	l784
  5833  0590  0AAA               	incf	___aomod@dividend+2,f
  5834  0591  1D03               	skipz
  5835  0592  2DA0               	goto	l784
  5836  0593  0AAB               	incf	___aomod@dividend+3,f
  5837  0594  1D03               	skipz
  5838  0595  2DA0               	goto	l784
  5839  0596  0AAC               	incf	___aomod@dividend+4,f
  5840  0597  1D03               	skipz
  5841  0598  2DA0               	goto	l784
  5842  0599  0AAD               	incf	___aomod@dividend+5,f
  5843  059A  1D03               	skipz
  5844  059B  2DA0               	goto	l784
  5845  059C  0AAE               	incf	___aomod@dividend+6,f
  5846  059D  1D03               	skipz
  5847  059E  2DA0               	goto	l784
  5848  059F  0AAF               	incf	___aomod@dividend+7,f
  5849  05A0                     l784:	
  5850  05A0  0020               	movlb	0	; select bank0
  5851  05A1  0828               	movf	___aomod@dividend,w
  5852  05A2  00A0               	movwf	?___aomod
  5853  05A3  0829               	movf	___aomod@dividend+1,w
  5854  05A4  00A1               	movwf	?___aomod+1
  5855  05A5  082A               	movf	___aomod@dividend+2,w
  5856  05A6  00A2               	movwf	?___aomod+2
  5857  05A7  082B               	movf	___aomod@dividend+3,w
  5858  05A8  00A3               	movwf	?___aomod+3
  5859  05A9  082C               	movf	___aomod@dividend+4,w
  5860  05AA  00A4               	movwf	?___aomod+4
  5861  05AB  082D               	movf	___aomod@dividend+5,w
  5862  05AC  00A5               	movwf	?___aomod+5
  5863  05AD  082E               	movf	___aomod@dividend+6,w
  5864  05AE  00A6               	movwf	?___aomod+6
  5865  05AF  082F               	movf	___aomod@dividend+7,w
  5866  05B0  00A7               	movwf	?___aomod+7
  5867  05B1  0008               	return
  5868  05B2                     __end_of___aomod:	
  5869                           
  5870                           	psect	text13
  5871  05B2                     __ptext13:	
  5872 ;; *************** function ___aodiv *****************
  5873 ;; Defined at:
  5874 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  divisor         8    0[BANK0 ] long long 
  5877 ;;  dividend        8    8[BANK0 ] long long 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  quotient        8    3[COMMON] long long 
  5880 ;;  sign            1    2[COMMON] unsigned char 
  5881 ;;  counter         1    1[COMMON] unsigned char 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  8    0[BANK0 ] long long 
  5884 ;; Registers used:
  5885 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5891 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5892 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5894 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;Total ram usage:       27 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; This function calls:
  5898 ;;		Nothing
  5899 ;; This function is called by:
  5900 ;;		_dtoa
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           
  5905                           ;psect for function ___aodiv
  5906  05B2                     ___aodiv:	
  5907                           
  5908                           ;incstack = 0
  5909                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  5910  05B2  01F2               	clrf	___aodiv@sign
  5911  05B3  3020               	movlw	low ___aodiv@divisor
  5912  05B4  0086               	movwf	6
  5913  05B5  3000               	movlw	high ___aodiv@divisor
  5914  05B6  0087               	movwf	7
  5915  05B7  3F47               	moviw [7]fsr1
  5916  05B8  00F0               	movwf	??___aodiv
  5917  05B9  1FF0               	btfss	??___aodiv,7
  5918  05BA  2DDC               	goto	l1751
  5919  05BB  0020               	movlb	0	; select bank0
  5920  05BC  09A0               	comf	___aodiv@divisor,f
  5921  05BD  09A1               	comf	___aodiv@divisor+1,f
  5922  05BE  09A2               	comf	___aodiv@divisor+2,f
  5923  05BF  09A3               	comf	___aodiv@divisor+3,f
  5924  05C0  09A4               	comf	___aodiv@divisor+4,f
  5925  05C1  09A5               	comf	___aodiv@divisor+5,f
  5926  05C2  09A6               	comf	___aodiv@divisor+6,f
  5927  05C3  09A7               	comf	___aodiv@divisor+7,f
  5928  05C4  0AA0               	incf	___aodiv@divisor,f
  5929  05C5  1D03               	skipz
  5930  05C6  2DDA               	goto	u84lld
  5931  05C7  0AA1               	incf	___aodiv@divisor+1,f
  5932  05C8  1D03               	skipz
  5933  05C9  2DDA               	goto	u84lld
  5934  05CA  0AA2               	incf	___aodiv@divisor+2,f
  5935  05CB  1D03               	skipz
  5936  05CC  2DDA               	goto	u84lld
  5937  05CD  0AA3               	incf	___aodiv@divisor+3,f
  5938  05CE  1D03               	skipz
  5939  05CF  2DDA               	goto	u84lld
  5940  05D0  0AA4               	incf	___aodiv@divisor+4,f
  5941  05D1  1D03               	skipz
  5942  05D2  2DDA               	goto	u84lld
  5943  05D3  0AA5               	incf	___aodiv@divisor+5,f
  5944  05D4  1D03               	skipz
  5945  05D5  2DDA               	goto	u84lld
  5946  05D6  0AA6               	incf	___aodiv@divisor+6,f
  5947  05D7  1D03               	skipz
  5948  05D8  2DDA               	goto	u84lld
  5949  05D9  0AA7               	incf	___aodiv@divisor+7,f
  5950  05DA                     u84lld:	
  5951  05DA  01F2               	clrf	___aodiv@sign
  5952  05DB  0AF2               	incf	___aodiv@sign,f
  5953  05DC                     l1751:	
  5954  05DC  3028               	movlw	low ___aodiv@dividend
  5955  05DD  0086               	movwf	6
  5956  05DE  3000               	movlw	high ___aodiv@dividend
  5957  05DF  0087               	movwf	7
  5958  05E0  3F47               	moviw [7]fsr1
  5959  05E1  00F0               	movwf	??___aodiv
  5960  05E2  1FF0               	btfss	??___aodiv,7
  5961  05E3  2E07               	goto	l1757
  5962  05E4  0020               	movlb	0	; select bank0
  5963  05E5  09A8               	comf	___aodiv@dividend,f
  5964  05E6  09A9               	comf	___aodiv@dividend+1,f
  5965  05E7  09AA               	comf	___aodiv@dividend+2,f
  5966  05E8  09AB               	comf	___aodiv@dividend+3,f
  5967  05E9  09AC               	comf	___aodiv@dividend+4,f
  5968  05EA  09AD               	comf	___aodiv@dividend+5,f
  5969  05EB  09AE               	comf	___aodiv@dividend+6,f
  5970  05EC  09AF               	comf	___aodiv@dividend+7,f
  5971  05ED  0AA8               	incf	___aodiv@dividend,f
  5972  05EE  1D03               	skipz
  5973  05EF  2E03               	goto	l1755
  5974  05F0  0AA9               	incf	___aodiv@dividend+1,f
  5975  05F1  1D03               	skipz
  5976  05F2  2E03               	goto	l1755
  5977  05F3  0AAA               	incf	___aodiv@dividend+2,f
  5978  05F4  1D03               	skipz
  5979  05F5  2E03               	goto	l1755
  5980  05F6  0AAB               	incf	___aodiv@dividend+3,f
  5981  05F7  1D03               	skipz
  5982  05F8  2E03               	goto	l1755
  5983  05F9  0AAC               	incf	___aodiv@dividend+4,f
  5984  05FA  1D03               	skipz
  5985  05FB  2E03               	goto	l1755
  5986  05FC  0AAD               	incf	___aodiv@dividend+5,f
  5987  05FD  1D03               	skipz
  5988  05FE  2E03               	goto	l1755
  5989  05FF  0AAE               	incf	___aodiv@dividend+6,f
  5990  0600  1D03               	skipz
  5991  0601  2E03               	goto	l1755
  5992  0602  0AAF               	incf	___aodiv@dividend+7,f
  5993  0603                     l1755:	
  5994  0603  3001               	movlw	1
  5995  0604  00F0               	movwf	??___aodiv
  5996  0605  0870               	movf	??___aodiv,w
  5997  0606  06F2               	xorwf	___aodiv@sign,f
  5998  0607                     l1757:	
  5999  0607  3073               	movlw	low ___aodiv@quotient
  6000  0608  0086               	movwf	6
  6001  0609  3000               	movlw	high ___aodiv@quotient
  6002  060A  0087               	movwf	7
  6003  060B  3008               	movlw	8
  6004  060C  00F0               	movwf	??___aodiv
  6005  060D  3000               	movlw	0
  6006  060E                     u870:	
  6007  060E  001E               	movwi fsr1++
  6008  060F  0BF0               	decfsz	??___aodiv,f
  6009  0610  2E0E               	goto	u870
  6010  0611  0020               	movlb	0	; select bank0
  6011  0612  0820               	movf	___aodiv@divisor,w
  6012  0613  0421               	iorwf	___aodiv@divisor+1,w
  6013  0614  0422               	iorwf	___aodiv@divisor+2,w
  6014  0615  0423               	iorwf	___aodiv@divisor+3,w
  6015  0616  0424               	iorwf	___aodiv@divisor+4,w
  6016  0617  0425               	iorwf	___aodiv@divisor+5,w
  6017  0618  0426               	iorwf	___aodiv@divisor+6,w
  6018  0619  0427               	iorwf	___aodiv@divisor+7,w
  6019  061A  1903               	skipnz
  6020  061B  2E72               	goto	l1779
  6021  061C  01F1               	clrf	___aodiv@counter
  6022  061D  0AF1               	incf	___aodiv@counter,f
  6023  061E                     l1767:	
  6024  061E  1BA7               	btfsc	___aodiv@divisor+7,7
  6025  061F  2E2D               	goto	l1769
  6026  0620  35A0               	lslf	___aodiv@divisor,f
  6027  0621  0DA1               	rlf	___aodiv@divisor+1,f
  6028  0622  0DA2               	rlf	___aodiv@divisor+2,f
  6029  0623  0DA3               	rlf	___aodiv@divisor+3,f
  6030  0624  0DA4               	rlf	___aodiv@divisor+4,f
  6031  0625  0DA5               	rlf	___aodiv@divisor+5,f
  6032  0626  0DA6               	rlf	___aodiv@divisor+6,f
  6033  0627  0DA7               	rlf	___aodiv@divisor+7,f
  6034  0628  3001               	movlw	1
  6035  0629  00F0               	movwf	??___aodiv
  6036  062A  0870               	movf	??___aodiv,w
  6037  062B  07F1               	addwf	___aodiv@counter,f
  6038  062C  2E1E               	goto	l1767
  6039  062D                     l1769:	
  6040  062D  35F3               	lslf	___aodiv@quotient,f
  6041  062E  0DF4               	rlf	___aodiv@quotient+1,f
  6042  062F  0DF5               	rlf	___aodiv@quotient+2,f
  6043  0630  0DF6               	rlf	___aodiv@quotient+3,f
  6044  0631  0DF7               	rlf	___aodiv@quotient+4,f
  6045  0632  0DF8               	rlf	___aodiv@quotient+5,f
  6046  0633  0DF9               	rlf	___aodiv@quotient+6,f
  6047  0634  0DFA               	rlf	___aodiv@quotient+7,f
  6048  0635  0827               	movf	___aodiv@divisor+7,w
  6049  0636  022F               	subwf	___aodiv@dividend+7,w
  6050  0637  1D03               	skipz
  6051  0638  2E53               	goto	u905
  6052  0639  0826               	movf	___aodiv@divisor+6,w
  6053  063A  022E               	subwf	___aodiv@dividend+6,w
  6054  063B  1D03               	skipz
  6055  063C  2E53               	goto	u905
  6056  063D  0825               	movf	___aodiv@divisor+5,w
  6057  063E  022D               	subwf	___aodiv@dividend+5,w
  6058  063F  1D03               	skipz
  6059  0640  2E53               	goto	u905
  6060  0641  0824               	movf	___aodiv@divisor+4,w
  6061  0642  022C               	subwf	___aodiv@dividend+4,w
  6062  0643  1D03               	skipz
  6063  0644  2E53               	goto	u905
  6064  0645  0823               	movf	___aodiv@divisor+3,w
  6065  0646  022B               	subwf	___aodiv@dividend+3,w
  6066  0647  1D03               	skipz
  6067  0648  2E53               	goto	u905
  6068  0649  0822               	movf	___aodiv@divisor+2,w
  6069  064A  022A               	subwf	___aodiv@dividend+2,w
  6070  064B  1D03               	skipz
  6071  064C  2E53               	goto	u905
  6072  064D  0821               	movf	___aodiv@divisor+1,w
  6073  064E  0229               	subwf	___aodiv@dividend+1,w
  6074  064F  1D03               	skipz
  6075  0650  2E53               	goto	u905
  6076  0651  0820               	movf	___aodiv@divisor,w
  6077  0652  0228               	subwf	___aodiv@dividend,w
  6078  0653                     u905:	
  6079  0653  1C03               	skipc
  6080  0654  2E66               	goto	l1777
  6081  0655  0820               	movf	___aodiv@divisor,w
  6082  0656  02A8               	subwf	___aodiv@dividend,f
  6083  0657  0821               	movf	___aodiv@divisor+1,w
  6084  0658  3BA9               	subwfb	___aodiv@dividend+1,f
  6085  0659  0822               	movf	___aodiv@divisor+2,w
  6086  065A  3BAA               	subwfb	___aodiv@dividend+2,f
  6087  065B  0823               	movf	___aodiv@divisor+3,w
  6088  065C  3BAB               	subwfb	___aodiv@dividend+3,f
  6089  065D  0824               	movf	___aodiv@divisor+4,w
  6090  065E  3BAC               	subwfb	___aodiv@dividend+4,f
  6091  065F  0825               	movf	___aodiv@divisor+5,w
  6092  0660  3BAD               	subwfb	___aodiv@dividend+5,f
  6093  0661  0826               	movf	___aodiv@divisor+6,w
  6094  0662  3BAE               	subwfb	___aodiv@dividend+6,f
  6095  0663  0827               	movf	___aodiv@divisor+7,w
  6096  0664  3BAF               	subwfb	___aodiv@dividend+7,f
  6097  0665  1473               	bsf	___aodiv@quotient,0
  6098  0666                     l1777:	
  6099  0666  36A7               	lsrf	___aodiv@divisor+7,f
  6100  0667  0CA6               	rrf	___aodiv@divisor+6,f
  6101  0668  0CA5               	rrf	___aodiv@divisor+5,f
  6102  0669  0CA4               	rrf	___aodiv@divisor+4,f
  6103  066A  0CA3               	rrf	___aodiv@divisor+3,f
  6104  066B  0CA2               	rrf	___aodiv@divisor+2,f
  6105  066C  0CA1               	rrf	___aodiv@divisor+1,f
  6106  066D  0CA0               	rrf	___aodiv@divisor,f
  6107  066E  3001               	movlw	1
  6108  066F  02F1               	subwf	___aodiv@counter,f
  6109  0670  1D03               	btfss	3,2
  6110  0671  2E2D               	goto	l1769
  6111  0672                     l1779:	
  6112  0672  0872               	movf	___aodiv@sign,w
  6113  0673  1903               	btfsc	3,2
  6114  0674  2E93               	goto	l771
  6115  0675  09F3               	comf	___aodiv@quotient,f
  6116  0676  09F4               	comf	___aodiv@quotient+1,f
  6117  0677  09F5               	comf	___aodiv@quotient+2,f
  6118  0678  09F6               	comf	___aodiv@quotient+3,f
  6119  0679  09F7               	comf	___aodiv@quotient+4,f
  6120  067A  09F8               	comf	___aodiv@quotient+5,f
  6121  067B  09F9               	comf	___aodiv@quotient+6,f
  6122  067C  09FA               	comf	___aodiv@quotient+7,f
  6123  067D  0AF3               	incf	___aodiv@quotient,f
  6124  067E  1D03               	skipz
  6125  067F  2E93               	goto	l771
  6126  0680  0AF4               	incf	___aodiv@quotient+1,f
  6127  0681  1D03               	skipz
  6128  0682  2E93               	goto	l771
  6129  0683  0AF5               	incf	___aodiv@quotient+2,f
  6130  0684  1D03               	skipz
  6131  0685  2E93               	goto	l771
  6132  0686  0AF6               	incf	___aodiv@quotient+3,f
  6133  0687  1D03               	skipz
  6134  0688  2E93               	goto	l771
  6135  0689  0AF7               	incf	___aodiv@quotient+4,f
  6136  068A  1D03               	skipz
  6137  068B  2E93               	goto	l771
  6138  068C  0AF8               	incf	___aodiv@quotient+5,f
  6139  068D  1D03               	skipz
  6140  068E  2E93               	goto	l771
  6141  068F  0AF9               	incf	___aodiv@quotient+6,f
  6142  0690  1D03               	skipz
  6143  0691  2E93               	goto	l771
  6144  0692  0AFA               	incf	___aodiv@quotient+7,f
  6145  0693                     l771:	
  6146  0693  0873               	movf	___aodiv@quotient,w
  6147  0694  0020               	movlb	0	; select bank0
  6148  0695  00A0               	movwf	?___aodiv
  6149  0696  0874               	movf	___aodiv@quotient+1,w
  6150  0697  00A1               	movwf	?___aodiv+1
  6151  0698  0875               	movf	___aodiv@quotient+2,w
  6152  0699  00A2               	movwf	?___aodiv+2
  6153  069A  0876               	movf	___aodiv@quotient+3,w
  6154  069B  00A3               	movwf	?___aodiv+3
  6155  069C  0877               	movf	___aodiv@quotient+4,w
  6156  069D  00A4               	movwf	?___aodiv+4
  6157  069E  0878               	movf	___aodiv@quotient+5,w
  6158  069F  00A5               	movwf	?___aodiv+5
  6159  06A0  0879               	movf	___aodiv@quotient+6,w
  6160  06A1  00A6               	movwf	?___aodiv+6
  6161  06A2  087A               	movf	___aodiv@quotient+7,w
  6162  06A3  00A7               	movwf	?___aodiv+7
  6163  06A4  0008               	return
  6164  06A5                     __end_of___aodiv:	
  6165                           
  6166                           	psect	text14
  6167  019B                     __ptext14:	
  6168 ;; *************** function _getch *****************
  6169 ;; Defined at:
  6170 ;;		line 141 in file "mcc_generated_files/eusart.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;		None
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      unsigned char 
  6177 ;; Registers used:
  6178 ;;		wreg, status,2, pclath, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6188 ;;Total ram usage:        0 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    1
  6191 ;; This function calls:
  6192 ;;		_EUSART_Read
  6193 ;; This function is called by:
  6194 ;;		_main
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           
  6199                           ;psect for function _getch
  6200  019B                     _getch:	
  6201                           
  6202                           ;mcc_generated_files/eusart.c: 143:     return EUSART_Read();
  6203                           
  6204                           ;incstack = 0
  6205                           ; Regs used in _getch: [wreg+status,2+pclath+cstack]
  6206  019B  3181  21D8         	fcall	_EUSART_Read
  6207  019D  0008               	return
  6208  019E                     __end_of_getch:	
  6209                           
  6210                           	psect	text15
  6211  01D8                     __ptext15:	
  6212 ;; *************** function _EUSART_Read *****************
  6213 ;; Defined at:
  6214 ;;		line 113 in file "mcc_generated_files/eusart.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;		None
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      unsigned char 
  6221 ;; Registers used:
  6222 ;;		wreg, status,2
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;Total ram usage:        0 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_getch
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           
  6242                           ;psect for function _EUSART_Read
  6243  01D8                     _EUSART_Read:	
  6244  01D8                     l60:	
  6245                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  6246                           
  6247                           ;incstack = 0
  6248                           ; Regs used in _EUSART_Read: [wreg+status,2]
  6249                           
  6250                           
  6251                           ;mcc_generated_files/eusart.c: 115:     while(!PIR3bits.RCIF)
  6252  01D8  002E               	movlb	14	; select bank14
  6253  01D9  1E8F               	btfss	15,5	;volatile
  6254  01DA  29D8               	goto	l60
  6255                           
  6256                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  6257  01DB  0020               	movlb	0	; select bank0
  6258  01DC  01EF               	clrf	_eusartRxLastError	;volatile
  6259                           
  6260                           ;mcc_generated_files/eusart.c: 121:     if(1 == RC1STAbits.OERR)
  6261  01DD  0022               	movlb	2	; select bank2
  6262  01DE  1C9D               	btfss	29,1	;volatile
  6263  01DF  29E2               	goto	l1941
  6264                           
  6265                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RC1
      +                          STAbits.CREN = 0;
  6266  01E0  121D               	bcf	29,4	;volatile
  6267                           
  6268                           ;mcc_generated_files/eusart.c: 126:         RC1STAbits.CREN = 1;
  6269  01E1  161D               	bsf	29,4	;volatile
  6270  01E2                     l1941:	
  6271                           
  6272                           ;mcc_generated_files/eusart.c: 129:     return RC1REG;
  6273  01E2  0819               	movf	25,w	;volatile
  6274  01E3  0008               	return
  6275  01E4                     __end_of_EUSART_Read:	
  6276                           
  6277                           	psect	text16
  6278  01E4                     __ptext16:	
  6279 ;; *************** function _SYSTEM_Initialize *****************
  6280 ;; Defined at:
  6281 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;		None
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;		None
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      void 
  6288 ;; Registers used:
  6289 ;;		wreg, status,2, status,0, pclath, cstack
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;Total ram usage:        0 bytes
  6300 ;; Hardware stack levels used:    1
  6301 ;; Hardware stack levels required when called:    2
  6302 ;; This function calls:
  6303 ;;		_ADCC_Initialize
  6304 ;;		_EUSART_Initialize
  6305 ;;		_OSCILLATOR_Initialize
  6306 ;;		_PIN_MANAGER_Initialize
  6307 ;;		_PMD_Initialize
  6308 ;; This function is called by:
  6309 ;;		_main
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           
  6314                           ;psect for function _SYSTEM_Initialize
  6315  01E4                     _SYSTEM_Initialize:	
  6316                           
  6317                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  6318                           
  6319                           ;incstack = 0
  6320                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6321  01E4  3181  21C8  3181   	fcall	_PMD_Initialize
  6322                           
  6323                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6324  01E7  3183  2306  3181   	fcall	_PIN_MANAGER_Initialize
  6325                           
  6326                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6327  01EA  3181  21C0  3181   	fcall	_OSCILLATOR_Initialize
  6328                           
  6329                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
  6330  01ED  3182  2242  3181   	fcall	_ADCC_Initialize
  6331                           
  6332                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  6333  01F0  3182  225C         	fcall	_EUSART_Initialize
  6334  01F2  0008               	return
  6335  01F3                     __end_of_SYSTEM_Initialize:	
  6336                           
  6337                           	psect	text17
  6338  01C8                     __ptext17:	
  6339 ;; *************** function _PMD_Initialize *****************
  6340 ;; Defined at:
  6341 ;;		line 73 in file "mcc_generated_files/mcc.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;		None
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      void 
  6348 ;; Registers used:
  6349 ;;		status,2
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6359 ;;Total ram usage:        0 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_SYSTEM_Initialize
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           
  6369                           ;psect for function _PMD_Initialize
  6370  01C8                     _PMD_Initialize:	
  6371                           
  6372                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
  6373                           
  6374                           ;incstack = 0
  6375                           ; Regs used in _PMD_Initialize: [status,2]
  6376  01C8  002F               	movlb	15	; select bank15
  6377  01C9  0196               	clrf	22	;volatile
  6378                           
  6379                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
  6380  01CA  0197               	clrf	23	;volatile
  6381                           
  6382                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
  6383  01CB  0198               	clrf	24	;volatile
  6384                           
  6385                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
  6386  01CC  0199               	clrf	25	;volatile
  6387                           
  6388                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
  6389  01CD  019A               	clrf	26	;volatile
  6390                           
  6391                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
  6392  01CE  019B               	clrf	27	;volatile
  6393  01CF  0008               	return
  6394  01D0                     __end_of_PMD_Initialize:	
  6395                           
  6396                           	psect	text18
  6397  0306                     __ptext18:	
  6398 ;; *************** function _PIN_MANAGER_Initialize *****************
  6399 ;; Defined at:
  6400 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;		None
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;		None
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  1    wreg      void 
  6407 ;; Registers used:
  6408 ;;		wreg, status,2
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;Total ram usage:        0 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_SYSTEM_Initialize
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           
  6428                           ;psect for function _PIN_MANAGER_Initialize
  6429  0306                     _PIN_MANAGER_Initialize:	
  6430                           
  6431                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  6432                           
  6433                           ;incstack = 0
  6434                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6435  0306  0020               	movlb	0	; select bank0
  6436  0307  019A               	clrf	26	;volatile
  6437                           
  6438                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  6439  0308  0199               	clrf	25	;volatile
  6440                           
  6441                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6442  0309  0196               	clrf	22	;volatile
  6443                           
  6444                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6445  030A  0197               	clrf	23	;volatile
  6446                           
  6447                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6448  030B  0198               	clrf	24	;volatile
  6449                           
  6450                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  6451  030C  3007               	movlw	7
  6452  030D  0095               	movwf	21	;volatile
  6453                           
  6454                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
  6455  030E  300F               	movlw	15
  6456  030F  0091               	movwf	17	;volatile
  6457                           
  6458                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  6459  0310  30FF               	movlw	255
  6460  0311  0092               	movwf	18	;volatile
  6461                           
  6462                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  6463  0312  30BF               	movlw	191
  6464  0313  0093               	movwf	19	;volatile
  6465                           
  6466                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  6467  0314  30FF               	movlw	255
  6468  0315  0094               	movwf	20	;volatile
  6469                           
  6470                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  6471  0316  30FF               	movlw	255
  6472  0317  003E               	movlb	30	; select bank30
  6473  0318  00D9               	movwf	89	;volatile
  6474                           
  6475                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x1F;
  6476  0319  301F               	movlw	31
  6477  031A  00CE               	movwf	78	;volatile
  6478                           
  6479                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
  6480  031B  30EF               	movlw	239
  6481  031C  00C3               	movwf	67	;volatile
  6482                           
  6483                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  6484  031D  3007               	movlw	7
  6485  031E  00E4               	movwf	100	;volatile
  6486                           
  6487                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x0F;
  6488  031F  300F               	movlw	15
  6489  0320  00B8               	movwf	56	;volatile
  6490                           
  6491                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  6492  0321  01DA               	clrf	90	;volatile
  6493                           
  6494                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  6495  0322  01E5               	clrf	101	;volatile
  6496                           
  6497                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  6498  0323  01C4               	clrf	68	;volatile
  6499                           
  6500                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  6501  0324  01B9               	clrf	57	;volatile
  6502                           
  6503                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  6504  0325  01CF               	clrf	79	;volatile
  6505                           
  6506                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  6507  0326  01E6               	clrf	102	;volatile
  6508                           
  6509                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  6510  0327  01BA               	clrf	58	;volatile
  6511                           
  6512                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  6513  0328  01C5               	clrf	69	;volatile
  6514                           
  6515                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  6516  0329  01D0               	clrf	80	;volatile
  6517                           
  6518                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  6519  032A  01DB               	clrf	91	;volatile
  6520                           
  6521                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  6522  032B  30FF               	movlw	255
  6523  032C  00BB               	movwf	59	;volatile
  6524                           
  6525                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  6526  032D  30FF               	movlw	255
  6527  032E  00C6               	movwf	70	;volatile
  6528                           
  6529                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  6530  032F  30FF               	movlw	255
  6531  0330  00D1               	movwf	81	;volatile
  6532                           
  6533                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  6534  0331  30FF               	movlw	255
  6535  0332  00DC               	movwf	92	;volatile
  6536                           
  6537                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  6538  0333  3007               	movlw	7
  6539  0334  00E7               	movwf	103	;volatile
  6540                           
  6541                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  6542  0335  30FF               	movlw	255
  6543  0336  00BC               	movwf	60	;volatile
  6544                           
  6545                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  6546  0337  30FF               	movlw	255
  6547  0338  00C7               	movwf	71	;volatile
  6548                           
  6549                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  6550  0339  30FF               	movlw	255
  6551  033A  00D2               	movwf	82	;volatile
  6552                           
  6553                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  6554  033B  30FF               	movlw	255
  6555  033C  00DD               	movwf	93	;volatile
  6556                           
  6557                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
  6558  033D  3007               	movlw	7
  6559  033E  00E8               	movwf	104	;volatile
  6560                           
  6561                           ;mcc_generated_files/pin_manager.c: 127:     RXPPS = 0x17;
  6562  033F  3017               	movlw	23
  6563  0340  003D               	movlb	29	; select bank29
  6564  0341  00CB               	movwf	75	;volatile
  6565                           
  6566                           ;mcc_generated_files/pin_manager.c: 128:     RC6PPS = 0x10;
  6567  0342  3010               	movlw	16
  6568  0343  003E               	movlb	30	; select bank30
  6569  0344  00A6               	movwf	38	;volatile
  6570  0345  0008               	return
  6571  0346                     __end_of_PIN_MANAGER_Initialize:	
  6572                           
  6573                           	psect	text19
  6574  01C0                     __ptext19:	
  6575 ;; *************** function _OSCILLATOR_Initialize *****************
  6576 ;; Defined at:
  6577 ;;		line 59 in file "mcc_generated_files/mcc.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;		None
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;Total ram usage:        0 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; This function calls:
  6598 ;;		Nothing
  6599 ;; This function is called by:
  6600 ;;		_SYSTEM_Initialize
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           
  6605                           ;psect for function _OSCILLATOR_Initialize
  6606  01C0                     _OSCILLATOR_Initialize:	
  6607                           
  6608                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x60;
  6609                           
  6610                           ;incstack = 0
  6611                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6612  01C0  3060               	movlw	96
  6613  01C1  0031               	movlb	17	; select bank17
  6614  01C2  008D               	movwf	13	;volatile
  6615                           
  6616                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  6617  01C3  018F               	clrf	15	;volatile
  6618                           
  6619                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  6620  01C4  0191               	clrf	17	;volatile
  6621                           
  6622                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x00;
  6623  01C5  0193               	clrf	19	;volatile
  6624                           
  6625                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  6626  01C6  0192               	clrf	18	;volatile
  6627  01C7  0008               	return
  6628  01C8                     __end_of_OSCILLATOR_Initialize:	
  6629                           
  6630                           	psect	text20
  6631  025C                     __ptext20:	
  6632 ;; *************** function _EUSART_Initialize *****************
  6633 ;; Defined at:
  6634 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;		None
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  1    wreg      void 
  6641 ;; Registers used:
  6642 ;;		wreg, status,2, status,0, pclath, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6652 ;;Total ram usage:        0 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; Hardware stack levels required when called:    1
  6655 ;; This function calls:
  6656 ;;		_EUSART_SetErrorHandler
  6657 ;;		_EUSART_SetFramingErrorHandler
  6658 ;;		_EUSART_SetOverrunErrorHandler
  6659 ;; This function is called by:
  6660 ;;		_SYSTEM_Initialize
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           
  6665                           ;psect for function _EUSART_Initialize
  6666  025C                     _EUSART_Initialize:	
  6667                           
  6668                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
  6669                           
  6670                           ;incstack = 0
  6671                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6672  025C  3008               	movlw	8
  6673  025D  0022               	movlb	2	; select bank2
  6674  025E  009F               	movwf	31	;volatile
  6675                           
  6676                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x90;
  6677  025F  3090               	movlw	144
  6678  0260  009D               	movwf	29	;volatile
  6679                           
  6680                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
  6681  0261  3024               	movlw	36
  6682  0262  009E               	movwf	30	;volatile
  6683                           
  6684                           ;mcc_generated_files/eusart.c: 80:     SP1BRGL = 0x19;
  6685  0263  3019               	movlw	25
  6686  0264  009B               	movwf	27	;volatile
  6687                           
  6688                           ;mcc_generated_files/eusart.c: 83:     SP1BRGH = 0x00;
  6689  0265  019C               	clrf	28	;volatile
  6690                           
  6691                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  6692  0266  3000               	movlw	0
  6693  0267  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6694  0268  3000               	movlw	0
  6695  0269  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6696  026A  3181  21AE  3182   	fcall	_EUSART_SetFramingErrorHandler
  6697                           
  6698                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  6699  026D  3000               	movlw	0
  6700  026E  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6701  026F  3000               	movlw	0
  6702  0270  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6703  0271  3181  21B4  3182   	fcall	_EUSART_SetOverrunErrorHandler
  6704                           
  6705                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  6706  0274  3000               	movlw	0
  6707  0275  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  6708  0276  3000               	movlw	0
  6709  0277  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6710  0278  3181  21A8         	fcall	_EUSART_SetErrorHandler
  6711                           
  6712                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  6713  027A  0020               	movlb	0	; select bank0
  6714  027B  01EF               	clrf	_eusartRxLastError	;volatile
  6715  027C  0008               	return
  6716  027D                     __end_of_EUSART_Initialize:	
  6717                           
  6718                           	psect	text21
  6719  01B4                     __ptext21:	
  6720 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6721 ;; Defined at:
  6722 ;;		line 170 in file "mcc_generated_files/eusart.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6725 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;		None
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  1    wreg      void 
  6730 ;; Registers used:
  6731 ;;		wreg
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6741 ;;Total ram usage:        2 bytes
  6742 ;; Hardware stack levels used:    1
  6743 ;; This function calls:
  6744 ;;		Nothing
  6745 ;; This function is called by:
  6746 ;;		_EUSART_Initialize
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           
  6751                           ;psect for function _EUSART_SetOverrunErrorHandler
  6752  01B4                     _EUSART_SetOverrunErrorHandler:	
  6753                           
  6754                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
  6755                           
  6756                           ;incstack = 0
  6757                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6758  01B4  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  6759  01B5  0021               	movlb	1	; select bank1
  6760  01B6  00CB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  6761  01B7  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  6762  01B8  00CA               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  6763  01B9  0008               	return
  6764  01BA                     __end_of_EUSART_SetOverrunErrorHandler:	
  6765                           
  6766                           	psect	text22
  6767  01AE                     __ptext22:	
  6768 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6769 ;; Defined at:
  6770 ;;		line 166 in file "mcc_generated_files/eusart.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6773 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;		None
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  1    wreg      void 
  6778 ;; Registers used:
  6779 ;;		wreg
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6789 ;;Total ram usage:        2 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; This function calls:
  6792 ;;		Nothing
  6793 ;; This function is called by:
  6794 ;;		_EUSART_Initialize
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798                           
  6799                           ;psect for function _EUSART_SetFramingErrorHandler
  6800  01AE                     _EUSART_SetFramingErrorHandler:	
  6801                           
  6802                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
  6803                           
  6804                           ;incstack = 0
  6805                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6806  01AE  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  6807  01AF  0021               	movlb	1	; select bank1
  6808  01B0  00CD               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  6809  01B1  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6810  01B2  00CC               	movwf	_EUSART_FramingErrorHandler^(0+128)
  6811  01B3  0008               	return
  6812  01B4                     __end_of_EUSART_SetFramingErrorHandler:	
  6813                           
  6814                           	psect	text23
  6815  01A8                     __ptext23:	
  6816 ;; *************** function _EUSART_SetErrorHandler *****************
  6817 ;; Defined at:
  6818 ;;		line 174 in file "mcc_generated_files/eusart.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6821 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;		None
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1    wreg      void 
  6826 ;; Registers used:
  6827 ;;		wreg
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6837 ;;Total ram usage:        2 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		_EUSART_Initialize
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           
  6847                           ;psect for function _EUSART_SetErrorHandler
  6848  01A8                     _EUSART_SetErrorHandler:	
  6849                           
  6850                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
  6851                           
  6852                           ;incstack = 0
  6853                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6854  01A8  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6855  01A9  0021               	movlb	1	; select bank1
  6856  01AA  00C9               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  6857  01AB  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6858  01AC  00C8               	movwf	_EUSART_ErrorHandler^(0+128)
  6859  01AD  0008               	return
  6860  01AE                     __end_of_EUSART_SetErrorHandler:	
  6861                           
  6862                           	psect	text24
  6863  0242                     __ptext24:	
  6864 ;; *************** function _ADCC_Initialize *****************
  6865 ;; Defined at:
  6866 ;;		line 63 in file "mcc_generated_files/adcc.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;		None
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;		None
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      void 
  6873 ;; Registers used:
  6874 ;;		wreg, status,2
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6884 ;;Total ram usage:        0 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; This function calls:
  6887 ;;		Nothing
  6888 ;; This function is called by:
  6889 ;;		_SYSTEM_Initialize
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           
  6894                           ;psect for function _ADCC_Initialize
  6895  0242                     _ADCC_Initialize:	
  6896                           
  6897                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  6898                           
  6899                           ;incstack = 0
  6900                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  6901  0242  0022               	movlb	2	; select bank2
  6902  0243  018E               	clrf	14	;volatile
  6903                           
  6904                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  6905  0244  018F               	clrf	15	;volatile
  6906                           
  6907                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  6908  0245  0190               	clrf	16	;volatile
  6909                           
  6910                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  6911  0246  0191               	clrf	17	;volatile
  6912                           
  6913                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  6914  0247  0192               	clrf	18	;volatile
  6915                           
  6916                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  6917  0248  0193               	clrf	19	;volatile
  6918                           
  6919                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  6920  0249  018D               	clrf	13	;volatile
  6921                           
  6922                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  6923  024A  0021               	movlb	1	; select bank1
  6924  024B  019E               	clrf	30	;volatile
  6925                           
  6926                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  6927  024C  019B               	clrf	27	;volatile
  6928                           
  6929                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
  6930  024D  019C               	clrf	28	;volatile
  6931                           
  6932                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
  6933  024E  0194               	clrf	20	;volatile
  6934                           
  6935                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x03;
  6936  024F  3003               	movlw	3
  6937  0250  0095               	movwf	21	;volatile
  6938                           
  6939                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
  6940  0251  0196               	clrf	22	;volatile
  6941                           
  6942                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
  6943  0252  0197               	clrf	23	;volatile
  6944                           
  6945                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
  6946  0253  019A               	clrf	26	;volatile
  6947                           
  6948                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
  6949  0254  0199               	clrf	25	;volatile
  6950                           
  6951                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x3F;
  6952  0255  303F               	movlw	63
  6953  0256  0098               	movwf	24	;volatile
  6954                           
  6955                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0xD4;
  6956  0257  30D4               	movlw	212
  6957  0258  0093               	movwf	19	;volatile
  6958                           
  6959                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0xFF;
  6960  0259  30FF               	movlw	255
  6961  025A  009D               	movwf	29	;volatile
  6962  025B  0008               	return
  6963  025C                     __end_of_ADCC_Initialize:	
  6964                           
  6965                           	psect	text25
  6966  019E                     __ptext25:	
  6967 ;; *************** function _EUSART_is_rx_ready *****************
  6968 ;; Defined at:
  6969 ;;		line 99 in file "mcc_generated_files/eusart.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;		None
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  1    wreg      _Bool 
  6976 ;; Registers used:
  6977 ;;		wreg, status,2, status,0
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;Total ram usage:        0 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_main
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           
  6997                           ;psect for function _EUSART_is_rx_ready
  6998  019E                     _EUSART_is_rx_ready:	
  6999                           
  7000                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR3bits.RCIF);
  7001                           
  7002                           ;incstack = 0
  7003                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7004  019E  002E               	movlb	14	; select bank14
  7005  019F  0E0F               	swapf	15,w	;volatile
  7006  01A0  0C89               	rrf	9,f
  7007  01A1  3901               	andlw	1
  7008  01A2  0008               	return
  7009  01A3                     __end_of_EUSART_is_rx_ready:	
  7010                           
  7011                           	psect	text26
  7012  01F3                     __ptext26:	
  7013 ;; *************** function _ADCC_GetSingleConversion *****************
  7014 ;; Defined at:
  7015 ;;		line 132 in file "mcc_generated_files/adcc.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  channel         1    wreg     enum E12246
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;  channel         1    3[COMMON] enum E12246
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  2    0[COMMON] unsigned short 
  7022 ;; Registers used:
  7023 ;;		wreg
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7029 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7032 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7033 ;;Total ram usage:        4 bytes
  7034 ;; Hardware stack levels used:    1
  7035 ;; This function calls:
  7036 ;;		Nothing
  7037 ;; This function is called by:
  7038 ;;		_main
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           
  7043                           ;psect for function _ADCC_GetSingleConversion
  7044  01F3                     _ADCC_GetSingleConversion:	
  7045                           
  7046                           ;incstack = 0
  7047                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  7048                           ;ADCC_GetSingleConversion@channel stored from wreg
  7049  01F3  00F3               	movwf	ADCC_GetSingleConversion@channel
  7050                           
  7051                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
  7052  01F4  0873               	movf	ADCC_GetSingleConversion@channel,w
  7053  01F5  0021               	movlb	1	; select bank1
  7054  01F6  009E               	movwf	30	;volatile
  7055                           
  7056                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
  7057  01F7  1793               	bsf	19,7	;volatile
  7058                           
  7059                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
  7060  01F8  1313               	bcf	19,6	;volatile
  7061                           
  7062                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
  7063  01F9  1413               	bsf	19,0	;volatile
  7064                           
  7065                           ;mcc_generated_files/adcc.c: 147:     __nop();
  7066  01FA  0000               	nop
  7067  01FB                     l302:	
  7068                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
  7069                           
  7070                           
  7071                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
  7072  01FB  0021               	movlb	1	; select bank1
  7073  01FC  1813               	btfsc	19,0	;volatile
  7074  01FD  29FB               	goto	l302
  7075                           
  7076                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7077  01FE  080D               	movf	13,w	;volatile
  7078  01FF  00F1               	movwf	?_ADCC_GetSingleConversion+1
  7079  0200  080C               	movf	12,w	;volatile
  7080  0201  00F0               	movwf	?_ADCC_GetSingleConversion
  7081  0202  0008               	return
  7082  0203                     __end_of_ADCC_GetSingleConversion:	
  7083  007E                     btemp	set	126	;btemp
  7084  007E                     wtemp0	set	126


Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         41
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80      3      49
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1076_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6496
                                             78 BANK0      1     1      0
                                              0 BANK1      3     3      0
           _ADCC_GetSingleConversion
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                              _getch
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5936
                                             70 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5806
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5478
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4133
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2510
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1127
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     812
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0       0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                    _ADCC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _getch
     _EUSART_Read
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      31       7       61.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      8F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 09 17:24:05 2021

                                  __CFG_CP$OFF 0000                                             l60 01D8  
                                           l67 01D1                                    __CFG_LVP$ON 0000  
                                          l302 01FB                                            l404 03BD  
                                          l415 03CB                                            l426 03D9  
                                          l437 03E7                                            l622 035E  
                                          l630 06EB                                            l631 06F2  
                                          l625 037E                                            l393 03AF  
                                          l626 038A                                            l635 070D  
                                          l636 0721                                            l388 0399  
                                          l639 07B6                                            l771 0693  
                                          l784 05A0                                   __CFG_CPD$OFF 0000  
                                          u805 036A                                            u905 0653  
                                          u825 021D                                            u755 02FB  
                                          u870 060E                                            _abs 0214  
                                          _pad 0346                 ?_EUSART_SetFramingErrorHandler 0070  
                      __size_of_PMD_Initialize 0008                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   ?_EUSART_Read 0070  
                                 __CFG_ZCD$OFF 0000                                           ?_abs 0073  
                                         l2027 02AB                                           l2029 02C8  
                                         l2091 03DE                                           l2083 03C2  
                                         l2087 03D0                                           l2079 03B4  
                                         l2095 03EC                                           l1801 0534  
                                         l1803 0543                                           l1715 0230  
                                         l1709 0281                                           l1717 023B  
                                         l1725 0354                                           l1751 05DC  
                                         l1807 0573                                           l1735 0360  
                                         l1831 071C                                           l1903 04A2  
                                         l1809 057F                                           l1729 035C  
                                         l1825 0705                                           l1913 04B3  
                                         l1755 0603                                           l1835 074E  
                                         l1907 04A8                                           l1941 01E2  
                                         l1757 0607                                           l1845 0729  
                                         l1853 07C2                                           l1767 061E  
                                         l1695 02DA                                           l1863 07D5  
                                         l1777 0666                                           l1769 062D  
                                         l1793 0527                                           l1857 07CA  
                                         l1779 0672                                           l1699 02FD  
                                         l1867 07E1                                           l1789 0500  
                                         ?_pad 0024                                           l1897 0481  
                                         l1889 0447                                           STR_1 0800  
                                         u1005 0561                                           u1040 06C1  
                                         u1050 06C2                                           u1125 07C0  
                                         u1145 073D                                           u1155 0749  
                                         _LATA 0016                                           _LATB 0017  
                                         u1095 06FD                                           _LATC 0018  
                                         _LATD 0019                                           _LATE 001A  
                                         _PMD0 0796                                           _PMD1 0797  
                                         _PMD2 0798                                           _PMD3 0799  
                                         _PMD4 079A                                           _PMD5 079B  
                                         _WPUA 0F39                                           _WPUB 0F44  
                                         _WPUC 0F4F                                           _WPUD 0F5A  
                                         _WPUE 0F65                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           abs@a 0073  
                                         _dbuf 00A8                                           _main 0396  
                                         _dtoa 06A5                                           _prec 00A4  
                                         _nout 00A0                                           pad@i 0028  
                                         pad@p 0025                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 002A  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                         start 0002                                  __CFG_CSWEN$ON 0000  
                                __CFG_MCLRE$ON 0000                                          ??_abs 0075  
                                        ??_pad 0027                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0008                  __end_of_OSCILLATOR_Initialize 01C8  
                              __end_of___aodiv 06A5                                          _ADACQ 009D  
                                        _ADCAP 009B                                          _ADACT 0099  
                                        ?_main 0070                                          ?_dtoa 0030  
                                        _ADCLK 0098                                __end_of___aomod 05B2  
                                        _ADCNT 010C                                          _ADPCH 009E  
                                        _ADREF 009A                                          _ADPRE 009C  
                                __CFG_WDTE$OFF 0000                                          _ADRPT 010D  
                               __CFG_DEBUG$OFF 0000                                          _OSCEN 0891  
                                 vfpfcnvrt@fmt 004E                                          _TRISA 0011  
                                        _TRISB 0012                                          _TRISC 0013  
                                        _TRISD 0014                                          _TRISE 0015  
                                        _RXPPS 0ECB                                          u84lld 05DA  
                                        u95lld 04FE                                          _flags 00A6  
                                        _getch 019B                                          _fputc 02D1  
                                        _fputs 027D                                          pad@fp 002C  
                                        _width 00A2                                          _putch 01A3  
                                        dtoa@d 0030                                          dtoa@i 004C  
                                        dtoa@n 0044                                          dtoa@p 003D  
                                        dtoa@s 0042                                          dtoa@w 0040  
                                        status 0003                                          wtemp0 007E  
                              __initialization 07F4                                   __end_of_main 0406  
                                 __end_of_dtoa 07F4                                 ??_EUSART_Write 0070  
                                       ??_main 006E                                         ??_dtoa 0038  
                                       _ADACCH 0091                                         _ADACCL 0090  
            _EUSART_DefaultFramingErrorHandler 0000                                         ?_getch 0070  
                                       _ADCON0 0093                                         _ADCON1 0094  
                                       _ADCON2 0095                                         _ADCON3 0096  
                   _EUSART_OverrunErrorHandler 00CA                                         _ADERRH 0117  
                                       _ADERRL 0116                                         ?_fputc 0072  
                                       _ADLTHH 010F                                         _ADLTHL 010E  
                                       ?_fputs 007A                                         _ADRESH 008D  
                                       _ADRESL 008C                                         _ADSTAT 0097  
                                       _ADUTHH 0111                                         _ADUTHL 0110  
                                       _ANSELA 0F38                                         ?_putch 0070  
                                       _ANSELB 0F43                                         _ANSELC 0F4E  
                                       _ANSELD 0F59                                         _ANSELE 0F64  
                           __CFG_RSTOSC$HFINT1 0000                     __end_of_EUSART_is_rx_ready 01A3  
                                       _RC1REG 0119                                         _RC1STA 011D  
                                       _ODCONA 0F3A                                         _ODCONB 0F45  
                                       _ODCONC 0F50                                         _RC6PPS 0F26  
                                       _ODCOND 0F5B                                         _ODCONE 0F66  
                               __CFG_WDTCCS$SC 0000                                         _INLVLA 0F3C  
                                       _INLVLB 0F47                                         _INLVLC 0F52  
                                       _INLVLD 0F5D                                         _INLVLE 0F68  
                                       _OSCFRQ 0893                                         _TX1REG 011A  
                                       _TX1STA 011E                                 __CFG_PWRTE$OFF 0000  
                                 vfprintf@cfmt 0064                                      ??___aodiv 0070  
                                    ??___aomod 0070                                 __CFG_STVREN$ON 0000  
                                       _printf 0203                                         pad@buf 0024  
                                       dtoa@fp 003F                                         _strlen 022B  
                              _ADCC_Initialize 0242                                         fputc@c 0072  
                               _PMD_Initialize 01C8                                         fputs@c 0020  
                                       fputs@i 0021                                         fputs@s 0023  
            __size_of_ADCC_GetSingleConversion 0010                               __end_of_vfprintf 02D1  
                    ?_ADCC_GetSingleConversion 0070                           __size_of_EUSART_Read 000C  
                            _SYSTEM_Initialize 01E4                        __end_of__initialization 07FD  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0072                                  __end_of_getch 019E  
                                __end_of_fputc 0306                                  __end_of_fputs 02A2  
                                __end_of_putch 01A8                         __end_of_PMD_Initialize 01D0  
              ??_EUSART_SetOverrunErrorHandler 0072                                        ??_getch 0070  
                                      ??_fputc 0075                      __end_of_SYSTEM_Initialize 01F3  
                                      ??_fputs 007B                                        ??_putch 0071  
                                   __pbssBANK0 006F                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 01D8                                     __pmaintext 0396  
                              __CFG_PPS1WAY$ON 0000                        __end_of_ADCC_Initialize 025C  
                                      _ADFLTRH 0115                                        _ADFLTRL 0114  
                                      _ADPREVH 008F                                        _ADPREVL 008E  
                                      _ADSTPTH 0113                                        _ADSTPTL 0112  
                                      ?_printf 0066                                ?_PMD_Initialize 0070  
                                      ?_strlen 0070                                        _SP1BRGH 011C  
                                      _SP1BRGL 011B                                        _OSCCON1 088D  
                                      _OSCCON3 088F                             __size_of_vfpfcnvrt 00D0  
                                      _OSCTUNE 0892                                        _SLRCONA 0F3B  
                                      _SLRCONB 0F46                                        _SLRCONC 0F51  
                                      _SLRCOND 0F5C                                        _SLRCONE 0F67  
                     ??_EUSART_SetErrorHandler 0072                           __CFG_SCANE$available 0000  
                                      ___aodiv 05B2                                        ___aomod 04D6  
                                    ?_vfprintf 005E                                        __ptext1 0203  
                                      __ptext2 02A2                                        __ptext3 0406  
                                      __ptext4 06A5                                        __ptext5 0346  
                                      __ptext6 022B                                        __ptext7 027D  
                                      __ptext8 02D1                                        __ptext9 01A3  
                              __size_of_printf 0011                                __size_of_strlen 0017  
                        _OSCILLATOR_Initialize 01C0                                   __size_of_abs 0017  
                                 __size_of_pad 0050                       ??_PIN_MANAGER_Initialize 0070  
                   __size_of_SYSTEM_Initialize 000F                                        clrloop0 01BB  
                         end_of_initialization 07FD          __end_of_EUSART_SetOverrunErrorHandler 01BA  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 01B4  
                                      fputc@fp 0074                                        fputs@fp 007A  
                            _EUSART_Initialize 025C                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 04D6                             _EUSART_is_rx_ready 019E  
                             ?_ADCC_Initialize 0070                                     ??_vfprintf 0061  
             __end_of_ADCC_GetSingleConversion 0203                          __CFG_WDTCPS$WDTCPS_31 0000  
                                      strlen@a 0073                                        strlen@s 0074  
                          ??_EUSART_Initialize 0072                            ?_EUSART_is_rx_ready 0070  
                        __size_of_EUSART_Write 0008                               __CFG_FEXTOSC$OFF 0000  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 027D  
                         ??_EUSART_is_rx_ready 0070                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 004F                                    vfpfcnvrt@fp 005D  
                                  vfpfcnvrt@ll 0055                                   _EUSART_Write 01D0  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 0214  
                               __end_of_strlen 0242                            start_initialization 07F4  
              __size_of_PIN_MANAGER_Initialize 0040                                    __end_of_abs 022B  
                                  __end_of_pad 0396                                  ??_EUSART_Read 0070  
                                  putch@txData 0071                 ?_EUSART_SetOverrunErrorHandler 0070  
                             __CFG_LPBOREN$OFF 0000                                    vfprintf@fmt 005E  
                   _EUSART_FramingErrorHandler 00CC                               ??_PMD_Initialize 0070  
                       _EUSART_SetErrorHandler 01A8                                       ??_printf 006A  
                                     ??_strlen 0072                       _ADCC_GetSingleConversion 01F3  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00CE                               ___aodiv@dividend 0028  
                   __size_of_EUSART_Initialize 0021                            __end_of_EUSART_Read 01E4  
                                    __pnvBANK1 00C8                         _PIN_MANAGER_Initialize 0306  
              ADCC_GetSingleConversion@channel 0073                                       ?___aodiv 0020  
                                     ?___aomod 0020                               ___aodiv@quotient 0073  
                            __size_of_vfprintf 002F                                       _BAUD1CON 011F  
                               __size_of_getch 0003                                 __size_of_fputc 0035  
                               __size_of_fputs 0025                                 __size_of_putch 0005  
                                     _LATAbits 0016         EUSART_SetErrorHandler@interruptHandler 0070  
                                    clear_ram0 01BA                              _eusartRxLastError 006F  
              ??_EUSART_SetFramingErrorHandler 0072                                       _PIR3bits 070F  
            _EUSART_DefaultOverrunErrorHandler 0000                                      _vfpfcnvrt 0406  
                                   _ADCON0bits 0093                                     _ADCON1bits 0094  
                                   _ADCON2bits 0095                                     _ADCON3bits 0096  
                                    main@letra 00D0                                      main@valor 00CE  
                                  _EUSART_Read 01D8                                     _ADSTATbits 0097  
                                   vfprintf@ap 0060                                     vfprintf@fp 0063  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 00C8  
                             __size_of___aodiv 00F3                               __size_of___aomod 00DC  
                                   ?_vfpfcnvrt 004E                                ___aodiv@divisor 0020  
                              ___aodiv@counter 0071                       __size_of_ADCC_Initialize 001A  
                                     _dtoa$777 003B                                       __ptext10 01D0  
                                     __ptext11 0214                                       __ptext20 025C  
                                     __ptext12 04D6                                       __ptext21 01B4  
                                     __ptext13 05B2                                       __ptext22 01AE  
                                     __ptext14 019B                                       __ptext23 01A8  
                                     __ptext15 01D8                                       __ptext24 0242  
                                     __ptext16 01E4                                       __ptext25 019E  
                                     __ptext17 01C8                                       __ptext26 01F3  
                                     __ptext18 0306                                       __ptext19 01C0  
                  __size_of_EUSART_is_rx_ready 0005                                  __size_of_main 0070  
                                __size_of_dtoa 014F                           __CFG_WDTCWS$WDTCWS_7 0000  
                      ?_EUSART_SetErrorHandler 0070                                     _RC1STAbits 011D  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                     ??_ADCC_GetSingleConversion 0073  
                                     _vfprintf 02A2                                      printf@fmt 0066  
        __end_of_EUSART_SetFramingErrorHandler 01B4         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 01AE                               ___aomod@dividend 0028  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 01AE  
                            __CFG_CLKOUTEN$OFF 0000                                       printf@ap 006D  
EUSART_SetFramingErrorHandler@interruptHandler 0070                                ___aomod@divisor 0020  
                                  ??_vfpfcnvrt 0050                                ___aomod@counter 0071  
                                __pstringtext1 0800                                  __pstringtext2 0000  
                                   _TX1STAbits 011E                             EUSART_Write@txData 0070  
                                 ___aodiv@sign 0072                 __end_of_PIN_MANAGER_Initialize 0346  
                            ??_ADCC_Initialize 0070                                   ___aomod@sign 0072  
